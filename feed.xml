<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://jeong3427.github.io//jekyll-theme-yat/feed.xml" rel="self" type="application/atom+xml" /><link href="https://jeong3427.github.io//jekyll-theme-yat/" rel="alternate" type="text/html" /><updated>2025-06-11T22:11:04+09:00</updated><id>https://jeong3427.github.io//jekyll-theme-yat/feed.xml</id><title type="html">hjim 코드 저장소</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><author><name>jeong3427</name></author><entry><title type="html">네이버 야구 경기 결과 크롤링</title><link href="https://jeong3427.github.io//jekyll-theme-yat/python/2025/06/06/naver_crawl_gpt.html" rel="alternate" type="text/html" title="네이버 야구 경기 결과 크롤링" /><published>2025-06-06T00:00:00+09:00</published><updated>2025-06-06T00:00:00+09:00</updated><id>https://jeong3427.github.io//jekyll-theme-yat/python/2025/06/06/naver_crawl_gpt</id><content type="html" xml:base="https://jeong3427.github.io//jekyll-theme-yat/python/2025/06/06/naver_crawl_gpt.html"><![CDATA[<p>네이버 야구 결과 ui 변화로 코드 전면 수정</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">### 날짜 세팅 ###
</span>
<span class="c1">#-*- encoding: utf-8 -*-
</span><span class="kn">from</span> <span class="n">selenium</span> <span class="kn">import</span> <span class="n">webdriver</span>
<span class="kn">from</span> <span class="n">selenium.webdriver.chrome.service</span> <span class="kn">import</span> <span class="n">Service</span> <span class="k">as</span> <span class="n">ChromeService</span>
<span class="kn">from</span> <span class="n">selenium.webdriver.chrome.options</span> <span class="kn">import</span> <span class="n">Options</span> <span class="k">as</span> <span class="n">ChromeOptions</span>
<span class="kn">from</span> <span class="n">webdriver_manager.chrome</span> <span class="kn">import</span> <span class="n">ChromeDriverManager</span>

<span class="n">options</span> <span class="o">=</span> <span class="nc">ChromeOptions</span><span class="p">()</span>

<span class="kn">from</span> <span class="n">selenium.webdriver.common.by</span> <span class="kn">import</span> <span class="n">By</span>
<span class="kn">from</span> <span class="n">selenium.webdriver.support.ui</span> <span class="kn">import</span> <span class="n">WebDriverWait</span>
<span class="kn">from</span> <span class="n">selenium.webdriver.support</span> <span class="kn">import</span> <span class="n">expected_conditions</span> <span class="k">as</span> <span class="n">EC</span>
<span class="kn">from</span> <span class="n">selenium.webdriver.support.ui</span> <span class="kn">import</span> <span class="n">Select</span>
<span class="kn">import</span> <span class="n">collections</span>
<span class="k">if</span> <span class="ow">not</span> <span class="nf">hasattr</span><span class="p">(</span><span class="n">collections</span><span class="p">,</span> <span class="sh">'</span><span class="s">Callable</span><span class="sh">'</span><span class="p">):</span>
    <span class="n">collections</span><span class="p">.</span><span class="n">Callable</span> <span class="o">=</span> <span class="n">collections</span><span class="p">.</span><span class="n">abc</span><span class="p">.</span><span class="n">Callable</span>
    
<span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">from</span> <span class="n">bs4</span> <span class="kn">import</span> <span class="n">BeautifulSoup</span> <span class="k">as</span> <span class="n">bs</span>
<span class="kn">import</span> <span class="n">requests</span>
<span class="kn">import</span> <span class="n">time</span>
<span class="kn">import</span> <span class="n">re</span>


<span class="c1"># 경고 off
</span><span class="kn">import</span> <span class="n">warnings</span>
<span class="n">warnings</span><span class="p">.</span><span class="nf">filterwarnings</span><span class="p">(</span><span class="sh">"</span><span class="s">ignore</span><span class="sh">"</span><span class="p">,</span> <span class="n">category</span><span class="o">=</span><span class="nb">DeprecationWarning</span><span class="p">)</span>
<span class="n">pd</span><span class="p">.</span><span class="nf">set_option</span><span class="p">(</span><span class="sh">'</span><span class="s">mode.chained_assignment</span><span class="sh">'</span><span class="p">,</span>  <span class="bp">None</span><span class="p">)</span> 

<span class="c1"># Selenium 옵션 설정
</span><span class="n">options</span> <span class="o">=</span> <span class="nc">ChromeOptions</span><span class="p">()</span>
<span class="n">options</span><span class="p">.</span><span class="nf">add_argument</span><span class="p">(</span><span class="sh">"</span><span class="s">--headless</span><span class="sh">"</span><span class="p">)</span>  <span class="c1"># GUI 없이 실행 (성능 개선)
</span><span class="n">options</span><span class="p">.</span><span class="nf">add_argument</span><span class="p">(</span><span class="sh">"</span><span class="s">--disable-gpu</span><span class="sh">"</span><span class="p">)</span>
<span class="n">options</span><span class="p">.</span><span class="nf">add_argument</span><span class="p">(</span><span class="sh">"</span><span class="s">--no-sandbox</span><span class="sh">"</span><span class="p">)</span>
<span class="n">options</span><span class="p">.</span><span class="nf">add_argument</span><span class="p">(</span><span class="sh">"</span><span class="s">--disable-dev-shm-usage</span><span class="sh">"</span><span class="p">)</span>

<span class="c1"># 크롬 드라이버 최신 버전 설정
</span><span class="n">service</span> <span class="o">=</span> <span class="nc">ChromeService</span><span class="p">(</span><span class="n">executable_path</span><span class="o">=</span><span class="nc">ChromeDriverManager</span><span class="p">().</span><span class="nf">install</span><span class="p">())</span>


<span class="c1">##0. 날짜 입력 칸 세팅
</span><span class="n">game_day</span> <span class="o">=</span> <span class="nf">input</span><span class="p">(</span><span class="sh">'</span><span class="s">알고 싶은 날짜 입력(YYYYMMDD) : </span><span class="sh">'</span><span class="p">)</span>
<span class="n">year</span> <span class="o">=</span> <span class="n">game_day</span><span class="p">[:</span><span class="mi">4</span><span class="p">]</span>
<span class="n">month</span> <span class="o">=</span> <span class="n">game_day</span><span class="p">[</span><span class="mi">4</span><span class="p">:</span><span class="mi">6</span><span class="p">]</span>
<span class="n">day</span> <span class="o">=</span>  <span class="n">game_day</span><span class="p">[</span><span class="mi">6</span><span class="p">:]</span>
<span class="n">date_num</span> <span class="o">=</span> <span class="n">year</span><span class="o">+</span><span class="sh">'</span><span class="s">-</span><span class="sh">'</span><span class="o">+</span><span class="n">month</span><span class="o">+</span><span class="sh">'</span><span class="s">-</span><span class="sh">'</span><span class="o">+</span><span class="n">day</span>
        
<span class="c1"># chrome driver
</span><span class="n">driver</span> <span class="o">=</span> <span class="n">webdriver</span><span class="p">.</span><span class="nc">Chrome</span><span class="p">(</span><span class="n">service</span><span class="o">=</span><span class="n">service</span><span class="p">,</span> <span class="n">options</span><span class="o">=</span><span class="n">options</span><span class="p">)</span>


<span class="c1">### kbo 홈페이지
##1. 날짜 선택
</span><span class="n">kbo_url</span> <span class="o">=</span> <span class="sh">'</span><span class="s">https://www.koreabaseball.com/Schedule/GameCenter/Main.aspx</span><span class="sh">'</span>
<span class="n">driver</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="n">kbo_url</span><span class="p">)</span>

<span class="c1">##1-1. kbo 홈페이지에서 달력 버튼 누르기
</span><span class="n">calender_button</span> <span class="o">=</span> <span class="nc">WebDriverWait</span><span class="p">(</span><span class="n">driver</span><span class="p">,</span><span class="mi">10</span><span class="p">).</span><span class="nf">until</span><span class="p">(</span>
    <span class="n">EC</span><span class="p">.</span><span class="nf">element_to_be_clickable</span><span class="p">((</span><span class="n">By</span><span class="p">.</span><span class="n">XPATH</span><span class="p">,</span><span class="sh">'</span><span class="s">//*[@id=</span><span class="sh">"</span><span class="s">contents</span><span class="sh">"</span><span class="s">]/div[2]/div/img</span><span class="sh">'</span><span class="p">))</span>
<span class="p">)</span>

<span class="n">calender_button</span><span class="p">.</span><span class="nf">click</span><span class="p">()</span>

<span class="c1">##1-2. 달력에서 설정한 연도, 월, 일 누르기
</span><span class="n">year_select</span><span class="o">=</span><span class="nc">Select</span><span class="p">(</span><span class="n">driver</span><span class="p">.</span><span class="nf">find_element</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">XPATH</span><span class="p">,</span><span class="sh">'</span><span class="s">//*[@id=</span><span class="sh">"</span><span class="s">ui-datepicker-div</span><span class="sh">"</span><span class="s">]/div/div/select[2]</span><span class="sh">'</span><span class="p">))</span>
<span class="n">year_select</span><span class="p">.</span><span class="nf">select_by_value</span><span class="p">(</span><span class="n">year</span><span class="p">)</span>

<span class="n">month_select</span><span class="o">=</span><span class="nc">Select</span><span class="p">(</span><span class="n">driver</span><span class="p">.</span><span class="nf">find_element</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">XPATH</span><span class="p">,</span> <span class="sh">'</span><span class="s">//*[@id=</span><span class="sh">"</span><span class="s">ui-datepicker-div</span><span class="sh">"</span><span class="s">]/div/div/select[1]</span><span class="sh">'</span><span class="p">))</span>
<span class="n">month_select</span><span class="p">.</span><span class="nf">select_by_value</span><span class="p">(</span><span class="nf">str</span><span class="p">(</span><span class="nf">int</span><span class="p">(</span><span class="n">month</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>

<span class="k">if</span> <span class="nf">int</span><span class="p">(</span><span class="n">day</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">9</span><span class="p">:</span>
    <span class="n">day</span> <span class="o">=</span> <span class="n">day</span>
<span class="k">if</span> <span class="nf">int</span><span class="p">(</span><span class="n">day</span><span class="p">)</span> <span class="o">&lt;</span><span class="mi">10</span><span class="p">:</span>
    <span class="n">day</span> <span class="o">=</span> <span class="nf">str</span><span class="p">(</span><span class="n">day</span><span class="p">)</span>
    <span class="n">day</span> <span class="o">=</span> <span class="n">day</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span>

<span class="n">day_pick</span> <span class="o">=</span> <span class="nc">WebDriverWait</span><span class="p">(</span><span class="n">driver</span><span class="p">,</span><span class="mi">10</span><span class="p">).</span><span class="nf">until</span><span class="p">(</span>
    <span class="n">EC</span><span class="p">.</span><span class="nf">element_to_be_clickable</span><span class="p">((</span><span class="n">By</span><span class="p">.</span><span class="n">LINK_TEXT</span><span class="p">,</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">day</span><span class="si">}</span><span class="sh">'</span><span class="p">))</span>
<span class="p">)</span>

<span class="n">day_pick</span><span class="p">.</span><span class="nf">click</span><span class="p">()</span>

<span class="c1">##1-3. 그 날 진행된 게임 결과 정리
</span><span class="n">kbo_html</span> <span class="o">=</span> <span class="n">driver</span><span class="p">.</span><span class="n">page_source</span>
<span class="n">kbo_soup</span> <span class="o">=</span> <span class="nf">bs</span><span class="p">(</span><span class="n">kbo_html</span><span class="p">,</span> <span class="sh">'</span><span class="s">lxml</span><span class="sh">'</span><span class="p">)</span>

<span class="n">today_game</span> <span class="o">=</span> <span class="n">kbo_soup</span><span class="p">.</span><span class="nf">find_all</span><span class="p">(</span><span class="sh">'</span><span class="s">li</span><span class="sh">'</span><span class="p">,</span> <span class="n">class_</span> <span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="nf">compile</span><span class="p">(</span><span class="sh">'</span><span class="s">game-cont</span><span class="sh">'</span><span class="p">))</span>

<span class="n">total_game_list</span><span class="o">=</span><span class="p">[]</span>

<span class="k">for</span> <span class="n">info</span> <span class="ow">in</span> <span class="n">today_game</span><span class="p">:</span>
    <span class="n">g_id</span> <span class="o">=</span> <span class="n">info</span><span class="p">.</span><span class="n">attrs</span><span class="p">[</span><span class="sh">'</span><span class="s">g_id</span><span class="sh">'</span><span class="p">]</span>
    <span class="n">clss_info</span><span class="o">=</span> <span class="n">info</span><span class="p">.</span><span class="n">attrs</span><span class="p">[</span><span class="sh">'</span><span class="s">class</span><span class="sh">'</span><span class="p">]</span>
    <span class="n">total_game_list</span><span class="p">.</span><span class="nf">append</span><span class="p">((</span><span class="n">g_id</span><span class="p">,</span><span class="n">clss_info</span><span class="p">))</span>

<span class="n">df_total_game</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">(</span><span class="n">total_game_list</span><span class="p">)</span>
<span class="n">df_total_game</span><span class="p">.</span><span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="sh">'</span><span class="s">g_id</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">status</span><span class="sh">'</span><span class="p">]</span>


<span class="n">game_count</span> <span class="o">=</span> <span class="nf">len</span><span class="p">(</span><span class="n">today_game</span><span class="p">)</span>

<span class="n">driver</span><span class="p">.</span><span class="nf">quit</span><span class="p">()</span>
</code></pre></div></div>

<p>.</p>

<p>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">### 기록 ###
</span>
<span class="c1">##2. 네이버 기록 크롤링
</span><span class="n">df_etc_crawl</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">()</span>
<span class="n">df_bat_crawl</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">()</span>
<span class="n">df_pit_crawl</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">()</span>


<span class="k">for</span> <span class="n">g</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">game_count</span><span class="p">):</span>
    <span class="k">try</span><span class="p">:</span>    
        <span class="k">if</span> <span class="sh">'</span><span class="s">cancel</span><span class="sh">'</span> <span class="ow">in</span> <span class="nf">str</span><span class="p">(</span><span class="n">df_total_game</span><span class="p">[</span><span class="sh">'</span><span class="s">status</span><span class="sh">'</span><span class="p">][</span><span class="n">g</span><span class="p">]):</span>
            <span class="k">continue</span>  
        
        <span class="k">elif</span> <span class="sh">'</span><span class="s">end</span><span class="sh">'</span> <span class="ow">in</span> <span class="nf">str</span><span class="p">(</span><span class="n">df_total_game</span><span class="p">[</span><span class="sh">'</span><span class="s">status</span><span class="sh">'</span><span class="p">][</span><span class="n">g</span><span class="p">])</span> <span class="p">:</span>
            <span class="n">game_name</span> <span class="o">=</span> <span class="nf">str</span><span class="p">(</span><span class="n">df_total_game</span><span class="p">[</span><span class="sh">'</span><span class="s">g_id</span><span class="sh">'</span><span class="p">][</span><span class="n">g</span><span class="p">])</span>

            <span class="n">away_team_name</span> <span class="o">=</span> <span class="n">game_name</span><span class="p">[</span><span class="mi">8</span><span class="p">:</span><span class="mi">10</span><span class="p">]</span>
            <span class="n">home_team_name</span> <span class="o">=</span> <span class="n">game_name</span><span class="p">[</span><span class="mi">10</span><span class="p">:</span><span class="mi">12</span><span class="p">]</span>
            <span class="n">dic_korean_team_name</span> <span class="o">=</span> <span class="p">{</span><span class="sh">"</span><span class="s">SK</span><span class="sh">"</span> <span class="p">:</span> <span class="sh">"</span><span class="s">SSG</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">SS</span><span class="sh">"</span> <span class="p">:</span> <span class="sh">"</span><span class="s">삼성</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">OB</span><span class="sh">"</span><span class="p">:</span><span class="sh">"</span><span class="s">두산</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">HT</span><span class="sh">"</span><span class="p">:</span><span class="sh">"</span><span class="s">기아</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">NC</span><span class="sh">"</span><span class="p">:</span><span class="sh">"</span><span class="s">NC</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">WO</span><span class="sh">"</span><span class="p">:</span><span class="sh">"</span><span class="s">키움</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">LG</span><span class="sh">"</span><span class="p">:</span><span class="sh">"</span><span class="s">LG</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">KT</span><span class="sh">"</span><span class="p">:</span><span class="sh">"</span><span class="s">kt</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">HH</span><span class="sh">"</span><span class="p">:</span><span class="sh">"</span><span class="s">한화</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">LT</span><span class="sh">"</span><span class="p">:</span><span class="sh">"</span><span class="s">롯데</span><span class="sh">"</span><span class="p">}</span>
            <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="n">dic_korean_team_name</span><span class="p">[</span><span class="n">away_team_name</span><span class="p">]</span><span class="si">}</span><span class="sh">"</span> <span class="sh">"</span><span class="s"> : </span><span class="sh">"</span> <span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="n">dic_korean_team_name</span><span class="p">[</span><span class="n">home_team_name</span><span class="p">]</span><span class="si">}</span><span class="s"> 시작</span><span class="sh">"</span><span class="p">)</span>
            
        
            <span class="n">driver</span> <span class="o">=</span> <span class="n">webdriver</span><span class="p">.</span><span class="nc">Chrome</span><span class="p">(</span><span class="n">service</span><span class="o">=</span><span class="n">service</span><span class="p">,</span> <span class="n">options</span><span class="o">=</span><span class="n">options</span><span class="p">)</span>
            <span class="n">url</span> <span class="o">=</span> <span class="sh">'</span><span class="s">https://m.sports.naver.com/game/</span><span class="sh">'</span><span class="o">+</span><span class="n">df_total_game</span><span class="p">[</span><span class="sh">'</span><span class="s">g_id</span><span class="sh">'</span><span class="p">][</span><span class="n">g</span><span class="p">]</span><span class="o">+</span><span class="n">year</span><span class="o">+</span><span class="sh">'</span><span class="s">/record</span><span class="sh">'</span>

            <span class="n">driver</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
            
            <span class="n">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
            
            <span class="n">naver_page_loading</span> <span class="o">=</span> <span class="nc">WebDriverWait</span><span class="p">(</span><span class="n">driver</span><span class="p">,</span><span class="mi">15</span><span class="p">).</span><span class="nf">until</span><span class="p">(</span>
                <span class="n">EC</span><span class="p">.</span><span class="nf">presence_of_all_elements_located</span><span class="p">((</span><span class="n">By</span><span class="p">.</span><span class="n">CLASS_NAME</span><span class="p">,</span><span class="sh">'</span><span class="s">result_list_group</span><span class="sh">'</span><span class="p">))</span>
                <span class="p">)</span>

            <span class="n">naver_html</span> <span class="o">=</span> <span class="n">driver</span><span class="p">.</span><span class="n">page_source</span>
            <span class="n">naver_soup</span> <span class="o">=</span> <span class="nf">bs</span><span class="p">(</span><span class="n">naver_html</span><span class="p">,</span> <span class="sh">'</span><span class="s">lxml</span><span class="sh">'</span><span class="p">)</span>

            <span class="c1">##2-1. 기타 항목
</span>            <span class="n">naver_etc</span> <span class="o">=</span> <span class="n">naver_soup</span><span class="p">.</span><span class="nf">find_all</span><span class="p">(</span><span class="sh">'</span><span class="s">dd</span><span class="sh">'</span><span class="p">,</span> <span class="n">class_</span><span class="o">=</span> <span class="k">lambda</span> <span class="n">x</span> <span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="nf">startswith</span><span class="p">(</span><span class="sh">'</span><span class="s">MatchResult_info</span><span class="sh">'</span><span class="p">))</span>

            <span class="n">etc_name_list</span> <span class="o">=</span><span class="p">[]</span>
            <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="n">naver_etc</span><span class="p">:</span>
                <span class="n">name_list</span> <span class="o">=</span> <span class="n">n</span><span class="p">.</span><span class="nf">get_text</span><span class="p">()</span>
                <span class="n">etc_name_list</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">name_list</span><span class="p">)</span>

            <span class="n">etc_category_list</span><span class="o">=</span><span class="p">[]</span>
            <span class="n">etc_category</span> <span class="o">=</span> <span class="n">naver_soup</span><span class="p">.</span><span class="nf">find_all</span><span class="p">(</span><span class="sh">'</span><span class="s">dt</span><span class="sh">'</span><span class="p">,</span> <span class="n">class_</span><span class="o">=</span> <span class="k">lambda</span> <span class="n">x</span> <span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="nf">startswith</span><span class="p">(</span><span class="sh">'</span><span class="s">MatchResult_kind</span><span class="sh">'</span><span class="p">))</span>

            <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="n">etc_category</span><span class="p">:</span>
                <span class="n">category_list</span> <span class="o">=</span> <span class="n">n</span><span class="p">.</span><span class="nf">get_text</span><span class="p">()</span>
                <span class="n">etc_category_list</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">category_list</span><span class="p">)</span>
            
            <span class="c1"># 최종 기타 데이터프레임
</span>            <span class="n">df_naver_etc</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">(</span><span class="nf">list</span><span class="p">(</span><span class="nf">zip</span><span class="p">(</span><span class="n">etc_category_list</span><span class="p">,</span> <span class="n">etc_name_list</span><span class="p">)),</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="sh">'</span><span class="s">항목</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">이름</span><span class="sh">'</span><span class="p">])</span>

			<span class="c1">#### 타자 ####
</span>            <span class="c1">##2-2-a. 타자 player_id, 이름
</span>            <span class="n">batter_data</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="n">batter_uls</span> <span class="o">=</span> <span class="n">naver_soup</span><span class="p">.</span><span class="nf">find_all</span><span class="p">(</span><span class="sh">'</span><span class="s">ul</span><span class="sh">'</span><span class="p">,</span> <span class="n">class_</span><span class="o">=</span><span class="sh">'</span><span class="s">player_list PlayerRecord_type_batter__1rHnm</span><span class="sh">'</span><span class="p">)</span>
            <span class="k">for</span> <span class="n">ul</span> <span class="ow">in</span> <span class="n">batter_uls</span><span class="p">:</span>
                <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">ul</span><span class="p">.</span><span class="nf">find_all</span><span class="p">(</span><span class="sh">'</span><span class="s">a</span><span class="sh">'</span><span class="p">,</span> <span class="n">class_</span><span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="nf">compile</span><span class="p">(</span><span class="sa">r</span><span class="sh">'</span><span class="s">^PlayerRecord_player_info</span><span class="sh">'</span><span class="p">)):</span>
                    <span class="n">href</span> <span class="o">=</span> <span class="n">a</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">'</span><span class="s">href</span><span class="sh">'</span><span class="p">)</span>
                    <span class="n">name_tag</span> <span class="o">=</span> <span class="n">a</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="sh">'</span><span class="s">span</span><span class="sh">'</span><span class="p">,</span> <span class="n">class_</span><span class="o">=</span><span class="sh">'</span><span class="s">PlayerRecord_name__1W_c0</span><span class="sh">'</span><span class="p">)</span>
                    <span class="k">if</span> <span class="n">href</span> <span class="ow">and</span> <span class="n">name_tag</span><span class="p">:</span>
                        <span class="n">numeric_id</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="nf">sub</span><span class="p">(</span><span class="sa">r</span><span class="sh">'</span><span class="s">\D</span><span class="sh">'</span><span class="p">,</span> <span class="sh">''</span><span class="p">,</span> <span class="n">href</span><span class="p">)</span>
                        <span class="n">player_name</span> <span class="o">=</span> <span class="n">name_tag</span><span class="p">.</span><span class="nf">get_text</span><span class="p">(</span><span class="n">strip</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
                        <span class="k">if</span> <span class="n">numeric_id</span><span class="p">:</span>
                            <span class="n">batter_data</span><span class="p">.</span><span class="nf">append</span><span class="p">([</span><span class="n">numeric_id</span><span class="p">,</span> <span class="n">player_name</span><span class="p">])</span>

            <span class="n">batter_df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">(</span><span class="n">batter_data</span><span class="p">,</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="sh">"</span><span class="s">player_id</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">이름</span><span class="sh">"</span><span class="p">])</span>

            <span class="c1">##2-2-b. 타자 포지션 정보
</span>            <span class="n">li_tags</span> <span class="o">=</span> <span class="n">naver_soup</span><span class="p">.</span><span class="nf">find_all</span><span class="p">(</span><span class="sh">'</span><span class="s">li</span><span class="sh">'</span><span class="p">,</span> <span class="n">class_</span><span class="o">=</span><span class="sh">'</span><span class="s">PlayerRecord_player_item__3ECIB</span><span class="sh">'</span><span class="p">)</span>

            <span class="n">records</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="k">for</span> <span class="n">li</span> <span class="ow">in</span> <span class="n">li_tags</span><span class="p">:</span>
                <span class="c1"># 하위 요소들을 모두 span 또는 div 단위로 추출
</span>                <span class="n">fields</span> <span class="o">=</span> <span class="p">[</span><span class="n">elem</span><span class="p">.</span><span class="nf">get_text</span><span class="p">(</span><span class="n">strip</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span> <span class="k">for</span> <span class="n">elem</span> <span class="ow">in</span> <span class="n">li</span><span class="p">.</span><span class="nf">find_all</span><span class="p">([</span><span class="sh">'</span><span class="s">span</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">div</span><span class="sh">'</span><span class="p">])</span> <span class="k">if</span> <span class="n">elem</span><span class="p">.</span><span class="nf">get_text</span><span class="p">(</span><span class="n">strip</span><span class="o">=</span><span class="bp">True</span><span class="p">)]</span>
                <span class="n">records</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">fields</span><span class="p">)</span>

            <span class="n">max_len</span> <span class="o">=</span> <span class="nf">max</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">row</span><span class="p">)</span> <span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">records</span><span class="p">)</span>
            <span class="n">normalized_rows</span> <span class="o">=</span> <span class="p">[</span><span class="n">row</span> <span class="o">+</span> <span class="p">[</span><span class="sh">''</span><span class="p">]</span> <span class="o">*</span> <span class="p">(</span><span class="n">max_len</span> <span class="o">-</span> <span class="nf">len</span><span class="p">(</span><span class="n">row</span><span class="p">))</span> <span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">records</span><span class="p">]</span>
            <span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="s">field_</span><span class="si">{</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="sh">'</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">max_len</span><span class="p">)]</span>

            <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">(</span><span class="n">normalized_rows</span><span class="p">,</span> <span class="n">columns</span><span class="o">=</span><span class="n">columns</span><span class="p">)</span>
            <span class="n">df_replaced</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="nf">replace</span><span class="p">(</span><span class="sh">''</span><span class="p">,</span> <span class="n">pd</span><span class="p">.</span><span class="n">NA</span><span class="p">)</span>

            <span class="c1"># NaN이 하나라도 있는 행은 모두 제거
</span>            <span class="n">df_cleaned</span> <span class="o">=</span> <span class="n">df_replaced</span><span class="p">.</span><span class="nf">dropna</span><span class="p">().</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
            <span class="n">df_position</span> <span class="o">=</span> <span class="n">df_cleaned</span><span class="p">.</span><span class="nf">drop</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="sh">'</span><span class="s">field_2</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">field_3</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">field_4</span><span class="sh">'</span><span class="p">],</span> <span class="n">errors</span><span class="o">=</span><span class="sh">'</span><span class="s">ignore</span><span class="sh">'</span><span class="p">)</span>
            

            <span class="c1">##2-2-c. 타자 기록
</span>            <span class="n">tables</span> <span class="o">=</span> <span class="n">naver_soup</span><span class="p">.</span><span class="nf">find_all</span><span class="p">(</span><span class="sh">'</span><span class="s">table</span><span class="sh">'</span><span class="p">,</span> <span class="n">class_</span><span class="o">=</span><span class="sh">'</span><span class="s">PlayerRecord_record_table__19F6_ PlayerRecord_type_batter__1rHnm eg-flick-panel</span><span class="sh">'</span><span class="p">)</span>

            <span class="n">dataframes</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="k">for</span> <span class="n">table</span> <span class="ow">in</span> <span class="n">tables</span><span class="p">:</span>
                <span class="n">rows</span> <span class="o">=</span> <span class="p">[]</span>
                <span class="k">for</span> <span class="n">tr</span> <span class="ow">in</span> <span class="n">table</span><span class="p">.</span><span class="nf">find_all</span><span class="p">(</span><span class="sh">'</span><span class="s">tr</span><span class="sh">'</span><span class="p">):</span>
                    <span class="n">row</span> <span class="o">=</span> <span class="p">[]</span>
                    <span class="k">for</span> <span class="n">cell</span> <span class="ow">in</span> <span class="n">tr</span><span class="p">.</span><span class="nf">find_all</span><span class="p">([</span><span class="sh">'</span><span class="s">th</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">td</span><span class="sh">'</span><span class="p">]):</span>
                        <span class="n">spans</span> <span class="o">=</span> <span class="n">cell</span><span class="p">.</span><span class="nf">find_all</span><span class="p">(</span><span class="sh">'</span><span class="s">span</span><span class="sh">'</span><span class="p">)</span>
                        <span class="n">visible_texts</span> <span class="o">=</span> <span class="p">[</span><span class="n">s</span><span class="p">.</span><span class="nf">get_text</span><span class="p">(</span><span class="n">strip</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span> <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="n">spans</span> <span class="k">if</span> <span class="sh">'</span><span class="s">blind</span><span class="sh">'</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">s</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">'</span><span class="s">class</span><span class="sh">'</span><span class="p">,</span> <span class="p">[])]</span>
                        <span class="n">cell_text</span> <span class="o">=</span> <span class="sh">''</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">visible_texts</span><span class="p">)</span>
                        <span class="n">row</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">cell_text</span><span class="p">)</span>
                    <span class="k">if</span> <span class="n">row</span><span class="p">:</span>
                        <span class="n">rows</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">row</span><span class="p">)</span>

                <span class="n">max_len</span> <span class="o">=</span> <span class="nf">max</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">r</span><span class="p">)</span> <span class="k">for</span> <span class="n">r</span> <span class="ow">in</span> <span class="n">rows</span><span class="p">)</span>
                <span class="n">normalized_rows</span> <span class="o">=</span> <span class="p">[</span><span class="n">r</span> <span class="o">+</span> <span class="p">[</span><span class="sh">''</span><span class="p">]</span> <span class="o">*</span> <span class="p">(</span><span class="n">max_len</span> <span class="o">-</span> <span class="nf">len</span><span class="p">(</span><span class="n">r</span><span class="p">))</span> <span class="k">for</span> <span class="n">r</span> <span class="ow">in</span> <span class="n">rows</span><span class="p">]</span>
                <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">(</span><span class="n">normalized_rows</span><span class="p">)</span>
                <span class="n">dataframes</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>


            <span class="c1"># 테이블 합치기
</span>            <span class="n">df_combined</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">concat</span><span class="p">(</span><span class="n">dataframes</span><span class="p">,</span> <span class="n">ignore_index</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

            <span class="c1"># "타자명" 또는 "합계"인 행 제거
</span>            <span class="n">df_cleaned</span> <span class="o">=</span> <span class="n">df_combined</span><span class="p">[</span>
                <span class="p">(</span><span class="n">df_combined</span><span class="p">.</span><span class="n">iloc</span><span class="p">[:,</span> <span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="sh">"</span><span class="s">타자명</span><span class="sh">"</span><span class="p">)</span> <span class="o">&amp;</span> 
                <span class="p">(</span><span class="n">df_combined</span><span class="p">.</span><span class="n">iloc</span><span class="p">[:,</span> <span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="sh">"</span><span class="s">합계</span><span class="sh">"</span><span class="p">)</span>
            <span class="p">].</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

            <span class="n">df_cleaned</span> <span class="o">=</span> <span class="n">df_cleaned</span><span class="p">.</span><span class="nf">drop</span><span class="p">(</span><span class="n">df_cleaned</span><span class="p">.</span><span class="n">columns</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">).</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
			
            <span class="c1"># 최종 타자 데이터프레임
</span>            <span class="n">df_naver_bat</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">concat</span><span class="p">([</span><span class="n">batter_df</span><span class="p">,</span><span class="n">df_position</span><span class="p">,</span> <span class="n">df_cleaned</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">ignore_index</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

            
            <span class="c1">#### 투수 ####
</span>            <span class="c1">##2-3-a. 투수 player_id, 이름
</span>            <span class="n">pitcher_data</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="n">pitcher_uls</span> <span class="o">=</span> <span class="n">naver_soup</span><span class="p">.</span><span class="nf">find_all</span><span class="p">(</span><span class="sh">'</span><span class="s">ul</span><span class="sh">'</span><span class="p">,</span> <span class="n">class_</span><span class="o">=</span><span class="sh">'</span><span class="s">player_list PlayerRecord_type_pitcher__1TYaz</span><span class="sh">'</span><span class="p">)</span>
            <span class="k">for</span> <span class="n">ul</span> <span class="ow">in</span> <span class="n">pitcher_uls</span><span class="p">:</span>
                <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">ul</span><span class="p">.</span><span class="nf">find_all</span><span class="p">(</span><span class="sh">'</span><span class="s">a</span><span class="sh">'</span><span class="p">,</span> <span class="n">class_</span><span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="nf">compile</span><span class="p">(</span><span class="sa">r</span><span class="sh">'</span><span class="s">^PlayerRecord_player_info</span><span class="sh">'</span><span class="p">)):</span>
                    <span class="n">href</span> <span class="o">=</span> <span class="n">a</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">'</span><span class="s">href</span><span class="sh">'</span><span class="p">)</span>
                    <span class="n">name_tag</span> <span class="o">=</span> <span class="n">a</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="sh">'</span><span class="s">span</span><span class="sh">'</span><span class="p">,</span> <span class="n">class_</span><span class="o">=</span><span class="sh">'</span><span class="s">PlayerRecord_name__1W_c0</span><span class="sh">'</span><span class="p">)</span>
                    <span class="k">if</span> <span class="n">href</span> <span class="ow">and</span> <span class="n">name_tag</span><span class="p">:</span>
                        <span class="n">numeric_id</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="nf">sub</span><span class="p">(</span><span class="sa">r</span><span class="sh">'</span><span class="s">\D</span><span class="sh">'</span><span class="p">,</span> <span class="sh">''</span><span class="p">,</span> <span class="n">href</span><span class="p">)</span>
                        <span class="n">player_name</span> <span class="o">=</span> <span class="n">name_tag</span><span class="p">.</span><span class="nf">get_text</span><span class="p">(</span><span class="n">strip</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
                        <span class="k">if</span> <span class="n">numeric_id</span><span class="p">:</span>
                            <span class="n">pitcher_data</span><span class="p">.</span><span class="nf">append</span><span class="p">([</span><span class="n">numeric_id</span><span class="p">,</span> <span class="n">player_name</span><span class="p">])</span>

            <span class="n">pitcher_df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">(</span><span class="n">pitcher_data</span><span class="p">,</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="sh">"</span><span class="s">player_id</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">이름</span><span class="sh">"</span><span class="p">])</span>


            <span class="c1">##2-3-b. 선발, 중계, 승홀세 정보
</span>            <span class="c1">#div 목록 수집
</span>            <span class="n">player_divs_p</span> <span class="o">=</span> <span class="n">naver_soup</span><span class="p">.</span><span class="nf">find_all</span><span class="p">(</span><span class="sh">'</span><span class="s">div</span><span class="sh">'</span><span class="p">,</span> <span class="n">class_</span><span class="o">=</span><span class="sh">'</span><span class="s">PlayerRecord_player_list_area__gbho3</span><span class="sh">'</span><span class="p">)</span>

            <span class="c1">#2번째와 4번째 div만 선택
</span>            <span class="n">selected_divs</span> <span class="o">=</span> <span class="p">[</span><span class="n">player_divs_p</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span> <span class="k">if</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="nf">len</span><span class="p">(</span><span class="n">player_divs_p</span><span class="p">)]</span>

            <span class="c1">#결과 저장
</span>            <span class="n">all_rows</span> <span class="o">=</span> <span class="p">[]</span>

            <span class="k">for</span> <span class="n">div</span> <span class="ow">in</span> <span class="n">selected_divs</span><span class="p">:</span>
                <span class="n">li_tags</span> <span class="o">=</span> <span class="n">div</span><span class="p">.</span><span class="nf">find_all</span><span class="p">(</span><span class="sh">'</span><span class="s">li</span><span class="sh">'</span><span class="p">,</span> <span class="n">class_</span><span class="o">=</span><span class="sh">'</span><span class="s">PlayerRecord_player_item__3ECIB</span><span class="sh">'</span><span class="p">)</span>
                <span class="k">for</span> <span class="n">idx</span><span class="p">,</span> <span class="n">li</span> <span class="ow">in</span> <span class="nf">enumerate</span><span class="p">(</span><span class="n">li_tags</span><span class="p">):</span>
                    <span class="c1"># 기본 텍스트 필드 수집
</span>                    <span class="n">fields</span> <span class="o">=</span> <span class="p">[</span><span class="n">elem</span><span class="p">.</span><span class="nf">get_text</span><span class="p">(</span><span class="n">strip</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span> <span class="k">for</span> <span class="n">elem</span> <span class="ow">in</span> <span class="n">li</span><span class="p">.</span><span class="nf">find_all</span><span class="p">([</span><span class="sh">'</span><span class="s">span</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">div</span><span class="sh">'</span><span class="p">])</span> <span class="k">if</span> <span class="n">elem</span><span class="p">.</span><span class="nf">get_text</span><span class="p">(</span><span class="n">strip</span><span class="o">=</span><span class="bp">True</span><span class="p">)]</span>

                    <span class="c1"># em 정보 (선택적 - 승,홀,세,패 승일 경우는 em class 이름이 다름)
</span>                    <span class="n">em_tag</span> <span class="o">=</span> <span class="n">li</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="sh">'</span><span class="s">em</span><span class="sh">'</span><span class="p">,</span> <span class="n">class_</span><span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="nf">compile</span><span class="p">(</span><span class="sa">r</span><span class="sh">'</span><span class="s">^PlayerRecord_sub_info__gDKqR</span><span class="sh">'</span><span class="p">))</span>
                    <span class="n">sub_info</span> <span class="o">=</span> <span class="n">em_tag</span><span class="p">.</span><span class="nf">get_text</span><span class="p">(</span><span class="n">strip</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span> <span class="k">if</span> <span class="n">em_tag</span> <span class="k">else</span> <span class="sh">''</span>

                    <span class="c1"># "합계" 행은 건너뜀
</span>                    <span class="k">if</span> <span class="n">fields</span> <span class="ow">and</span> <span class="n">fields</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="sh">'</span><span class="s">합계</span><span class="sh">'</span><span class="p">:</span>
                        <span class="k">continue</span>

                    <span class="c1"># 구분값 ('선발' or '중계') 삽입: field_1 다음 위치
</span>                    <span class="n">role</span> <span class="o">=</span> <span class="sh">'</span><span class="s">선발</span><span class="sh">'</span> <span class="k">if</span> <span class="n">idx</span> <span class="o">==</span> <span class="mi">0</span> <span class="k">else</span> <span class="sh">'</span><span class="s">중계</span><span class="sh">'</span>
                    <span class="k">if</span> <span class="nf">len</span><span class="p">(</span><span class="n">fields</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">1</span><span class="p">:</span>
                        <span class="n">full_row</span> <span class="o">=</span> <span class="p">[</span><span class="n">fields</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">role</span><span class="p">]</span> <span class="o">+</span> <span class="n">fields</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span> <span class="o">+</span> <span class="p">[</span><span class="n">sub_info</span><span class="p">]</span>
                    <span class="k">else</span><span class="p">:</span>
                        <span class="n">full_row</span> <span class="o">=</span> <span class="p">[</span><span class="sh">''</span><span class="p">]</span> <span class="o">+</span> <span class="p">[</span><span class="n">role</span><span class="p">]</span> <span class="o">+</span> <span class="p">[]</span> <span class="o">+</span> <span class="p">[</span><span class="n">sub_info</span><span class="p">]</span>

                    <span class="n">all_rows</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">full_row</span><span class="p">)</span>

            <span class="c1"># 열 정규화
</span>            <span class="n">max_len</span> <span class="o">=</span> <span class="nf">max</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">row</span><span class="p">)</span> <span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">all_rows</span><span class="p">)</span>
            <span class="n">normalized_rows</span> <span class="o">=</span> <span class="p">[</span><span class="n">row</span> <span class="o">+</span> <span class="p">[</span><span class="sh">''</span><span class="p">]</span> <span class="o">*</span> <span class="p">(</span><span class="n">max_len</span> <span class="o">-</span> <span class="nf">len</span><span class="p">(</span><span class="n">row</span><span class="p">))</span> <span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">all_rows</span><span class="p">]</span>

            <span class="c1"># 열 이름 생성
</span>            <span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">field_1</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">구분</span><span class="sh">'</span><span class="p">]</span> <span class="o">+</span> <span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="s">field_</span><span class="si">{</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="si">}</span><span class="sh">'</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">max_len</span> <span class="o">-</span> <span class="mi">3</span><span class="p">)]</span> <span class="o">+</span> <span class="p">[</span><span class="sh">'</span><span class="s">sub_info</span><span class="sh">'</span><span class="p">]</span>

            <span class="c1"># DataFrame 생성
</span>            <span class="n">df_sprp</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">(</span><span class="n">normalized_rows</span><span class="p">,</span> <span class="n">columns</span><span class="o">=</span><span class="n">columns</span><span class="p">)</span>
            
            <span class="n">df_sprp</span><span class="p">.</span><span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="sh">'</span><span class="s">이름</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">구분</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">승홀세</span><span class="sh">'</span><span class="p">]</span>
            <span class="n">df_sprp</span><span class="o">=</span><span class="n">df_sprp</span><span class="p">.</span><span class="nf">drop</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="sh">'</span><span class="s">이름</span><span class="sh">'</span><span class="p">],</span> <span class="n">errors</span><span class="o">=</span><span class="sh">'</span><span class="s">ignore</span><span class="sh">'</span><span class="p">)</span>

 			<span class="c1">##2-3-c. 투수 기록
</span>            <span class="n">tables_p</span> <span class="o">=</span> <span class="n">naver_soup</span><span class="p">.</span><span class="nf">find_all</span><span class="p">(</span><span class="sh">'</span><span class="s">table</span><span class="sh">'</span><span class="p">,</span> <span class="n">class_</span><span class="o">=</span><span class="sh">'</span><span class="s">PlayerRecord_record_table__19F6_ PlayerRecord_type_pitcher__1TYaz eg-flick-panel</span><span class="sh">'</span><span class="p">)</span>

            <span class="n">dataframes_p</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="k">for</span> <span class="n">table</span> <span class="ow">in</span> <span class="n">tables_p</span><span class="p">:</span>
                <span class="n">rows</span> <span class="o">=</span> <span class="p">[]</span>
                <span class="k">for</span> <span class="n">tr</span> <span class="ow">in</span> <span class="n">table</span><span class="p">.</span><span class="nf">find_all</span><span class="p">(</span><span class="sh">'</span><span class="s">tr</span><span class="sh">'</span><span class="p">):</span>
                    <span class="n">row</span> <span class="o">=</span> <span class="p">[]</span>
                    <span class="k">for</span> <span class="n">cell</span> <span class="ow">in</span> <span class="n">tr</span><span class="p">.</span><span class="nf">find_all</span><span class="p">([</span><span class="sh">'</span><span class="s">th</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">td</span><span class="sh">'</span><span class="p">]):</span>
                        <span class="n">spans</span> <span class="o">=</span> <span class="n">cell</span><span class="p">.</span><span class="nf">find_all</span><span class="p">(</span><span class="sh">'</span><span class="s">span</span><span class="sh">'</span><span class="p">)</span>
                        <span class="n">visible_texts</span> <span class="o">=</span> <span class="p">[</span><span class="n">s</span><span class="p">.</span><span class="nf">get_text</span><span class="p">(</span><span class="n">strip</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span> <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="n">spans</span> <span class="k">if</span> <span class="sh">'</span><span class="s">blind</span><span class="sh">'</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">s</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">'</span><span class="s">class</span><span class="sh">'</span><span class="p">,</span> <span class="p">[])]</span>
                        <span class="n">cell_text</span> <span class="o">=</span> <span class="sh">''</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">visible_texts</span><span class="p">)</span>
                        <span class="n">row</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">cell_text</span><span class="p">)</span>
                    <span class="k">if</span> <span class="n">row</span><span class="p">:</span>
                        <span class="n">rows</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">row</span><span class="p">)</span>

                <span class="n">max_len</span> <span class="o">=</span> <span class="nf">max</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">r</span><span class="p">)</span> <span class="k">for</span> <span class="n">r</span> <span class="ow">in</span> <span class="n">rows</span><span class="p">)</span>
                <span class="n">normalized_rows</span> <span class="o">=</span> <span class="p">[</span><span class="n">r</span> <span class="o">+</span> <span class="p">[</span><span class="sh">''</span><span class="p">]</span> <span class="o">*</span> <span class="p">(</span><span class="n">max_len</span> <span class="o">-</span> <span class="nf">len</span><span class="p">(</span><span class="n">r</span><span class="p">))</span> <span class="k">for</span> <span class="n">r</span> <span class="ow">in</span> <span class="n">rows</span><span class="p">]</span>
                <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">(</span><span class="n">normalized_rows</span><span class="p">)</span>
                <span class="n">dataframes_p</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>


            <span class="c1"># 테이블 합치기
</span>            <span class="n">df_combined_p</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">concat</span><span class="p">(</span><span class="n">dataframes_p</span><span class="p">,</span> <span class="n">ignore_index</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

            <span class="c1"># "투수명" 또는 "합계"인 행 제거
</span>            <span class="n">df_cleaned_p</span> <span class="o">=</span> <span class="n">df_combined_p</span><span class="p">[</span>
                <span class="p">(</span><span class="n">df_combined_p</span><span class="p">.</span><span class="n">iloc</span><span class="p">[:,</span> <span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="sh">"</span><span class="s">투수명</span><span class="sh">"</span><span class="p">)</span> <span class="o">&amp;</span> 
                <span class="p">(</span><span class="n">df_combined_p</span><span class="p">.</span><span class="n">iloc</span><span class="p">[:,</span> <span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="sh">"</span><span class="s">합계</span><span class="sh">"</span><span class="p">)</span>
            <span class="p">].</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

            <span class="n">df_cleaned_p</span> <span class="o">=</span> <span class="n">df_cleaned_p</span><span class="p">.</span><span class="nf">drop</span><span class="p">(</span><span class="n">df_cleaned_p</span><span class="p">.</span><span class="n">columns</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">).</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

            
            <span class="c1"># 최종 투수 데이터 프레임
</span>            <span class="n">df_naver_pit</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">concat</span><span class="p">([</span><span class="n">pitcher_df</span><span class="p">,</span><span class="n">df_sprp</span><span class="p">,</span><span class="n">df_cleaned_p</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">ignore_index</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>    

            
			<span class="c1"># 중간 결과 프린트
</span>            <span class="n">game_name</span> <span class="o">=</span> <span class="nf">str</span><span class="p">(</span><span class="n">df_total_game</span><span class="p">[</span><span class="sh">'</span><span class="s">g_id</span><span class="sh">'</span><span class="p">][</span><span class="n">g</span><span class="p">])</span>
            <span class="n">away_team_name</span> <span class="o">=</span> <span class="n">game_name</span><span class="p">[</span><span class="mi">8</span><span class="p">:</span><span class="mi">10</span><span class="p">]</span>
            <span class="n">home_team_name</span> <span class="o">=</span> <span class="n">game_name</span><span class="p">[</span><span class="mi">10</span><span class="p">:</span><span class="mi">12</span><span class="p">]</span>
            <span class="n">dic_korean_team_name</span> <span class="o">=</span> <span class="p">{</span><span class="sh">"</span><span class="s">SK</span><span class="sh">"</span> <span class="p">:</span> <span class="sh">"</span><span class="s">SSG</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">SS</span><span class="sh">"</span> <span class="p">:</span> <span class="sh">"</span><span class="s">삼성</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">OB</span><span class="sh">"</span><span class="p">:</span><span class="sh">"</span><span class="s">두산</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">HT</span><span class="sh">"</span><span class="p">:</span><span class="sh">"</span><span class="s">기아</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">NC</span><span class="sh">"</span><span class="p">:</span><span class="sh">"</span><span class="s">NC</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">WO</span><span class="sh">"</span><span class="p">:</span><span class="sh">"</span><span class="s">키움</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">LG</span><span class="sh">"</span><span class="p">:</span><span class="sh">"</span><span class="s">LG</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">KT</span><span class="sh">"</span><span class="p">:</span><span class="sh">"</span><span class="s">kt</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">HH</span><span class="sh">"</span><span class="p">:</span><span class="sh">"</span><span class="s">한화</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">LT</span><span class="sh">"</span><span class="p">:</span><span class="sh">"</span><span class="s">롯데</span><span class="sh">"</span><span class="p">}</span>
            <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="n">dic_korean_team_name</span><span class="p">[</span><span class="n">away_team_name</span><span class="p">]</span><span class="si">}</span><span class="sh">"</span> <span class="sh">"</span><span class="s"> : </span><span class="sh">"</span> <span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="n">dic_korean_team_name</span><span class="p">[</span><span class="n">home_team_name</span><span class="p">]</span><span class="si">}</span><span class="s"> 완료</span><span class="sh">"</span><span class="p">)</span>
            <span class="nf">print</span><span class="p">(</span><span class="sh">""</span><span class="p">)</span>
            <span class="nf">print</span><span class="p">(</span><span class="sh">""</span><span class="p">)</span>
            
        <span class="k">else</span><span class="p">:</span>
            <span class="k">continue</span>
        
    <span class="k">except</span> <span class="n">requests</span><span class="p">.</span><span class="n">exceptions</span><span class="p">.</span><span class="n">RequestException</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
        <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">에러 발생: </span><span class="si">{</span><span class="n">e</span><span class="si">}</span><span class="s"> | 제외된 URL: </span><span class="si">{</span><span class="n">url</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
        <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="n">df_total_game</span><span class="p">[</span><span class="sh">'</span><span class="s">g_id</span><span class="sh">'</span><span class="p">][</span><span class="n">g</span><span class="p">]</span><span class="si">}</span><span class="s"> 경기에서 문제 발생</span><span class="sh">"</span><span class="p">)</span>

	<span class="c1">#반복하면서 중첩
</span>    <span class="n">df_etc_crawl</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">concat</span><span class="p">([</span><span class="n">df_etc_crawl</span><span class="p">,</span><span class="n">df_naver_etc</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">ignore_index</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">df_bat_crawl</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">concat</span><span class="p">([</span><span class="n">df_bat_crawl</span><span class="p">,</span> <span class="n">df_naver_bat</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">ignore_index</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">df_pit_crawl</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">concat</span><span class="p">([</span><span class="n">df_pit_crawl</span><span class="p">,</span> <span class="n">df_naver_pit</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">ignore_index</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    
    <span class="n">driver</span><span class="p">.</span><span class="nf">quit</span><span class="p">()</span>
</code></pre></div></div>

<p>.</p>

<p>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">### 엑셀용 정리 ###
</span>
<span class="c1">##3-1. 행 이름 설정
#투수는 행 개수 고정
</span><span class="n">df_pit_crawl</span><span class="p">.</span><span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="sh">'</span><span class="s">player_id</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">이름</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">구분</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">승홀세</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">이닝</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">피안타</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">실점</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">자책</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">4사구</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">삼진</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">피홈런</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">타자</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">타수</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">투구수</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">경기</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">승리</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">패전</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">세이브</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">평균자책</span><span class="sh">'</span><span class="p">]</span>

<span class="c1">#행 데이터 숫자 변환
</span><span class="n">df_pit_crawl</span><span class="p">[</span><span class="sh">'</span><span class="s">이닝</span><span class="sh">'</span><span class="p">]</span><span class="o">=</span><span class="n">df_pit_crawl</span><span class="p">[</span><span class="sh">'</span><span class="s">이닝</span><span class="sh">'</span><span class="p">].</span><span class="nb">str</span><span class="p">.</span><span class="nf">replace</span><span class="p">(</span><span class="sh">'</span><span class="s">⅓</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">1/3</span><span class="sh">'</span><span class="p">)</span>
<span class="n">df_pit_crawl</span><span class="p">[</span><span class="sh">'</span><span class="s">이닝</span><span class="sh">'</span><span class="p">]</span><span class="o">=</span><span class="n">df_pit_crawl</span><span class="p">[</span><span class="sh">'</span><span class="s">이닝</span><span class="sh">'</span><span class="p">].</span><span class="nb">str</span><span class="p">.</span><span class="nf">replace</span><span class="p">(</span><span class="sh">'</span><span class="s">⅔</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">2/3</span><span class="sh">'</span><span class="p">)</span>

<span class="n">int_columns_p</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">player_id</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">피안타</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">실점</span><span class="sh">'</span><span class="p">,</span>
               <span class="sh">'</span><span class="s">자책</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">4사구</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">삼진</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">피홈런</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">타자</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">타수</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">투구수</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">경기</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">승리</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">패전</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">세이브</span><span class="sh">'</span><span class="p">]</span>
<span class="n">float_columns_p</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">평균자책</span><span class="sh">'</span><span class="p">]</span>

<span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">int_columns_p</span><span class="p">:</span>
    <span class="n">df_pit_crawl</span><span class="p">[</span><span class="n">col</span><span class="p">]</span> <span class="o">=</span> <span class="n">df_pit_crawl</span><span class="p">[</span><span class="n">col</span><span class="p">].</span><span class="nf">astype</span><span class="p">(</span><span class="nb">int</span><span class="p">)</span>
<span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">float_columns_p</span><span class="p">:</span>
    <span class="n">df_pit_crawl</span><span class="p">[</span><span class="n">col</span><span class="p">]</span> <span class="o">=</span> <span class="n">df_pit_crawl</span><span class="p">[</span><span class="n">col</span><span class="p">].</span><span class="nf">astype</span><span class="p">(</span><span class="nb">float</span><span class="p">)</span>

<span class="c1">### 투수는 여기서 완료
</span><span class="n">df_pit_final</span> <span class="o">=</span> <span class="n">df_pit_crawl</span>

<span class="c1">#타자는 그 날 연장 이닝에 따라 달라짐
</span><span class="n">total_columns</span> <span class="o">=</span> <span class="n">df_bat_crawl</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<span class="n">fixed_columns</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">player_id</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">이름</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">타순</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">포지션</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">타수</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">득점</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">안타</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">타점</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">홈런</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">볼넷</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">삼진</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">도루</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">타율</span><span class="sh">'</span><span class="p">]</span>
<span class="n">numbered_columns</span> <span class="o">=</span> <span class="p">[</span><span class="nf">str</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">total_columns</span> <span class="o">-</span> <span class="nf">len</span><span class="p">(</span><span class="n">fixed_columns</span><span class="p">))]</span>
<span class="n">df_bat_crawl</span><span class="p">.</span><span class="n">columns</span> <span class="o">=</span> <span class="n">fixed_columns</span> <span class="o">+</span> <span class="n">numbered_columns</span>

<span class="c1">#고정 행 데이터 숫자형으로 변환
</span><span class="n">int_columns</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">player_id</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">타수</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">득점</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">안타</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">타점</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">홈런</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">볼넷</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">삼진</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">도루</span><span class="sh">'</span><span class="p">]</span>
<span class="n">float_columns</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">타율</span><span class="sh">'</span><span class="p">]</span>

<span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">int_columns</span><span class="p">:</span>
    <span class="n">df_bat_crawl</span><span class="p">[</span><span class="n">col</span><span class="p">]</span> <span class="o">=</span> <span class="n">df_bat_crawl</span><span class="p">[</span><span class="n">col</span><span class="p">].</span><span class="nf">astype</span><span class="p">(</span><span class="nb">int</span><span class="p">)</span>
<span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">float_columns</span><span class="p">:</span>
    <span class="n">df_bat_crawl</span><span class="p">[</span><span class="n">col</span><span class="p">]</span> <span class="o">=</span> <span class="n">df_bat_crawl</span><span class="p">[</span><span class="n">col</span><span class="p">].</span><span class="nf">astype</span><span class="p">(</span><span class="nb">float</span><span class="p">)</span>

<span class="c1">##3-2. 한 이닝 두 타석 처리
#player_id ~~ 타율까지 타자 13개행
</span><span class="n">start_idx</span> <span class="o">=</span> <span class="nf">len</span><span class="p">(</span><span class="n">fixed_columns</span><span class="p">)</span>

<span class="n">df_bat_info</span> <span class="o">=</span> <span class="n">df_bat_crawl</span><span class="p">.</span><span class="n">iloc</span><span class="p">[:,</span><span class="mi">0</span><span class="p">:</span><span class="n">start_idx</span><span class="p">]</span>
<span class="n">df_bat_check</span> <span class="o">=</span> <span class="n">df_bat_crawl</span><span class="p">.</span><span class="n">iloc</span><span class="p">[:,</span><span class="n">start_idx</span><span class="p">:]</span>

<span class="n">df_second_check</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">()</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">df_bat_check</span><span class="p">.</span><span class="n">columns</span><span class="p">)):</span>
    <span class="n">col</span> <span class="o">=</span> <span class="n">df_bat_check</span><span class="p">.</span><span class="n">iloc</span><span class="p">[:,</span><span class="n">i</span><span class="p">]</span>
    <span class="n">new_col</span> <span class="o">=</span> <span class="n">col</span><span class="p">.</span><span class="nb">str</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="sh">'</span><span class="s">/</span><span class="sh">'</span><span class="p">,</span><span class="n">expand</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">col_len</span> <span class="o">=</span> <span class="nf">len</span><span class="p">(</span><span class="n">new_col</span><span class="p">.</span><span class="n">columns</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">col_len</span> <span class="o">==</span><span class="mi">1</span><span class="p">:</span>
        <span class="n">new_col</span><span class="p">.</span><span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="sh">'</span><span class="p">]</span>
    <span class="k">if</span> <span class="n">col_len</span> <span class="o">==</span><span class="mi">2</span><span class="p">:</span>
        <span class="n">new_col</span><span class="p">.</span><span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="sh">'</span><span class="p">,</span><span class="nf">str</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="sh">'</span><span class="p">)</span><span class="o">+</span><span class="sh">'</span><span class="s">-2</span><span class="sh">'</span><span class="p">]</span>
    <span class="k">if</span> <span class="n">col_len</span> <span class="o">==</span><span class="mi">3</span><span class="p">:</span>
        <span class="n">new_col</span><span class="p">.</span><span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="sh">'</span><span class="p">,</span><span class="nf">str</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="sh">'</span><span class="p">)</span><span class="o">+</span><span class="sh">'</span><span class="s">-2</span><span class="sh">'</span><span class="p">,</span><span class="nf">str</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="sh">'</span><span class="p">)</span><span class="o">+</span><span class="sh">'</span><span class="s">-3</span><span class="sh">'</span><span class="p">]</span>
    
    <span class="n">df_second_check</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">concat</span><span class="p">([</span><span class="n">df_second_check</span><span class="p">,</span><span class="n">new_col</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">join</span><span class="o">=</span><span class="sh">'</span><span class="s">outer</span><span class="sh">'</span><span class="p">)</span>

<span class="c1">### 타자는 여기서 완료
</span><span class="n">df_bat_final</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">concat</span><span class="p">([</span><span class="n">df_bat_info</span><span class="p">,</span> <span class="n">df_second_check</span><span class="p">],</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="c1">##3-3. 기타 항목 정리
</span><span class="n">df_etc_crawl</span><span class="p">[</span><span class="sh">'</span><span class="s">정리</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df_etc_crawl</span><span class="p">[</span><span class="sh">'</span><span class="s">이름</span><span class="sh">'</span><span class="p">].</span><span class="nb">str</span><span class="p">.</span><span class="nf">replace</span><span class="p">(</span><span class="sa">r</span><span class="sh">'</span><span class="s">\(.*?\)</span><span class="sh">'</span><span class="p">,</span> <span class="sh">''</span><span class="p">,</span><span class="n">regex</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">contents_data</span> <span class="o">=</span> <span class="n">df_etc_crawl</span><span class="p">[</span><span class="sh">'</span><span class="s">정리</span><span class="sh">'</span><span class="p">].</span><span class="nb">str</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="sh">'</span><span class="s">,</span><span class="sh">'</span><span class="p">,</span><span class="n">expand</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">contents_data</span> <span class="o">=</span> <span class="n">contents_data</span><span class="p">.</span><span class="nf">applymap</span><span class="p">(</span>
    <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">re</span><span class="p">.</span><span class="nf">sub</span><span class="p">(</span><span class="sa">r</span><span class="sh">'</span><span class="s">\d.*?호</span><span class="sh">'</span><span class="p">,</span> <span class="sh">''</span><span class="p">,</span> <span class="n">x</span><span class="p">)</span> <span class="k">if</span> <span class="nf">isinstance</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="nb">str</span><span class="p">)</span> <span class="k">else</span> <span class="n">x</span>
<span class="p">)</span>
<span class="n">contetns_name</span> <span class="o">=</span> <span class="n">df_etc_crawl</span><span class="p">[</span><span class="sh">'</span><span class="s">항목</span><span class="sh">'</span><span class="p">]</span>

<span class="n">df_etc_contents</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">concat</span><span class="p">([</span><span class="n">contetns_name</span><span class="p">,</span><span class="n">contents_data</span><span class="p">],</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df_etc_contents</span> <span class="o">=</span> <span class="n">df_etc_contents</span><span class="p">.</span><span class="nf">set_index</span><span class="p">(</span><span class="sh">'</span><span class="s">항목</span><span class="sh">'</span><span class="p">)</span>

<span class="n">df_etc_contents_t</span> <span class="o">=</span> <span class="n">df_etc_contents</span><span class="p">.</span><span class="nf">transpose</span><span class="p">()</span>
<span class="n">col_list</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="n">df_etc_contents_t</span><span class="p">.</span><span class="n">columns</span><span class="p">.</span><span class="nf">unique</span><span class="p">())</span>

<span class="n">df_etc_final</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">()</span>

<span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">col_list</span><span class="p">)):</span>
    <span class="n">c_data</span> <span class="o">=</span> <span class="n">df_etc_contents_t</span><span class="p">[[</span><span class="n">col_list</span><span class="p">[</span><span class="n">c</span><span class="p">]]]</span>
    <span class="n">c_data_stack</span> <span class="o">=</span> <span class="n">c_data</span><span class="p">.</span><span class="nf">stack</span><span class="p">().</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">df_stack</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">(</span><span class="n">c_data_stack</span><span class="p">)</span>
    <span class="n">df_stack</span><span class="p">.</span><span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="n">col_list</span><span class="p">[</span><span class="n">c</span><span class="p">]]</span>
    <span class="n">df_etc_final</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">concat</span><span class="p">([</span><span class="n">df_etc_final</span><span class="p">,</span><span class="n">df_stack</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">join</span><span class="o">=</span><span class="sh">'</span><span class="s">outer</span><span class="sh">'</span><span class="p">)</span>

<span class="n">record_all</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">견제사</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">결승타</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">도루</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">도루자</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">실책</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">주루사</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">포일</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">폭투</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">홈런</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">3루타</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">2루타</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">병살타</span><span class="sh">'</span><span class="p">]</span>
<span class="n">record_in</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="n">df_etc_final</span><span class="p">.</span><span class="n">columns</span><span class="p">)</span>
<span class="n">something_new</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">set</span><span class="p">((</span><span class="n">record_in</span><span class="p">))</span><span class="o">-</span><span class="nf">set</span><span class="p">(</span><span class="n">record_all</span><span class="p">))</span>

<span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">something_new</span><span class="p">:</span>
    <span class="n">df_etc_final</span><span class="p">.</span><span class="nf">drop</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="n">col</span><span class="p">],</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    
<span class="n">record_in</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="n">df_etc_final</span><span class="p">.</span><span class="n">columns</span><span class="p">)</span>    
<span class="n">record_check</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">set</span><span class="p">(</span><span class="n">record_all</span><span class="p">)</span><span class="o">-</span><span class="nf">set</span><span class="p">(</span><span class="n">record_in</span><span class="p">))</span>

<span class="k">for</span> <span class="n">record</span> <span class="ow">in</span> <span class="n">record_check</span><span class="p">:</span>
    <span class="n">df_etc_final</span><span class="p">[</span><span class="n">record</span><span class="p">]</span><span class="o">=</span><span class="bp">None</span>

<span class="c1">### 기타는 여기서 완료
</span><span class="n">df_etc_final</span><span class="o">=</span><span class="n">df_etc_final</span><span class="p">.</span><span class="nf">reindex</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="n">record_all</span><span class="p">)</span>


<span class="c1">##4. 엑셀에 정리
</span><span class="kn">import</span> <span class="n">os</span>
<span class="n">save_path</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="nf">getcwd</span><span class="p">()</span>  <span class="c1"># 실행된 위치
</span><span class="n">file_name</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="n">game_day</span><span class="si">}</span><span class="s">.xlsx</span><span class="sh">"</span>
<span class="n">file_path</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">save_path</span><span class="p">,</span> <span class="n">file_name</span><span class="p">)</span>

<span class="k">with</span> <span class="n">pd</span><span class="p">.</span><span class="nc">ExcelWriter</span><span class="p">(</span><span class="n">file_path</span><span class="p">)</span> <span class="k">as</span> <span class="n">writer</span><span class="p">:</span>
    <span class="n">df_bat_final</span><span class="p">.</span><span class="nf">to_excel</span><span class="p">(</span><span class="n">writer</span><span class="p">,</span> <span class="n">sheet_name</span><span class="o">=</span><span class="sh">'</span><span class="s">네이버_타격</span><span class="sh">'</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
    <span class="n">df_pit_final</span><span class="p">.</span><span class="nf">to_excel</span><span class="p">(</span><span class="n">writer</span><span class="p">,</span> <span class="n">sheet_name</span><span class="o">=</span><span class="sh">'</span><span class="s">네이버_피칭</span><span class="sh">'</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
    <span class="n">df_etc_final</span><span class="p">.</span><span class="nf">to_excel</span><span class="p">(</span><span class="n">writer</span><span class="p">,</span> <span class="n">sheet_name</span><span class="o">=</span><span class="sh">'</span><span class="s">네이버_기타</span><span class="sh">'</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>


<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">크롤링 완료</span><span class="sh">"</span><span class="p">)</span>

<span class="n">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</code></pre></div></div>

<p>.</p>

<p>.</p>

<p>결과</p>

<p><img src="../../../../images/2025-06-06-naver_crawl_gpt/1.png" alt="1" /></p>

<p><img src="../../../../images/2025-06-06-naver_crawl_gpt/2.png" alt="2" /></p>

<p><img src="../../../../images/2025-06-06-naver_crawl_gpt/3.png" alt="3" /></p>]]></content><author><name>jeong3427</name></author><category term="Python" /><category term="python" /><category term="크롤링" /><category term="야구" /><category term="chatGPT" /><summary type="html"><![CDATA[네이버 야구 결과 ui 변화로 코드 전면 수정]]></summary></entry><entry><title type="html">혼자 공부하는 머신러닝 08</title><link href="https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/05/26/ml_08.html" rel="alternate" type="text/html" title="혼자 공부하는 머신러닝 08" /><published>2025-05-26T00:00:00+09:00</published><updated>2025-05-26T00:00:00+09:00</updated><id>https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/05/26/ml_08</id><content type="html" xml:base="https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/05/26/ml_08.html"><![CDATA[<p>k-평균 알고리즘</p>

<ol>
  <li>무작위로 k개의 클러스터 중심을 정함</li>
  <li>각 샘플에서 가장 가까운 클러스터 중심을 찾아 해당 클러스터의 샘플로 지정</li>
  <li>클러스터에 속한 샘플의 평균값으로 클러스터 중심을 변경</li>
  <li>클러스터 중심에 변화가 없을 때까지 2번으로 돌아가 반복</li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">!</span><span class="n">wget</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">bit</span><span class="p">.</span><span class="n">ly</span><span class="o">/</span><span class="n">fruits_300_data</span> <span class="o">-</span><span class="n">O</span> <span class="n">fruits_300</span><span class="p">.</span><span class="n">npy</span>

<span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">fruits</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">load</span><span class="p">(</span><span class="sh">'</span><span class="s">fruits_300.npy</span><span class="sh">'</span><span class="p">)</span>
<span class="n">fruits_2d</span> <span class="o">=</span> <span class="n">fruits</span><span class="p">.</span><span class="nf">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">100</span><span class="o">*</span><span class="mi">100</span><span class="p">)</span>

<span class="kn">from</span> <span class="n">sklearn.cluster</span> <span class="kn">import</span> <span class="n">KMeans</span>

<span class="c1">#클러스터 개수 설정
#3으로 설정했기 때문에 labels_ 배열의 값은 0,1,2 중 하나
</span><span class="n">km</span> <span class="o">=</span> <span class="nc">KMeans</span><span class="p">(</span><span class="n">n_clusters</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>
<span class="n">km</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">fruits_2d</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">km</span><span class="p">.</span><span class="n">labels_</span><span class="p">)</span>

<span class="p">[</span><span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">0</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">0</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">0</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span>
 <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">0</span> <span class="mi">2</span> <span class="mi">0</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">0</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">0</span> <span class="mi">2</span>
 <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">0</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span>
 <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span>
 <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span>
 <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span>
 <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">0</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span>
 <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">0</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span>
 <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#클러스터별 샘플 개수
</span><span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">unique</span><span class="p">(</span><span class="n">km</span><span class="p">.</span><span class="n">labels_</span><span class="p">,</span> <span class="n">return_counts</span><span class="o">=</span><span class="bp">True</span><span class="p">))</span>
<span class="p">(</span><span class="nf">array</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="n">dtype</span><span class="o">=</span><span class="n">int32</span><span class="p">),</span> <span class="nf">array</span><span class="p">([</span><span class="mi">112</span><span class="p">,</span>  <span class="mi">98</span><span class="p">,</span>  <span class="mi">90</span><span class="p">]))</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#각 클러스터별 어떤 이미지를 나타냈는지 그림으로 출력
</span>
<span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="k">def</span> <span class="nf">draw_fruits</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span> <span class="n">ratio</span><span class="o">=</span><span class="mi">1</span><span class="p">):</span>
  <span class="n">n</span> <span class="o">=</span> <span class="nf">len</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span> <span class="c1">#n은 샘플 개수
</span>
  <span class="n">rows</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">ceil</span><span class="p">(</span><span class="n">n</span><span class="o">/</span><span class="mi">10</span><span class="p">))</span>
  <span class="c1">#한 줄에 10개씩 이미지를 그리고 샘플 개수를 10으로 나누어 전체 행 개수를 계산
</span>
  <span class="n">cols</span> <span class="o">=</span> <span class="n">n</span> <span class="k">if</span> <span class="n">rows</span> <span class="o">&lt;</span> <span class="mi">2</span> <span class="k">else</span> <span class="mi">10</span>
  <span class="c1">#행이 1개이면 열의 개수는 샘플 개수. 그렇지 않으면 10개
</span>
  <span class="n">fig</span><span class="p">,</span> <span class="n">axs</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplots</span><span class="p">(</span><span class="n">rows</span><span class="p">,</span> <span class="n">cols</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="n">cols</span><span class="o">*</span><span class="n">ratio</span><span class="p">,</span> <span class="n">rows</span><span class="o">*</span><span class="n">ratio</span><span class="p">),</span> <span class="n">squeeze</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>

  <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">rows</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">cols</span><span class="p">):</span>
      <span class="k">if</span> <span class="n">i</span><span class="o">*</span><span class="mi">10</span><span class="o">+</span><span class="n">j</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">:</span>
        <span class="n">axs</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">].</span><span class="nf">imshow</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="mi">10</span><span class="o">+</span><span class="n">j</span><span class="p">],</span> <span class="n">cmap</span><span class="o">=</span><span class="sh">'</span><span class="s">gray_r</span><span class="sh">'</span><span class="p">)</span>
      <span class="n">axs</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">].</span><span class="nf">axis</span><span class="p">(</span><span class="sh">'</span><span class="s">off</span><span class="sh">'</span><span class="p">)</span>

  <span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>

<span class="c1"># drwa_fruits() 함수는 (샘플 개수, 너비, 높이)의 3차원 배열을 입력받아
# 가로로 10개씩 이미지를 출력
</span>
<span class="c1"># 샘플 개수에 따라 행과 열의 개수를 계산하고 figsize를 지정.
# figsize는 ratio 매개변수에 비례하여 커짐
</span>
<span class="c1"># 2중 for 반복문을 사용하여 이미지를 그려나감
</span></code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">draw_fruits</span><span class="p">(</span><span class="n">fruits</span><span class="p">[</span><span class="n">km</span><span class="p">.</span><span class="n">labels_</span><span class="o">==</span><span class="mi">0</span><span class="p">])</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-05-26-ml_08/1.png" alt="1" /></p>

<p>.</p>

<p>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">draw_fruits</span><span class="p">(</span><span class="n">fruits</span><span class="p">[</span><span class="n">km</span><span class="p">.</span><span class="n">labels_</span><span class="o">==</span><span class="mi">1</span><span class="p">])</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-05-26-ml_08/2.png" alt="2" /></p>

<p>.</p>

<p>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">draw_fruits</span><span class="p">(</span><span class="n">fruits</span><span class="p">[</span><span class="n">km</span><span class="p">.</span><span class="n">labels_</span><span class="o">==</span><span class="mi">2</span><span class="p">])</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-05-26-ml_08/3.png" alt="3" /></p>

<p>.</p>

<p>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#KMeans 클래스가 최종적으로 찾은 클러스터 중심은 cluset_centers_ 속성에 저장되어 있음
</span>

<span class="nf">draw_fruits</span><span class="p">(</span><span class="n">km</span><span class="p">.</span><span class="n">cluster_centers_</span><span class="p">.</span><span class="nf">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">100</span><span class="p">),</span> <span class="n">ratio</span><span class="o">=</span><span class="mi">3</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-05-26-ml_08/4.png" alt="4" /></p>

<p>.</p>

<p>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#데이터 샘플에서 클러스터 중심까지 거리로 변환해주는 transform() 메서드
</span>
<span class="nf">print</span><span class="p">(</span><span class="n">km</span><span class="p">.</span><span class="nf">transform</span><span class="p">(</span><span class="n">fruits_2d</span><span class="p">[</span><span class="mi">100</span><span class="p">:</span><span class="mi">101</span><span class="p">]))</span>

<span class="p">[[</span><span class="mf">3400.24197319</span> <span class="mf">8837.37750892</span> <span class="mf">5279.33763699</span><span class="p">]]</span>
</code></pre></div></div>

<p>각각 레이블 0, 레이블1, 레이블2까지의 거리</p>

<p>레이블0이 가장 가까운 것으로 보아 이 샘플은 레이블0</p>

<p>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#레이블0인지 확인
</span><span class="nf">print</span><span class="p">(</span><span class="n">km</span><span class="p">.</span><span class="nf">predict</span><span class="p">(</span><span class="n">fruits_2d</span><span class="p">[</span><span class="mi">100</span><span class="p">:</span><span class="mi">101</span><span class="p">]))</span>
<span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</code></pre></div></div>

<p>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">draw_fruits</span><span class="p">(</span><span class="n">fruits</span><span class="p">[</span><span class="mi">100</span><span class="p">:</span><span class="mi">101</span><span class="p">])</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-05-26-ml_08/5.png" alt="5" /></p>

<p>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#알고리즘이 반복한 횟수
print(km.n_iter_)
4
</code></pre></div></div>

<p>.</p>

<p>.</p>

<p>.</p>

<p>n_cluster를 지금은 알고 있어서 3으로 지정</p>

<p>km = KMeans(n_clusters=3, random_state=42)</p>

<p>모른다면 최적의 값 어떻게 찾는가?</p>

<p>-&gt; 엘보우 방법</p>

<p>엘보우 방법</p>

<p>클러스터 중심과 클러스터에 속한 샘플 사이의 거리의 제곱의 합 : 이너셔</p>

<p>이너셔 : 클러스터에 속한 샘플이 얼마나 가깝게 모여 있는지를 나타내는 값</p>

<p>일반적으로 클러스터 개수가 늘어나면 클러스터 개개의 크기는 줄어들기 때문에 이너셔도 줄어듦</p>

<p>엘보우 방법은 클러스터 개수를 늘려가며 이너셔의 변화를 관찰해 최적의 클러스터를 찾는 방법</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">intertia</span> <span class="o">=</span> <span class="p">[]</span>

<span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">7</span><span class="p">):</span>
  <span class="n">km</span> <span class="o">=</span> <span class="nc">KMeans</span><span class="p">(</span><span class="n">n_clusters</span><span class="o">=</span><span class="n">k</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>
  <span class="n">km</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">fruits_2d</span><span class="p">)</span>
  <span class="n">intertia</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">km</span><span class="p">.</span><span class="n">inertia_</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">7</span><span class="p">),</span> <span class="n">intertia</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">k</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">intertia</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-05-26-ml_08/6.png" alt="6" /></p>

<p>.</p>

<p>정확하게 변곡점을 찾으려면</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">!</span><span class="n">pip</span> <span class="n">install</span> <span class="n">kneed</span>

<span class="n">inertia</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">ks</span> <span class="o">=</span> <span class="nf">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">7</span><span class="p">)</span>

<span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">ks</span><span class="p">:</span>
    <span class="n">km</span> <span class="o">=</span> <span class="nc">KMeans</span><span class="p">(</span><span class="n">n_clusters</span><span class="o">=</span><span class="n">k</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>
    <span class="n">km</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">fruits_2d</span><span class="p">)</span>
    <span class="n">inertia</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">km</span><span class="p">.</span><span class="n">inertia_</span><span class="p">)</span>

<span class="c1"># 엘보우 포인트 탐색
</span><span class="n">kneedle</span> <span class="o">=</span> <span class="nc">KneeLocator</span><span class="p">(</span><span class="n">ks</span><span class="p">,</span> <span class="n">inertia</span><span class="p">,</span> <span class="n">curve</span><span class="o">=</span><span class="sh">'</span><span class="s">convex</span><span class="sh">'</span><span class="p">,</span> <span class="n">direction</span><span class="o">=</span><span class="sh">'</span><span class="s">decreasing</span><span class="sh">'</span><span class="p">)</span>
<span class="n">elbow_k</span> <span class="o">=</span> <span class="n">kneedle</span><span class="p">.</span><span class="n">knee</span>

<span class="c1"># 그래프 출력
</span><span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">ks</span><span class="p">,</span> <span class="n">inertia</span><span class="p">,</span> <span class="n">marker</span><span class="o">=</span><span class="sh">'</span><span class="s">o</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">k</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">inertia</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="sh">'</span><span class="s">Elbow Method</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># 꺾이는 점이 감지되었을 때만 선 추가
</span><span class="k">if</span> <span class="n">elbow_k</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
    <span class="n">plt</span><span class="p">.</span><span class="nf">axvline</span><span class="p">(</span><span class="n">elbow_k</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">red</span><span class="sh">'</span><span class="p">,</span> <span class="n">linestyle</span><span class="o">=</span><span class="sh">'</span><span class="s">--</span><span class="sh">'</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="sa">f</span><span class="sh">'</span><span class="s">Elbow at k=</span><span class="si">{</span><span class="n">elbow_k</span><span class="si">}</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="nf">legend</span><span class="p">()</span>
    <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Elbow point is at k = </span><span class="si">{</span><span class="n">elbow_k</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Elbow point could not be found.</span><span class="sh">"</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>

<span class="n">Elbow</span> <span class="n">point</span> <span class="n">could</span> <span class="ow">not</span> <span class="n">be</span> <span class="n">found</span><span class="p">.</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-05-26-ml_08/7.png" alt="7" /></p>]]></content><author><name>jeong3427</name></author><category term="Machine_Learning" /><category term="python" /><category term="ml" /><category term="머신러닝" /><category term="k평균" /><category term="KMeans" /><category term="엘보우" /><category term="엘보우방법" /><summary type="html"><![CDATA[k-평균 알고리즘]]></summary></entry><entry><title type="html">혼자 공부하는 머신러닝 07</title><link href="https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/05/11/ml_07.html" rel="alternate" type="text/html" title="혼자 공부하는 머신러닝 07" /><published>2025-05-11T00:00:00+09:00</published><updated>2025-05-11T00:00:00+09:00</updated><id>https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/05/11/ml_07</id><content type="html" xml:base="https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/05/11/ml_07.html"><![CDATA[<p>.</p>

<p>고객이 사고 싶은 사진을 올리면 그 중에서 가장 많이 요청하는 과일을 판매 품목으로 정하려 함.
비슷한 샘플끼리 모아두는 작업 - 군집</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">!</span><span class="n">wget</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">bit</span><span class="p">.</span><span class="n">ly</span><span class="o">/</span><span class="n">fruits_300_data</span> <span class="o">-</span><span class="n">O</span> <span class="n">fruits_300</span><span class="p">.</span><span class="n">npy</span>

<span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>


<span class="n">fruits</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">load</span><span class="p">(</span><span class="sh">'</span><span class="s">fruits_300.npy</span><span class="sh">'</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">fruits</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>

<span class="p">(</span><span class="mi">300</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="p">.</span><span class="nf">imshow</span><span class="p">(</span><span class="n">fruits</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">cmap</span><span class="o">=</span><span class="sh">'</span><span class="s">gray</span><span class="sh">'</span><span class="p">)</span> <span class="c1">#컬러를 넣는 다면 'viridis'
</span><span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
<span class="c1"># 값이 0에 가까울 수록 검게 나타나고 높은 값은 밝게 표시
</span></code></pre></div></div>

<p><img src="../../../../images/2025-05-11-ml_07/1.png" alt="image-20250511143355804" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="p">.</span><span class="nf">imshow</span><span class="p">(</span><span class="n">fruits</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">cmap</span><span class="o">=</span><span class="sh">'</span><span class="s">gray_r</span><span class="sh">'</span><span class="p">)</span> 
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-05-11-ml_07/2.png" alt="image-20250511143448906" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="p">.</span><span class="nf">imshow</span><span class="p">(</span><span class="n">fruits</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">cmap</span><span class="o">=</span><span class="sh">'</span><span class="s">viridis</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">imshow</span><span class="p">(</span><span class="n">fruits</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">cmap</span><span class="o">=</span><span class="sh">'</span><span class="s">viridis_r</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-05-11-ml_07/3.png" alt="image-20250511143549469" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span><span class="p">,</span> <span class="n">axs</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplots</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<span class="n">axs</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nf">imshow</span><span class="p">(</span><span class="n">fruits</span><span class="p">[</span><span class="mi">100</span><span class="p">],</span> <span class="n">cmap</span><span class="o">=</span><span class="sh">'</span><span class="s">gray_r</span><span class="sh">'</span><span class="p">)</span>
<span class="n">axs</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nf">imshow</span><span class="p">(</span><span class="n">fruits</span><span class="p">[</span><span class="mi">200</span><span class="p">],</span> <span class="n">cmap</span><span class="o">=</span><span class="sh">'</span><span class="s">gray_r</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-05-11-ml_07/4.png" alt="image-20250511143629747" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#픽셀값 분석하기
</span><span class="n">apple</span> <span class="o">=</span> <span class="n">fruits</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">100</span><span class="p">].</span><span class="nf">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">100</span><span class="o">*</span><span class="mi">100</span><span class="p">)</span>
<span class="n">pineapple</span> <span class="o">=</span> <span class="n">fruits</span><span class="p">[</span><span class="mi">100</span><span class="p">:</span><span class="mi">200</span><span class="p">].</span><span class="nf">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">100</span><span class="o">*</span><span class="mi">100</span><span class="p">)</span>
<span class="n">banana</span> <span class="o">=</span> <span class="n">fruits</span><span class="p">[</span><span class="mi">200</span><span class="p">:</span><span class="mi">300</span><span class="p">].</span><span class="nf">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">100</span><span class="o">*</span><span class="mi">100</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">apple</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
<span class="c1">#(100, 10000)
</span>
<span class="n">apple</span>
<span class="nf">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">...,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span>
       <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">...,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span>
       <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">...,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span>
       <span class="p">...,</span>
       <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">...,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span>
       <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="p">...,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span>
       <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">...,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">]],</span> <span class="n">dtype</span><span class="o">=</span><span class="n">uint8</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="p">.</span><span class="nf">hist</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">apple</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.8</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">hist</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">pineapple</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.8</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">hist</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">banana</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.8</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">legend</span><span class="p">([</span><span class="sh">'</span><span class="s">apple</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">pineapple</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">banana</span><span class="sh">'</span><span class="p">])</span> <span class="c1">#범례 만들기
</span><span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-05-11-ml_07/5.png" alt="image-20250511143836369" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#사과랑 파인애플은 겹쳐서 구분 어려움
#픽셀별 평균값 비교
</span>
<span class="n">fig</span><span class="p">,</span> <span class="n">axs</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplots</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span>
<span class="n">axs</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nf">bar</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="mi">10000</span><span class="p">),</span> <span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">apple</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
<span class="n">axs</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nf">bar</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="mi">10000</span><span class="p">),</span> <span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">pineapple</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
<span class="n">axs</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nf">bar</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="mi">10000</span><span class="p">),</span> <span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">banana</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-05-11-ml_07/6.png" alt="image-20250511143935998" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#세 과일 대표 이미지
</span>
<span class="n">apple_mean</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">apple</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">).</span><span class="nf">reshape</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
<span class="n">pineapple_mean</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">pineapple</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">).</span><span class="nf">reshape</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
<span class="n">banana_mean</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">banana</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">).</span><span class="nf">reshape</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>

<span class="n">fig</span><span class="p">,</span> <span class="n">axs</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplots</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span>
<span class="n">axs</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nf">imshow</span><span class="p">(</span><span class="n">apple_mean</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="sh">'</span><span class="s">gray_r</span><span class="sh">'</span><span class="p">)</span>
<span class="n">axs</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nf">imshow</span><span class="p">(</span><span class="n">pineapple_mean</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="sh">'</span><span class="s">gray_r</span><span class="sh">'</span><span class="p">)</span>
<span class="n">axs</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nf">imshow</span><span class="p">(</span><span class="n">banana_mean</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="sh">'</span><span class="s">gray_r</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-05-11-ml_07/7.png" alt="image-20250511144005439" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## 평균값과 가까운 사진 고르기
# 절대값 오차 사용
</span>
<span class="n">abs_diff</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">abs</span><span class="p">(</span><span class="n">fruits</span> <span class="o">-</span> <span class="n">apple_mean</span><span class="p">)</span>
<span class="n">abs_mean</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">abs_diff</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="n">abs_mean</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
<span class="p">(</span><span class="mi">300</span><span class="p">,)</span>

<span class="n">apple_index</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">argsort</span><span class="p">(</span><span class="n">abs_mean</span><span class="p">)[:</span><span class="mi">100</span><span class="p">]</span>
<span class="c1">#argsort 함수는 작은 것에서 큰 순서대로 나열
#이 중에서 처음 100개를 선택해서 10x10 격자로 이루어진 그래프 그리기
</span>
<span class="c1">#군집 클러스터링
</span><span class="n">fig</span><span class="p">,</span> <span class="n">axs</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplots</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">))</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10</span><span class="p">):</span>
  <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10</span><span class="p">):</span>
    <span class="n">axs</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">].</span><span class="nf">imshow</span><span class="p">(</span><span class="n">fruits</span><span class="p">[</span><span class="n">apple_index</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="mi">10</span> <span class="o">+</span> <span class="n">j</span><span class="p">]],</span> <span class="n">cmap</span><span class="o">=</span><span class="sh">'</span><span class="s">gray_r</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">axs</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">].</span><span class="nf">axis</span><span class="p">(</span><span class="sh">'</span><span class="s">off</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-05-11-ml_07/8.png" alt="image-20250511144111048" /></p>]]></content><author><name>jeong3427</name></author><category term="Machine_Learning" /><category term="python" /><category term="ml" /><category term="머신러닝" /><category term="군집" /><category term="비지도학습" /><summary type="html"><![CDATA[.]]></summary></entry><entry><title type="html">넘파이 연습 01</title><link href="https://jeong3427.github.io//jekyll-theme-yat/python/2025/05/01/numpy_practice_1.html" rel="alternate" type="text/html" title="넘파이 연습 01" /><published>2025-05-01T00:00:00+09:00</published><updated>2025-05-01T00:00:00+09:00</updated><id>https://jeong3427.github.io//jekyll-theme-yat/python/2025/05/01/numpy_practice_1</id><content type="html" xml:base="https://jeong3427.github.io//jekyll-theme-yat/python/2025/05/01/numpy_practice_1.html"><![CDATA[<p><img src="../../../../images/2025-05-01-numpy_practice_1/image-20250501163216904.png" alt="image-20250501163216904" /></p>

<p>넘파이 array의 shape과 np.mean 연습</p>

<h3 id="1-3">1. (3,)</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">9</span><span class="p">])</span>
<span class="nf">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">x</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
<span class="c1"># print(np.mean(x, (axis=1))) 에러 발생
</span>
<span class="p">[</span><span class="mi">1</span> <span class="mi">2</span> <span class="mi">9</span><span class="p">]</span>
<span class="p">(</span><span class="mi">3</span><span class="p">,)</span>
<span class="mf">4.0</span>
<span class="mf">4.0</span>
</code></pre></div></div>

<p>.</p>

<p>.</p>

<h3 id="2-23">2. (2,3)</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">y</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">9</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">]])</span>
<span class="nf">print</span><span class="p">(</span><span class="n">y</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">y</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">y</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">y</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">y</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span>


<span class="p">[[</span><span class="mi">1</span> <span class="mi">2</span> <span class="mi">9</span><span class="p">]</span>
 <span class="p">[</span><span class="mi">0</span> <span class="mi">2</span> <span class="mi">4</span><span class="p">]]</span>

<span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>

<span class="mf">3.0</span>

<span class="p">[</span><span class="mf">0.5</span> <span class="mf">2.</span>  <span class="mf">6.5</span><span class="p">]</span>

<span class="p">[</span><span class="mf">4.</span> <span class="mf">2.</span><span class="p">]</span>
</code></pre></div></div>

<p>.</p>

<p>.</p>

<h3 id="3-423">3. (4,2,3)</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">z</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">9</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">]],</span> <span class="p">[[</span><span class="mi">10</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">30</span><span class="p">],</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">15</span><span class="p">]],</span> <span class="p">[[</span><span class="mi">7</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="mi">21</span><span class="p">],[</span><span class="mi">8</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">24</span><span class="p">]],[[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">]]])</span>
<span class="nf">print</span><span class="p">(</span><span class="n">z</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">z</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">z</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">z</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">z</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">z</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>


<span class="p">[[[</span> <span class="mi">1</span>  <span class="mi">2</span>  <span class="mi">9</span><span class="p">]</span>
  <span class="p">[</span> <span class="mi">0</span>  <span class="mi">2</span>  <span class="mi">4</span><span class="p">]]</span>

 <span class="p">[[</span><span class="mi">10</span> <span class="mi">20</span> <span class="mi">30</span><span class="p">]</span>
  <span class="p">[</span> <span class="mi">5</span> <span class="mi">10</span> <span class="mi">15</span><span class="p">]]</span>

 <span class="p">[[</span> <span class="mi">7</span> <span class="mi">14</span> <span class="mi">21</span><span class="p">]</span>
  <span class="p">[</span> <span class="mi">8</span>  <span class="mi">8</span> <span class="mi">24</span><span class="p">]]</span>

 <span class="p">[[</span> <span class="mi">0</span>  <span class="mi">0</span>  <span class="mi">0</span><span class="p">]</span>
  <span class="p">[</span> <span class="mi">1</span>  <span class="mi">1</span>  <span class="mi">1</span><span class="p">]]]</span>

<span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>

<span class="mf">8.041666666666666</span>

<span class="p">[[</span> <span class="mf">4.5</span>   <span class="mf">9.</span>   <span class="mf">15.</span>  <span class="p">]</span>
 <span class="p">[</span> <span class="mf">3.5</span>   <span class="mf">5.25</span> <span class="mf">11.</span>  <span class="p">]]</span>



<span class="p">[[</span> <span class="mf">0.5</span>  <span class="mf">2.</span>   <span class="mf">6.5</span><span class="p">]</span>
 <span class="p">[</span> <span class="mf">7.5</span> <span class="mf">15.</span>  <span class="mf">22.5</span><span class="p">]</span>
 <span class="p">[</span> <span class="mf">7.5</span> <span class="mf">11.</span>  <span class="mf">22.5</span><span class="p">]</span>
 <span class="p">[</span> <span class="mf">0.5</span>  <span class="mf">0.5</span>  <span class="mf">0.5</span><span class="p">]]</span>

<span class="p">[[</span> <span class="mf">4.</span>          <span class="mf">2.</span>        <span class="p">]</span>
 <span class="p">[</span><span class="mf">20.</span>         <span class="mf">10.</span>        <span class="p">]</span>
 <span class="p">[</span><span class="mf">14.</span>         <span class="mf">13.33333333</span><span class="p">]</span>
 <span class="p">[</span> <span class="mf">0.</span>          <span class="mf">1.</span>        <span class="p">]]</span>
</code></pre></div></div>

<p>.</p>

<p>np.mean(z)</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">합</span> <span class="o">=</span> <span class="mi">1</span><span class="o">+</span><span class="mi">2</span><span class="o">+</span><span class="mi">9</span> <span class="o">+</span> <span class="mi">0</span><span class="o">+</span><span class="mi">2</span><span class="o">+</span><span class="mi">4</span> <span class="o">+</span>
     <span class="mi">10</span><span class="o">+</span><span class="mi">20</span><span class="o">+</span><span class="mi">30</span> <span class="o">+</span> <span class="mi">5</span><span class="o">+</span><span class="mi">10</span><span class="o">+</span><span class="mi">15</span> <span class="o">+</span>
     <span class="mi">7</span><span class="o">+</span><span class="mi">14</span><span class="o">+</span><span class="mi">21</span> <span class="o">+</span> <span class="mi">8</span><span class="o">+</span><span class="mi">8</span><span class="o">+</span><span class="mi">24</span> <span class="o">+</span>
     <span class="mi">0</span><span class="o">+</span><span class="mi">0</span><span class="o">+</span><span class="mi">0</span> <span class="o">+</span> <span class="mi">1</span><span class="o">+</span><span class="mi">1</span><span class="o">+</span><span class="mi">1</span> <span class="o">=</span> <span class="mi">193</span>

<span class="n">평균</span> <span class="o">=</span> <span class="mi">193</span> <span class="o">/</span> <span class="mi">24</span> <span class="o">=</span> <span class="mf">8.04166666</span>
</code></pre></div></div>

<p>.</p>

<p>.</p>

<p>np.mean(z, axis=0)</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">위치</span> <span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="n">의</span> <span class="n">평균</span> <span class="o">=</span> <span class="n">평균</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">0</span><span class="p">])</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="mi">10</span><span class="o">+</span><span class="mi">7</span><span class="o">+</span><span class="mi">0</span><span class="p">)</span><span class="o">/</span><span class="mi">4</span> <span class="o">=</span> <span class="mf">4.5</span>
<span class="n">위치</span> <span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="n">의</span> <span class="n">평균</span> <span class="o">=</span> <span class="n">평균</span><span class="p">([</span><span class="mi">2</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">0</span><span class="p">])</span> <span class="o">=</span> <span class="p">(</span><span class="mi">2</span><span class="o">+</span><span class="mi">20</span><span class="o">+</span><span class="mi">14</span><span class="o">+</span><span class="mi">0</span><span class="p">)</span><span class="o">/</span><span class="mi">4</span> <span class="o">=</span> <span class="mf">9.0</span>
<span class="bp">...</span>
<span class="p">[[</span> <span class="mf">4.5</span>   <span class="mf">9.</span>   <span class="mf">15.</span>  <span class="p">]</span>
 <span class="p">[</span> <span class="mf">3.5</span>   <span class="mf">5.25</span> <span class="mf">11.</span>  <span class="p">]]</span>
</code></pre></div></div>

<p>.</p>

<p>.</p>

<p>np.mean(z, axis=1)</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">z</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">9</span><span class="p">]</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">]]</span>
<span class="n">z</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">10</span> <span class="mi">20</span> <span class="mi">30</span><span class="p">]</span> <span class="p">[</span> <span class="mi">5</span> <span class="mi">10</span> <span class="mi">15</span><span class="p">]]</span>

<span class="p">(</span><span class="n">행</span> <span class="n">별</span> <span class="n">평균</span><span class="p">)</span> <span class="p">[(</span><span class="mi">1</span><span class="o">+</span><span class="mi">0</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="p">(</span><span class="mi">2</span><span class="o">+</span><span class="mi">2</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="p">(</span><span class="mi">9</span><span class="o">+</span><span class="mi">4</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mf">0.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">6.5</span><span class="p">]</span>
<span class="p">[(</span><span class="mi">10</span><span class="o">+</span><span class="mi">5</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="p">(</span><span class="mi">20</span><span class="o">+</span><span class="mi">5</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="p">(</span><span class="mi">30</span><span class="o">+</span><span class="mi">15</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mf">7.5</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mf">22.5</span><span class="p">]</span>

<span class="p">[[</span> <span class="mf">0.5</span>  <span class="mf">2.</span>   <span class="mf">6.5</span><span class="p">]</span>
 <span class="p">[</span> <span class="mf">7.5</span> <span class="mf">15.</span>  <span class="mf">22.5</span><span class="p">]</span>
 <span class="p">[</span> <span class="mf">7.5</span> <span class="mf">11.</span>  <span class="mf">22.5</span><span class="p">]</span>
 <span class="p">[</span> <span class="mf">0.5</span>  <span class="mf">0.5</span>  <span class="mf">0.5</span><span class="p">]]</span>
</code></pre></div></div>

<p>.</p>

<p>.</p>

<p>np.mean(z, axis=2)</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">axis</span><span class="o">=</span><span class="mi">2</span><span class="n">는</span> <span class="n">각</span> <span class="n">행에서</span> <span class="mi">3</span><span class="n">개</span> <span class="n">값의</span> <span class="n">평균</span>

<span class="n">예</span><span class="p">:</span> <span class="n">z</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">9</span><span class="p">]</span> <span class="err">→</span> <span class="n">평균</span><span class="p">:</span> <span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="mi">2</span><span class="o">+</span><span class="mi">9</span><span class="p">)</span><span class="o">/</span><span class="mi">3</span> <span class="o">=</span> <span class="mf">4.0</span>
<span class="n">z</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">]</span> <span class="err">→</span> <span class="n">평균</span><span class="p">:</span> <span class="p">(</span><span class="mi">0</span><span class="o">+</span><span class="mi">2</span><span class="o">+</span><span class="mi">4</span><span class="p">)</span><span class="o">/</span><span class="mi">3</span> <span class="o">=</span> <span class="mf">2.0</span>

<span class="err">→</span> <span class="n">z</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mf">4.0</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">]</span>

<span class="p">[[</span> <span class="mf">4.</span>          <span class="mf">2.</span>        <span class="p">]</span>
 <span class="p">[</span><span class="mf">20.</span>         <span class="mf">10.</span>        <span class="p">]</span>
 <span class="p">[</span><span class="mf">14.</span>         <span class="mf">13.33333333</span><span class="p">]</span>
 <span class="p">[</span> <span class="mf">0.</span>          <span class="mf">1.</span>        <span class="p">]]</span>
</code></pre></div></div>

<p>.</p>

<p>.</p>

<h3 id="4-1-1-5">4. (1, 1, 5)</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">m</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">]]])</span>
<span class="nf">print</span><span class="p">(</span><span class="n">m</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">m</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">m</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>

<span class="p">[[[</span><span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span><span class="p">]]]</span>

<span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>

<span class="mf">3.0</span>

<span class="p">[[</span><span class="mf">1.</span> <span class="mf">2.</span> <span class="mf">3.</span> <span class="mf">4.</span> <span class="mf">5.</span><span class="p">]]</span>

<span class="p">[[</span><span class="mf">1.</span> <span class="mf">2.</span> <span class="mf">3.</span> <span class="mf">4.</span> <span class="mf">5.</span><span class="p">]]</span>

<span class="p">[[</span><span class="mf">3.</span><span class="p">]]</span>
</code></pre></div></div>

<p>.</p>

<p>.</p>

<h3 id="5-345">5. (3,4,5)</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">n</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">]],</span>
               <span class="p">[[</span><span class="mi">10</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">30</span><span class="p">,</span><span class="mi">40</span><span class="p">,</span><span class="mi">50</span><span class="p">],</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">25</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">]],</span> 
                 <span class="p">[[</span><span class="mi">7</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="mi">21</span><span class="p">,</span><span class="mi">28</span><span class="p">,</span><span class="mi">35</span><span class="p">],[</span><span class="mi">8</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">32</span><span class="p">,</span><span class="mi">40</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">]]])</span>
<span class="nf">print</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">n</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">n</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>


<span class="p">[[[</span> <span class="mi">1</span>  <span class="mi">2</span>  <span class="mi">9</span>  <span class="mi">0</span>  <span class="mi">0</span><span class="p">]</span>
  <span class="p">[</span> <span class="mi">0</span>  <span class="mi">2</span>  <span class="mi">4</span>  <span class="mi">1</span>  <span class="mi">2</span><span class="p">]</span>
  <span class="p">[</span> <span class="mi">1</span>  <span class="mi">2</span>  <span class="mi">3</span>  <span class="mi">4</span>  <span class="mi">5</span><span class="p">]</span>
  <span class="p">[</span> <span class="mi">4</span>  <span class="mi">5</span>  <span class="mi">6</span>  <span class="mi">7</span>  <span class="mi">8</span><span class="p">]]</span>

 <span class="p">[[</span><span class="mi">10</span> <span class="mi">20</span> <span class="mi">30</span> <span class="mi">40</span> <span class="mi">50</span><span class="p">]</span>
  <span class="p">[</span> <span class="mi">5</span> <span class="mi">10</span> <span class="mi">15</span> <span class="mi">20</span> <span class="mi">25</span><span class="p">]</span>
  <span class="p">[</span> <span class="mi">0</span>  <span class="mi">0</span>  <span class="mi">0</span>  <span class="mi">0</span>  <span class="mi">0</span><span class="p">]</span>
  <span class="p">[</span> <span class="mi">1</span>  <span class="mi">1</span>  <span class="mi">1</span>  <span class="mi">1</span>  <span class="mi">1</span><span class="p">]]</span>

 <span class="p">[[</span> <span class="mi">7</span> <span class="mi">14</span> <span class="mi">21</span> <span class="mi">28</span> <span class="mi">35</span><span class="p">]</span>
  <span class="p">[</span> <span class="mi">8</span> <span class="mi">16</span> <span class="mi">24</span> <span class="mi">32</span> <span class="mi">40</span><span class="p">]</span>
  <span class="p">[</span> <span class="mi">0</span>  <span class="mi">0</span>  <span class="mi">0</span>  <span class="mi">0</span>  <span class="mi">0</span><span class="p">]</span>
  <span class="p">[</span> <span class="mi">1</span>  <span class="mi">1</span>  <span class="mi">1</span>  <span class="mi">1</span>  <span class="mi">1</span><span class="p">]]]</span>

<span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>

<span class="mf">8.766666666666667</span>

<span class="p">[[</span> <span class="mf">6.</span>         <span class="mf">12.</span>         <span class="mf">20.</span>         <span class="mf">22.66666667</span> <span class="mf">28.33333333</span><span class="p">]</span>
 <span class="p">[</span> <span class="mf">4.33333333</span>  <span class="mf">9.33333333</span> <span class="mf">14.33333333</span> <span class="mf">17.66666667</span> <span class="mf">22.33333333</span><span class="p">]</span>
 <span class="p">[</span> <span class="mf">0.33333333</span>  <span class="mf">0.66666667</span>  <span class="mf">1.</span>          <span class="mf">1.33333333</span>  <span class="mf">1.66666667</span><span class="p">]</span>
 <span class="p">[</span> <span class="mf">2.</span>          <span class="mf">2.33333333</span>  <span class="mf">2.66666667</span>  <span class="mf">3.</span>          <span class="mf">3.33333333</span><span class="p">]]</span>


<span class="p">[[</span> <span class="mf">1.5</span>   <span class="mf">2.75</span>  <span class="mf">5.5</span>   <span class="mf">3.</span>    <span class="mf">3.75</span><span class="p">]</span>
 <span class="p">[</span> <span class="mf">4.</span>    <span class="mf">7.75</span> <span class="mf">11.5</span>  <span class="mf">15.25</span> <span class="mf">19.</span>  <span class="p">]</span>
 <span class="p">[</span> <span class="mf">4.</span>    <span class="mf">7.75</span> <span class="mf">11.5</span>  <span class="mf">15.25</span> <span class="mf">19.</span>  <span class="p">]]</span>


<span class="p">[[</span> <span class="mf">2.4</span>  <span class="mf">1.8</span>  <span class="mf">3.</span>   <span class="mf">6.</span> <span class="p">]</span>
 <span class="p">[</span><span class="mf">30.</span>  <span class="mf">15.</span>   <span class="mf">0.</span>   <span class="mf">1.</span> <span class="p">]</span>
 <span class="p">[</span><span class="mf">21.</span>  <span class="mf">24.</span>   <span class="mf">0.</span>   <span class="mf">1.</span> <span class="p">]]</span>
</code></pre></div></div>

<p>.</p>

<p>.</p>

<h3 id="6-npmeanx-axis01">6. np.mean(x, axis=(0,1))</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([</span>
    <span class="p">[[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">8</span><span class="p">]],</span>      <span class="c1"># 첫 번째 그룹 (x[0])
</span>    <span class="p">[[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">]]</span>       <span class="c1"># 두 번째 그룹 (x[1])
</span><span class="p">])</span>

<span class="n">x</span><span class="p">.</span><span class="n">shape</span>  <span class="c1"># (2, 2, 3)
</span>

<span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
<span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">8</span><span class="p">]</span>
<span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span>
<span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>

</code></pre></div></div>

<table>
  <thead>
    <tr>
      <th>열 index</th>
      <th>요소</th>
      <th>평균</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0</td>
      <td>1, 2, 0, 1</td>
      <td>(1+2+0+1)/4 = 1.0</td>
    </tr>
    <tr>
      <td>1</td>
      <td>2, 4, 0, 1</td>
      <td>(2+4+0+1)/4 = 1.75</td>
    </tr>
    <tr>
      <td>2</td>
      <td>3, 8, 0, 1</td>
      <td>(3+8+0+1)/4 = 3.0</td>
    </tr>
  </tbody>
</table>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
<span class="c1"># 결과: array([1.  , 1.75, 3.  ])
</span></code></pre></div></div>

<p>.</p>

<p>.</p>

<h3 id="7-npmeanx-axis12">7. np.mean(x, axis=(1,2))</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([</span>
    <span class="p">[[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">8</span><span class="p">]],</span>      <span class="c1"># 첫 번째 그룹 (x[0])
</span>    <span class="p">[[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">]]</span>       <span class="c1"># 두 번째 그룹 (x[1])
</span><span class="p">])</span>

<span class="n">x</span><span class="p">.</span><span class="n">shape</span>  <span class="c1"># (2, 2, 3)
</span></code></pre></div></div>

<p>axis=1: <strong>행(2개)</strong> 평균</p>

<p>axis=2: <strong>열(3개)</strong> 평균</p>

<p>→ 즉, 각 묶음(x[0], x[1]) 내부의 <strong>전체 값 평균</strong>을 계산</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># x[0] 
</span><span class="p">[[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
 <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">8</span><span class="p">]]</span>
 
<span class="n">모든</span> <span class="n">값</span><span class="p">:</span> <span class="mi">1</span> <span class="o">+</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">3</span> <span class="o">+</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">4</span> <span class="o">+</span> <span class="mi">8</span> <span class="o">=</span> <span class="mi">20</span>
<span class="n">평균</span><span class="p">:</span> <span class="mi">20</span> <span class="o">/</span> <span class="mi">6</span> <span class="o">=</span> <span class="mf">3.333</span><span class="bp">...</span>

<span class="c1"># x[1]
</span><span class="p">[[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span>
 <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">]]</span>

<span class="n">모든</span> <span class="n">값</span><span class="p">:</span> <span class="mi">0</span> <span class="o">+</span> <span class="mi">0</span> <span class="o">+</span> <span class="mi">0</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">=</span> <span class="mi">3</span>
<span class="n">평균</span><span class="p">:</span> <span class="mi">3</span> <span class="o">/</span> <span class="mi">6</span> <span class="o">=</span> <span class="mf">0.5</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span>  
<span class="c1"># 결과: array([3.33333333, 0.5])
</span></code></pre></div></div>

<p>.</p>

<p>.</p>

<h3 id="8-npmeanx-axis02">8. np.mean(x, axis=(0,2))</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span>
<span class="p">[[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
 <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">8</span><span class="p">]]</span>
 
<span class="err">→</span> <span class="n">열</span> <span class="n">평균</span> <span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">2</span><span class="p">):</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span> <span class="err">→</span> <span class="n">평균</span><span class="p">:</span> <span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="mi">2</span><span class="o">+</span><span class="mi">3</span><span class="p">)</span><span class="o">/</span><span class="mi">3</span> <span class="o">=</span> <span class="mf">2.0</span>
<span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">8</span><span class="p">]</span> <span class="err">→</span> <span class="n">평균</span><span class="p">:</span> <span class="p">(</span><span class="mi">2</span><span class="o">+</span><span class="mi">4</span><span class="o">+</span><span class="mi">8</span><span class="p">)</span><span class="o">/</span><span class="mi">3</span> <span class="o">=</span> <span class="mf">4.666</span><span class="bp">...</span>

<span class="err">→</span> <span class="n">결과</span><span class="p">:</span> <span class="p">[</span><span class="mf">2.0</span><span class="p">,</span> <span class="mf">4.666</span><span class="p">...]</span>



<span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span>
<span class="p">[[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span>
 <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">]]</span>
 
<span class="err">→</span> <span class="n">열</span> <span class="n">평균</span> <span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">2</span><span class="p">):</span>
<span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span> <span class="err">→</span> <span class="n">평균</span><span class="p">:</span> <span class="mi">0</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span> <span class="err">→</span> <span class="n">평균</span><span class="p">:</span> <span class="mi">1</span>

<span class="err">→</span> <span class="n">결과</span><span class="p">:</span> <span class="p">[</span><span class="mf">0.0</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">]</span>
</code></pre></div></div>

<p>###</p>

<p>이제 axis=0 방향으로 평균</p>

<ul>
  <li>(2.0 + 0.0) / 2 = 1.0</li>
  <li>(4.666… + 1.0) / 2 = 2.833…</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
<span class="c1"># 결과: array([1.        , 2.83333333])
</span></code></pre></div></div>]]></content><author><name>jeong3427</name></author><category term="Python" /><category term="python" /><category term="넘파이" /><category term="numpy" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">혼자 공부하는 머신러닝 06</title><link href="https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/04/27/ml_06.html" rel="alternate" type="text/html" title="혼자 공부하는 머신러닝 06" /><published>2025-04-27T00:00:00+09:00</published><updated>2025-04-27T00:00:00+09:00</updated><id>https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/04/27/ml_06</id><content type="html" xml:base="https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/04/27/ml_06.html"><![CDATA[<h3 id="0-앙상블-학습">0. 앙상블 학습</h3>

<p>앙상블이란? 더 좋은 예측 결과를 만들기 위해 여러 개의 모델을 훈련하는 머신러닝 알고리즘</p>

<p>.</p>

<p>.</p>

<h3 id="1-랜덤-포레스트">1. 랜덤 포레스트</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#데이터 준비
</span><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">wine</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span><span class="sh">'</span><span class="s">https://bit.ly/wine-date</span><span class="sh">'</span><span class="p">)</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">wine</span><span class="p">[[</span><span class="sh">'</span><span class="s">alcohol</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">sugar</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">pH</span><span class="sh">'</span><span class="p">]].</span><span class="nf">to_numpy</span><span class="p">()</span>
<span class="n">target</span> <span class="o">=</span> <span class="n">wine</span><span class="p">[</span><span class="sh">'</span><span class="s">class</span><span class="sh">'</span><span class="p">].</span><span class="nf">to_numpy</span><span class="p">()</span>

<span class="kn">from</span> <span class="n">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>

<span class="n">train_input</span><span class="p">,</span> <span class="n">test_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">,</span> <span class="n">test_target</span> <span class="o">=</span> <span class="nf">train_test_split</span><span class="p">(</span>
    <span class="n">data</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span> <span class="n">test_size</span><span class="o">=</span><span class="mf">0.2</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span>
<span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">cross_validate</span>
<span class="kn">from</span> <span class="n">sklearn.ensemble</span> <span class="kn">import</span> <span class="n">RandomForestClassifier</span>

<span class="n">rf</span> <span class="o">=</span> <span class="nc">RandomForestClassifier</span><span class="p">(</span><span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>  
<span class="n">scores</span><span class="o">=</span><span class="nf">cross_validate</span><span class="p">(</span><span class="n">rf</span><span class="p">,</span> <span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">,</span> 
                      <span class="n">return_train_score</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span> 

<span class="c1">#n_jobs -1로 두면 모든 CPU 코어 사용
#return_train_score True로 두면 검증 점수 뿐만 아니라 훈련 세트 점수도 반환
</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">scores</span><span class="p">[</span><span class="sh">'</span><span class="s">train_score</span><span class="sh">'</span><span class="p">]),</span> <span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">scores</span><span class="p">[</span><span class="sh">'</span><span class="s">test_score</span><span class="sh">'</span><span class="p">]))</span>
<span class="c1">#0.9973541965122431 0.8905151032797809
## 훈련세트에 다소 과대적합
</span>
<span class="n">rf</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">rf</span><span class="p">.</span><span class="n">feature_importances_</span><span class="p">)</span>

<span class="p">[</span><span class="mf">0.23167441</span> <span class="mf">0.50039841</span> <span class="mf">0.26792718</span><span class="p">]</span>
</code></pre></div></div>

<p>랜덤 포레스트는 대표적인 결정 트리 기반의 앙상블 학습 방법.</p>

<p>부트스트랩 샘플을 사용하고 랜덤하게 일부 특성을 선택하여 트리를 만드는 것이 특징.</p>

<p>부트스트랩이란, 데이터 세트에서 중복을 허용하여 데이터를 샘플링 하는 방식.</p>

<p>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">rf</span> <span class="o">=</span> <span class="nc">RandomForestClassifier</span><span class="p">(</span><span class="n">oob_score</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>
<span class="n">rf</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">rf</span><span class="p">.</span><span class="n">oob_score_</span><span class="p">)</span>
</code></pre></div></div>

<p>랜덤 포레스트는 훈련 세트에서 중복을 허용하여 부트스트랩 샘플 만들어서 결정 트리를 훈련</p>

<p>부트스트랩 샘플에 포함되지 않고 남는 샘플이 있는데 이를 OOB(out of Bag) 샘플</p>

<p>이 남는 샘플을 사용하여 부트스트랩 샘플로 훈련한 결정 트리를 평가할 수 있다. 마치 검증 세트 역할.</p>

<p>.</p>

<p>.</p>

<h3 id="2-엑스트라-트리">2. 엑스트라 트리</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">sklearn.ensemble</span> <span class="kn">import</span> <span class="n">ExtraTreesClassifier</span>

<span class="n">et</span> <span class="o">=</span> <span class="nc">ExtraTreesClassifier</span><span class="p">(</span><span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span> <span class="n">random_state</span> <span class="o">=</span><span class="mi">42</span><span class="p">)</span>
<span class="n">scores</span> <span class="o">=</span> <span class="nf">cross_validate</span><span class="p">(</span><span class="n">et</span><span class="p">,</span> <span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">,</span>
                        <span class="n">return_train_score</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">scores</span><span class="p">[</span><span class="sh">'</span><span class="s">train_score</span><span class="sh">'</span><span class="p">]),</span> <span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">scores</span><span class="p">[</span><span class="sh">'</span><span class="s">test_score</span><span class="sh">'</span><span class="p">]))</span>

<span class="n">et</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>
<span class="c1">#0.9974503966084433 0.8887848893166506
</span><span class="nf">print</span><span class="p">(</span><span class="n">et</span><span class="p">.</span><span class="n">feature_importances_</span><span class="p">)</span>
<span class="p">[</span><span class="mf">0.20183568</span> <span class="mf">0.52242907</span> <span class="mf">0.27573525</span><span class="p">]</span>
</code></pre></div></div>

<p>엑스트라 트리는 랜덤 포레스트와 비슷하게 결정 트리를 사용하여 앙상블 모델을 만들지만</p>

<p>부트스트랩 샘플을 사용하지는 않음.</p>

<p>대신 랜덤하게 노드를 분할해 과대적합을 감소시킴.</p>

<p>.</p>

<p>.</p>

<h3 id="3-그레이디언트-부스팅--히스토그램-기반-그레이디언트-부스팅">3. 그레이디언트 부스팅 / 히스토그램 기반 그레이디언트 부스팅</h3>

<p>랜덤 포레스트나 엑스트라 트리와 달리 결정 트리를 연속적으로 추가하여 손실함수를 최소화하는 앙상블 방법.</p>

<p>훈련 속도가 조금 느리지만 더 좋은 성능을 기대할 수 있음.</p>

<p>그레이디언트 부스팅의 속도를 개선한 것이 히스토그램 기반 그레이디언트 부스팅.</p>

<p>안정적인 결과와 높은 성능으로 인기가 높음.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## 그레이디언트 부스팅
</span>
<span class="kn">from</span> <span class="n">sklearn.ensemble</span> <span class="kn">import</span> <span class="n">GradientBoostingClassifier</span>

<span class="n">gb</span> <span class="o">=</span> <span class="nc">GradientBoostingClassifier</span><span class="p">(</span><span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>
<span class="n">scores</span><span class="o">=</span><span class="nf">cross_validate</span><span class="p">(</span><span class="n">gb</span><span class="p">,</span> <span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">,</span> <span class="n">return_train_score</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">scores</span><span class="p">[</span><span class="sh">'</span><span class="s">train_score</span><span class="sh">'</span><span class="p">]),</span> <span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">scores</span><span class="p">[</span><span class="sh">'</span><span class="s">test_score</span><span class="sh">'</span><span class="p">]))</span>
<span class="c1">#0.8881086892152563 0.8720430147331015
</span>
<span class="c1"># 결정 트리 개수를 500개로 5배 늘리고 learing_rate도 0.1에서 0.2로 늘리면
</span><span class="n">gb</span> <span class="o">=</span> <span class="nc">GradientBoostingClassifier</span><span class="p">(</span><span class="n">n_estimators</span><span class="o">=</span><span class="mi">500</span><span class="p">,</span> <span class="n">learning_rate</span><span class="o">=</span><span class="mf">0.2</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>
<span class="n">scores</span><span class="o">=</span> <span class="nf">cross_validate</span><span class="p">(</span><span class="n">gb</span><span class="p">,</span> <span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">,</span> <span class="n">return_train_score</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">scores</span><span class="p">[</span><span class="sh">'</span><span class="s">train_score</span><span class="sh">'</span><span class="p">]),</span> <span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">scores</span><span class="p">[</span><span class="sh">'</span><span class="s">test_score</span><span class="sh">'</span><span class="p">]))</span>
<span class="c1">#0.9464595437171814 0.8780082549788999
# 많이 늘렸지만 과대 적합을 꽤나 억제
</span>
<span class="n">gb</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">gb</span><span class="p">.</span><span class="n">feature_importances_</span><span class="p">)</span>

<span class="c1">#랜덤 포레스트 때보다 sugar에 좀 더 집중
# 3개 각각 'alcohol', 'sugar', 'pH'
</span><span class="p">[</span><span class="mf">0.15882696</span> <span class="mf">0.6799705</span>  <span class="mf">0.16120254</span><span class="p">]</span>
</code></pre></div></div>

<p>.</p>

<p>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 히스토그램 기반 그레이디언트 부스팅
</span>
<span class="kn">from</span> <span class="n">sklearn.experimental</span> <span class="kn">import</span> <span class="n">enable_hist_gradient_boosting</span>
<span class="kn">from</span> <span class="n">sklearn.ensemble</span> <span class="kn">import</span> <span class="n">HistGradientBoostingClassifier</span>

<span class="n">hgb</span> <span class="o">=</span> <span class="nc">HistGradientBoostingClassifier</span><span class="p">(</span><span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>
<span class="n">scores</span> <span class="o">=</span> <span class="nf">cross_validate</span><span class="p">(</span><span class="n">hgb</span><span class="p">,</span> <span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">,</span>
                        <span class="n">return_train_score</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">scores</span><span class="p">[</span><span class="sh">'</span><span class="s">train_score</span><span class="sh">'</span><span class="p">]),</span> <span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">scores</span><span class="p">[</span><span class="sh">'</span><span class="s">test_score</span><span class="sh">'</span><span class="p">]))</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Pernutation Importance
</span><span class="kn">from</span> <span class="n">sklearn.inspection</span> <span class="kn">import</span> <span class="n">permutation_importance</span>

<span class="n">hgb</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>
<span class="n">result</span> <span class="o">=</span> <span class="nf">permutation_importance</span><span class="p">(</span><span class="n">hgb</span><span class="p">,</span> <span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">,</span> <span class="n">n_repeats</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span>
                               <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">,</span> <span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">result</span><span class="p">.</span><span class="n">importances_mean</span><span class="p">)</span>


<span class="n">result</span> <span class="o">=</span> <span class="nf">permutation_importance</span><span class="p">(</span><span class="n">hgb</span><span class="p">,</span> <span class="n">test_input</span><span class="p">,</span> <span class="n">test_target</span><span class="p">,</span> <span class="n">n_repeats</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span>
                               <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">,</span> <span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">result</span><span class="p">.</span><span class="n">importances_mean</span><span class="p">)</span>
<span class="n">hgb</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">test_input</span><span class="p">,</span> <span class="n">test_target</span><span class="p">)</span>

<span class="p">[</span><span class="mf">0.08876275</span> <span class="mf">0.23438522</span> <span class="mf">0.08027708</span><span class="p">]</span>
<span class="p">[</span><span class="mf">0.05969231</span> <span class="mf">0.20238462</span> <span class="mf">0.049</span>     <span class="p">]</span>
<span class="mf">0.8723076923076923</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">lightgbm</span> <span class="kn">import</span> <span class="n">LGBMClassifier</span>

<span class="n">lgb</span> <span class="o">=</span> <span class="nc">LGBMClassifier</span><span class="p">(</span><span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>
<span class="n">scores</span><span class="o">=</span><span class="nf">cross_validate</span><span class="p">(</span><span class="n">lgb</span><span class="p">,</span> <span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">,</span>
                     <span class="n">return_train_score</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">scores</span><span class="p">[</span><span class="sh">'</span><span class="s">train_score</span><span class="sh">'</span><span class="p">]),</span> <span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">scores</span><span class="p">[</span><span class="sh">'</span><span class="s">test_score</span><span class="sh">'</span><span class="p">]))</span>
</code></pre></div></div>]]></content><author><name>jeong3427</name></author><category term="Machine_Learning" /><category term="python" /><category term="ml" /><category term="머신러닝" /><category term="sklearn" /><category term="앙상블" /><category term="그레이디언트부스팅" /><category term="랜덤포레스트" /><category term="부트스트랩" /><summary type="html"><![CDATA[0. 앙상블 학습]]></summary></entry><entry><title type="html">혼자 공부하는 머신러닝 05</title><link href="https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/04/20/ml_05.html" rel="alternate" type="text/html" title="혼자 공부하는 머신러닝 05" /><published>2025-04-20T00:00:00+09:00</published><updated>2025-04-20T00:00:00+09:00</updated><id>https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/04/20/ml_05</id><content type="html" xml:base="https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/04/20/ml_05.html"><![CDATA[<h3 id="1-결정트리">1. 결정트리</h3>

<p>레드 와인, 화이트 와인 표시가 누락된 상태에서</p>

<p>캔에 적힌 알코올 도수, 당도, pH값으로 구별하는 방법</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## 로지스틱 회귀로 분류
</span><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="n">wine</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span><span class="sh">'</span><span class="s">https://bit.ly/wine-date</span><span class="sh">'</span><span class="p">)</span>
<span class="n">wine</span><span class="p">.</span><span class="nf">info</span><span class="p">()</span>

<span class="o">&lt;</span><span class="k">class</span> <span class="err">'</span><span class="nc">pandas</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">DataFrame</span><span class="sh">'</span><span class="s">&gt;
RangeIndex: 6497 entries, 0 to 6496
Data columns (total 4 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   alcohol  6497 non-null   float64
 1   sugar    6497 non-null   float64
 2   pH       6497 non-null   float64
 3   class    6497 non-null   float64
dtypes: float64(4)

### class가 0이면 레드 와인, 1이면 화이트 와인

data = wine.iloc[:,:-1].to_numpy()
target= wine[</span><span class="sh">'</span><span class="n">class</span><span class="sh">'</span><span class="s">].to_numpy()

from sklearn.model_selection import train_test_split

train_input, test_input, train_target, test_target = train_test_split(
    data, target, test_size=0.2, random_state=42
)

print(train_input.shape, test_input.shape) #(5197, 3) (1300, 3)

from sklearn.preprocessing import StandardScaler

ss = StandardScaler()
ss.fit(train_input)

train_scaled = ss.transform(train_input)
test_scaled = ss.transform(test_input)

from sklearn.linear_model import LogisticRegression

lr = LogisticRegression()
lr.fit(train_scaled, train_target)
print(lr.score(train_scaled, train_target)) #0.7808350971714451
print(lr.score(test_scaled, test_target)) #0.7776923076923077


print(lr.coef_, lr.intercept_) #[[ 0.51268071  1.67335441 -0.68775646]] [1.81773456] 데이터는 알콜, 설탕, pH
print(lr.classes_) #[0. 1.] 0이면 레드 와인, 1이면 화이트 와인

</span></code></pre></div></div>

<p>로지스틱 분류 결과로 볼 때 알콜 도수, 당도가 높으면 화이트 와인일 확률이 높고 pH가 높을 수록 레드 와인이 될 확률이 높음</p>

<p>하지만 설명하기가 어려움 coef_, intercept 결과가 직관적이지 않음</p>

<p>다항 특성을 추가하면 더 설명하기 어려움</p>

<p>이런 문제를 해결하기 위한 결정 트리</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">sklearn.tree</span> <span class="kn">import</span> <span class="n">DecisionTreeClassifier</span>

<span class="n">dt</span> <span class="o">=</span> <span class="nc">DecisionTreeClassifier</span><span class="p">(</span><span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>
<span class="n">dt</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">dt</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">))</span> <span class="c1">#0.996921300750433
</span><span class="nf">print</span><span class="p">(</span><span class="n">dt</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">test_scaled</span><span class="p">,</span> <span class="n">test_target</span><span class="p">))</span> <span class="c1">#0.8592307692307692
</span>
<span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">from</span> <span class="n">sklearn.tree</span> <span class="kn">import</span> <span class="n">plot_tree</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">7</span><span class="p">))</span>
<span class="nf">plot_tree</span><span class="p">(</span><span class="n">dt</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-04-20-ml_05/tree1.png" alt="tree1" /></p>

<p>max_depth를 설정하지 않을 경우 끝까지 감</p>

<p><img src="../../../../images/2025-04-20-ml_05/KakaoTalk_20250420_190831213_01.jpg" alt="KakaoTalk_20250420_190831213_01" /></p>

<p>.</p>

<p>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">7</span><span class="p">))</span>
<span class="nf">plot_tree</span><span class="p">(</span><span class="n">dt</span><span class="p">,</span> <span class="n">max_depth</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">filled</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">feature_names</span><span class="o">=</span><span class="p">[</span><span class="sh">'</span><span class="s">alcohol</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">sugar</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">pH</span><span class="sh">'</span><span class="p">])</span>
<span class="c1">##filled = True를 하면 양성 클래스를 파랑색으로 칠해줌
</span><span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-04-20-ml_05/tree2.png" alt="tree2" /></p>

<p>.</p>

<p>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## 가지치기
</span><span class="n">dt</span> <span class="o">=</span> <span class="nc">DecisionTreeClassifier</span><span class="p">(</span><span class="n">max_depth</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>
<span class="n">dt</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span><span class="mi">15</span><span class="p">))</span>
<span class="nf">plot_tree</span><span class="p">(</span><span class="n">dt</span><span class="p">,</span> <span class="n">filled</span> <span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">feature_names</span><span class="o">=</span><span class="p">[</span><span class="sh">'</span><span class="s">alcohol</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">sugar</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">pH</span><span class="sh">'</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
<span class="c1">#색이 진할수록 양성 클래스가 모여있음
</span></code></pre></div></div>

<p><img src="../../../../images/2025-04-20-ml_05/tree3.png" alt="tree3" /></p>

<p>.</p>

<p>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#스케일 조정을 하지 않고 사용 -&gt; 특성값이 원본 데이터 값으로 나와서 이해하기 쉬움
</span><span class="n">dt</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span><span class="mi">15</span><span class="p">))</span>
<span class="nf">plot_tree</span><span class="p">(</span><span class="n">dt</span><span class="p">,</span> <span class="n">filled</span> <span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">feature_names</span><span class="o">=</span><span class="p">[</span><span class="sh">'</span><span class="s">alcohol</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">sugar</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">pH</span><span class="sh">'</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
<span class="c1">## sugar가 1.625보다 크고 alcohol은 11.025보다 작거나 같으면 레드와인 (레드 와인이 음성 클래스)
</span></code></pre></div></div>

<p><img src="../../../../images/2025-04-20-ml_05/tree4.png" alt="tree4" /></p>

<p><img src="../../../../images/2025-04-20-ml_05/KakaoTalk_20250420_190659536.png" alt="KakaoTalk_20250420_190659536" /></p>

<p><img src="../../../../images/2025-04-20-ml_05/KakaoTalk_20250420_190305494.png" alt="KakaoTalk_20250420_190305494" /></p>

<p><img src="../../../../images/2025-04-20-ml_05/KakaoTalk_20250420_190831213_02.jpg" alt="KakaoTalk_20250420_190831213_02" /></p>

<p>.</p>

<p>.</p>

<h3 id="2-교차-검증">2. 교차 검증</h3>

<p>지금까지 훈련 세트에서 모델을 훈련하고 테스트 세트에서 모델을 평가해왔음.</p>

<p>테스트 세트에서 얻은 점수를 토대로 실전에 투입 시 이 정도 성능을 기대할 수 있다고 가늠.</p>

<p>하지만 테스트 세트를 사용해 성능을 확인하다 보면 점점 테스트 세트에 맞추게 되는 셈.</p>

<p>테스트 세트로 일반화 성능을 올바르게 예측하려면, 가능한 한 테스트 세트를 사용하면 안됨.</p>

<p>테스트 세트를 사용하지 않고 모델이 과대적합인지 과소적합인지 판단하기 위한 간단한 방법은 훈련 세트를 다시 나누는 것.</p>

<p>이것을 검증 세트라고 부름.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">### 검증 세트
</span>
<span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">wine</span> <span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span><span class="sh">'</span><span class="s">https://bit.ly/wine-date</span><span class="sh">'</span><span class="p">)</span>
<span class="n">data</span><span class="o">=</span><span class="n">wine</span><span class="p">[[</span><span class="sh">'</span><span class="s">alcohol</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">sugar</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">pH</span><span class="sh">'</span><span class="p">]].</span><span class="nf">to_numpy</span><span class="p">()</span>
<span class="n">target</span> <span class="o">=</span> <span class="n">wine</span><span class="p">[</span><span class="sh">'</span><span class="s">class</span><span class="sh">'</span><span class="p">].</span><span class="nf">to_numpy</span><span class="p">()</span>

<span class="kn">from</span> <span class="n">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>

<span class="n">train_input</span><span class="p">,</span> <span class="n">test_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">,</span> <span class="n">test_target</span> <span class="o">=</span> <span class="nf">train_test_split</span><span class="p">(</span>
    <span class="n">data</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span> <span class="n">test_size</span><span class="o">=</span><span class="mf">0.2</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span>
<span class="p">)</span>

<span class="n">sub_input</span><span class="p">,</span> <span class="n">val_input</span><span class="p">,</span> <span class="n">sub_target</span><span class="p">,</span> <span class="n">val_target</span><span class="o">=</span> <span class="nf">train_test_split</span><span class="p">(</span>
    <span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">,</span> <span class="n">test_size</span><span class="o">=</span><span class="mf">0.2</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span>
<span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">sub_input</span><span class="p">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">val_input</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span> <span class="c1">#(4157, 3) (1040, 3)
</span></code></pre></div></div>

<p>처음 훈련 세트는 5,197개였는데 sub_input을 보면 4,157개로 줄었고 1,040개의 검증 세트가 추가됨.</p>

<p>이렇게 만들어진 sub_input, sub_target, val_input, val_target으로 모델을 만들고 평가.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">sklearn.tree</span> <span class="kn">import</span> <span class="n">DecisionTreeClassifier</span>

<span class="n">dt</span> <span class="o">=</span> <span class="nc">DecisionTreeClassifier</span><span class="p">(</span><span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>
<span class="n">dt</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">sub_input</span><span class="p">,</span> <span class="n">sub_target</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">dt</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">sub_input</span><span class="p">,</span> <span class="n">sub_target</span><span class="p">))</span> <span class="c1">#훈련세트 0.9971133028626413
</span><span class="nf">print</span><span class="p">(</span><span class="n">dt</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">val_input</span><span class="p">,</span> <span class="n">val_target</span><span class="p">))</span> <span class="c1">#검증세트 0.864423076923077
</span>
<span class="c1">### 과대적합 -&gt; 매개변수를 바꿔서 더 좋은 모델을 찾아야 함
</span></code></pre></div></div>

<p>.</p>

<p>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## 교차 검증
</span>
<span class="kn">from</span> <span class="n">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">cross_validate</span>

<span class="n">scores</span> <span class="o">=</span> <span class="nf">cross_validate</span><span class="p">(</span><span class="n">dt</span><span class="p">,</span> <span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">scores</span><span class="p">)</span>

<span class="p">{</span><span class="sh">'</span><span class="s">fit_time</span><span class="sh">'</span><span class="p">:</span> <span class="nf">array</span><span class="p">([</span><span class="mf">0.00384617</span><span class="p">,</span> <span class="mf">0.004076</span>  <span class="p">,</span> <span class="mf">0.00372863</span><span class="p">,</span> <span class="mf">0.00412512</span><span class="p">,</span> <span class="mf">0.00351977</span><span class="p">]),</span> <span class="sh">'</span><span class="s">score_time</span><span class="sh">'</span><span class="p">:</span> <span class="nf">array</span><span class="p">([</span><span class="mf">0.0004847</span> <span class="p">,</span> <span class="mf">0.000494</span>  <span class="p">,</span> <span class="mf">0.00043845</span><span class="p">,</span> <span class="mf">0.00048184</span><span class="p">,</span> <span class="mf">0.00041032</span><span class="p">]),</span> <span class="sh">'</span><span class="s">test_score</span><span class="sh">'</span><span class="p">:</span> <span class="nf">array</span><span class="p">([</span><span class="mf">0.86923077</span><span class="p">,</span> <span class="mf">0.84615385</span><span class="p">,</span> <span class="mf">0.87680462</span><span class="p">,</span> <span class="mf">0.84889317</span><span class="p">,</span> <span class="mf">0.83541867</span><span class="p">])}</span>


<span class="c1">#교차 검증의 최종 점수는 test_score 키에 담긴 5개 점수의 평균
</span><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">scores</span><span class="p">[</span><span class="sh">'</span><span class="s">test_score</span><span class="sh">'</span><span class="p">]))</span> <span class="c1">#0.855300214703487
</span></code></pre></div></div>

<p><img src="../../../../images/2025-04-20-ml_05/KakaoTalk_20250420_195404598.jpg" alt="KakaoTalk_20250420_195404598" /></p>

<p>보통 5-폴드 교차 검증이나 10-폴드 교차 검증을 많이 사용.</p>

<p>train_test_split() 함수로 전체 데이터를 섞은 후 훈련 세트를 준비했기 때문에 따로 섞을 필요는 없음.</p>

<p>혹시 교차 검증을 할 때 훈련 세트를 섞으려면 분할기를 지정.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#회귀 모델일 경우 KFold 분할기 사용, 분륨 모델일 경우 StratifiedKFold 사용
</span><span class="kn">from</span> <span class="n">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">StratifiedKFold</span>

<span class="n">scores</span> <span class="o">=</span> <span class="nf">cross_validate</span><span class="p">(</span><span class="n">dt</span><span class="p">,</span> <span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">,</span> <span class="n">cv</span><span class="o">=</span><span class="nc">StratifiedKFold</span><span class="p">())</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">scores</span><span class="p">[</span><span class="sh">'</span><span class="s">test_score</span><span class="sh">'</span><span class="p">]))</span> <span class="c1">#0.855300214703487
</span>

<span class="c1">## 10폴드 교차 검증
</span><span class="n">splitter</span> <span class="o">=</span> <span class="nc">StratifiedKFold</span><span class="p">(</span><span class="n">n_splits</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">shuffle</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>
<span class="n">scores</span><span class="o">=</span> <span class="nf">cross_validate</span><span class="p">(</span><span class="n">dt</span><span class="p">,</span> <span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">,</span> <span class="n">cv</span><span class="o">=</span><span class="n">splitter</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">scores</span><span class="p">[</span><span class="sh">'</span><span class="s">test_score</span><span class="sh">'</span><span class="p">]))</span> <span class="c1">#0.8574181117533719
</span></code></pre></div></div>

<p>.</p>

<p>.</p>

<h3 id="3-하이퍼파라미터-튜닝---그리드-서치">3. 하이퍼파라미터 튜닝 - 그리드 서치</h3>

<p>모델이 학습할 수 없어서 사용자가 지정해야만 하는 파라미터 : 하이퍼파라미터</p>

<p>라이브러리의 기본값으로 훈련 후 검증 세트 점수를 보면서 매개변수 조금씩 바꾸기</p>

<p>max_depth 최적값과 min_samples_split 매개변수는 같이 움직이므로, 두 매개변수를 동시에 바꿔가며 최적의 값을 찾아야 함.</p>

<p>사이킷런에서는 그리드 서치 클래스가 해줌.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">GridSearchCV</span>

<span class="n">params</span> <span class="o">=</span> <span class="p">{</span><span class="sh">'</span><span class="s">min_impurity_decrease</span><span class="sh">'</span><span class="p">:[</span><span class="mf">0.0001</span><span class="p">,</span> <span class="mf">0.0002</span><span class="p">,</span> <span class="mf">0.0003</span><span class="p">,</span> <span class="mf">0.0004</span><span class="p">,</span> <span class="mf">0.0005</span><span class="p">]}</span>

<span class="n">gs</span> <span class="o">=</span> <span class="nc">GridSearchCV</span><span class="p">(</span><span class="nc">DecisionTreeClassifier</span><span class="p">(</span><span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">),</span> <span class="n">params</span><span class="p">,</span> <span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span> 
<span class="c1">#n_jobs : 병렬 실행에 사용할 CPU 코어 수. 기본값1, -1은 모든 코어 사용
</span>
<span class="n">gs</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>

<span class="c1">## 최적의 하이퍼파라미터를 찾으면 자동으로 훈련 세트 만들어줌
</span><span class="n">dt</span> <span class="o">=</span> <span class="n">gs</span><span class="p">.</span><span class="n">best_estimator_</span>
<span class="nf">print</span><span class="p">(</span><span class="n">dt</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">))</span> <span class="c1">#0.9615162593804117
</span><span class="nf">print</span><span class="p">(</span><span class="n">gs</span><span class="p">.</span><span class="n">best_params_</span><span class="p">)</span> <span class="c1">#뭐가 제일 좋았는지도 확인 가능
#{'min_impurity_decrease': 0.0001}
</span>
<span class="nf">print</span><span class="p">(</span><span class="n">gs</span><span class="p">.</span><span class="n">cv_results_</span><span class="p">[</span><span class="sh">'</span><span class="s">mean_test_score</span><span class="sh">'</span><span class="p">])</span>
<span class="c1">#[0.86819297 0.86453617 0.86492226 0.86780891 0.86761605]
</span></code></pre></div></div>

<p>넘파이 argmax() 함수를 사용하면 가장 큰 값의 인덱스 확인 가능</p>

<p>params 키에 저장된 매개변수 중 최상의 검증 점수를 만든 매개변수 조합 확인 가능</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">best_index</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">argmax</span><span class="p">(</span><span class="n">gs</span><span class="p">.</span><span class="n">cv_results_</span><span class="p">[</span><span class="sh">'</span><span class="s">mean_test_score</span><span class="sh">'</span><span class="p">])</span>
<span class="nf">print</span><span class="p">(</span><span class="n">gs</span><span class="p">.</span><span class="n">cv_results_</span><span class="p">[</span><span class="sh">'</span><span class="s">params</span><span class="sh">'</span><span class="p">][</span><span class="n">best_index</span><span class="p">])</span>
<span class="c1">#{'min_impurity_decrease': 0.0001}
</span></code></pre></div></div>

<p>.</p>

<p>훈련 세트 조합보다 더 복잡한 매개변수 조합 확인해보기</p>

<p>결정 트리에서 min_impurity_decrease는 노드를 분할하기 위한 불순도 감소 최소량을 지정.</p>

<p>여기에 max_depth로 트리 깊이를 제한하고 min_samples_split으로 노드를 나누기 위한 최소 샘플 수도 지정.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">params</span> <span class="o">=</span><span class="p">{</span>
    <span class="sh">'</span><span class="s">min_impurity_decrease</span><span class="sh">'</span> <span class="p">:</span> <span class="n">np</span><span class="p">.</span><span class="nf">arange</span><span class="p">(</span><span class="mf">0.0001</span><span class="p">,</span> <span class="mf">0.001</span><span class="p">,</span> <span class="mf">0.0001</span><span class="p">),</span> <span class="c1">#0.0001에서 0.001이 될 때까지 0.0001씩 더하는 range
</span>    <span class="sh">'</span><span class="s">max_depth</span><span class="sh">'</span> <span class="p">:</span> <span class="nf">range</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span> <span class="c1">#5에서 20까지 1씩 증가하는 15개 
</span>    <span class="sh">'</span><span class="s">min_samples_split</span><span class="sh">'</span> <span class="p">:</span> <span class="nf">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span> <span class="c1">#2에서 100까지 10씩 더해가며 10개의 값
</span><span class="p">}</span>

<span class="c1">## 9 x 15 x 10 = 1,350개의 교차 검증 횟수
</span>
<span class="n">gs</span> <span class="o">=</span> <span class="nc">GridSearchCV</span><span class="p">(</span><span class="nc">DecisionTreeClassifier</span><span class="p">(</span><span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">),</span> <span class="n">params</span><span class="p">,</span> <span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span>
<span class="n">gs</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">gs</span><span class="p">.</span><span class="n">best_params_</span><span class="p">)</span>
<span class="p">{</span><span class="sh">'</span><span class="s">max_depth</span><span class="sh">'</span><span class="p">:</span> <span class="mi">14</span><span class="p">,</span> <span class="sh">'</span><span class="s">min_impurity_decrease</span><span class="sh">'</span><span class="p">:</span> <span class="n">np</span><span class="p">.</span><span class="nf">float64</span><span class="p">(</span><span class="mf">0.0004</span><span class="p">),</span> <span class="sh">'</span><span class="s">min_samples_split</span><span class="sh">'</span><span class="p">:</span> <span class="mi">12</span><span class="p">}</span>

<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">max</span><span class="p">(</span><span class="n">gs</span><span class="p">.</span><span class="n">cv_results_</span><span class="p">[</span><span class="sh">'</span><span class="s">mean_test_score</span><span class="sh">'</span><span class="p">]))</span>
<span class="c1">#0.8683865773302731
</span></code></pre></div></div>

<p>min_impurity_decrease, max_depth 등 매개변수 간격을 임의로 정했는데 더 좋은 방법이 있다.</p>

<p>.</p>

<p>.</p>

<h3 id="4-랜덤-서치">4. 랜덤 서치</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">scipy.stats</span> <span class="kn">import</span> <span class="n">uniform</span><span class="p">,</span> <span class="n">randint</span>

<span class="c1"># uniform은 정해진 범위에서 실수 값을 고르게 뽑음
# randint는 정수
</span>
<span class="n">params</span> <span class="o">=</span><span class="p">{</span>
    <span class="sh">'</span><span class="s">min_impurity_decrease</span><span class="sh">'</span> <span class="p">:</span> <span class="nf">uniform</span><span class="p">(</span><span class="mf">0.0001</span><span class="p">,</span> <span class="mf">0.001</span><span class="p">),</span>
    <span class="sh">'</span><span class="s">max_depth</span><span class="sh">'</span> <span class="p">:</span> <span class="nf">randint</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span><span class="mi">50</span><span class="p">),</span>
    <span class="sh">'</span><span class="s">min_samples_split</span><span class="sh">'</span> <span class="p">:</span> <span class="nf">randint</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">25</span><span class="p">),</span>
    <span class="sh">'</span><span class="s">min_samples_leaf</span><span class="sh">'</span> <span class="p">:</span> <span class="nf">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">25</span><span class="p">)</span>
<span class="p">}</span>

<span class="kn">from</span> <span class="n">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">RandomizedSearchCV</span>

<span class="n">gs</span> <span class="o">=</span> <span class="nc">RandomizedSearchCV</span><span class="p">(</span><span class="nc">DecisionTreeClassifier</span><span class="p">(</span><span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">),</span> 
                       <span class="n">params</span><span class="p">,</span>
                       <span class="n">n_iter</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span>
                       <span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>

<span class="n">gs</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">gs</span><span class="p">.</span><span class="n">best_params_</span><span class="p">)</span>
<span class="p">{</span><span class="sh">'</span><span class="s">max_depth</span><span class="sh">'</span><span class="p">:</span> <span class="mi">39</span><span class="p">,</span> <span class="sh">'</span><span class="s">min_impurity_decrease</span><span class="sh">'</span><span class="p">:</span> <span class="n">np</span><span class="p">.</span><span class="nf">float64</span><span class="p">(</span><span class="mf">0.00034102546602601173</span><span class="p">),</span> <span class="sh">'</span><span class="s">min_samples_leaf</span><span class="sh">'</span><span class="p">:</span> <span class="mi">7</span><span class="p">,</span> <span class="sh">'</span><span class="s">min_samples_split</span><span class="sh">'</span><span class="p">:</span> <span class="mi">13</span><span class="p">}</span>

<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">max</span><span class="p">(</span><span class="n">gs</span><span class="p">.</span><span class="n">cv_results_</span><span class="p">[</span><span class="sh">'</span><span class="s">mean_test_score</span><span class="sh">'</span><span class="p">]))</span>
<span class="c1">#0.8695428296438884
</span>
<span class="n">dt</span> <span class="o">=</span> <span class="n">gs</span><span class="p">.</span><span class="n">best_estimator_</span>
<span class="nf">print</span><span class="p">(</span><span class="n">dt</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">test_input</span><span class="p">,</span> <span class="n">test_target</span><span class="p">))</span>
<span class="c1">#0.86
</span></code></pre></div></div>

<p>테스트 세트 점수는 검증 세트 점수보다 조금 작은 것이 일반적.</p>]]></content><author><name>jeong3427</name></author><category term="Machine_Learning" /><category term="python" /><category term="ml" /><category term="머신러닝" /><category term="sklearn" /><category term="사이킷런" /><category term="결정트리" /><category term="그리드서치" /><category term="교차검증" /><summary type="html"><![CDATA[1. 결정트리]]></summary></entry><entry><title type="html">혼자 공부하는 머신러닝 04</title><link href="https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/04/17/ml_04.html" rel="alternate" type="text/html" title="혼자 공부하는 머신러닝 04" /><published>2025-04-17T00:00:00+09:00</published><updated>2025-04-17T00:00:00+09:00</updated><id>https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/04/17/ml_04</id><content type="html" xml:base="https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/04/17/ml_04.html"><![CDATA[<p><img src="../../../../images/2025-04-17-ml_04/KakaoTalk_20250417_214326946.jpg" alt="KakaoTalk_20250417_214326946" style="zoom:80%;" /></p>

<p>확률적 경사 하강법, 에포크 개념</p>

<p>훈련 세트를 사용해 최적 포인트를 찾아 조금씩 이동하는 알고리즘</p>

<h3 id="1-데이터-준비">1. 데이터 준비</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">fish</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span><span class="sh">'</span><span class="s">https://bit.ly/fish_csv</span><span class="sh">'</span><span class="p">)</span>

<span class="n">fish_input</span> <span class="o">=</span> <span class="n">fish</span><span class="p">.</span><span class="n">iloc</span><span class="p">[:,</span><span class="mi">1</span><span class="p">:].</span><span class="nf">to_numpy</span><span class="p">()</span>
<span class="n">fish_target</span> <span class="o">=</span> <span class="n">fish</span><span class="p">[</span><span class="sh">'</span><span class="s">Species</span><span class="sh">'</span><span class="p">].</span><span class="nf">to_numpy</span><span class="p">()</span>

<span class="kn">from</span> <span class="n">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>

<span class="n">train_input</span><span class="p">,</span> <span class="n">test_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">,</span> <span class="n">test_target</span> <span class="o">=</span> <span class="nf">train_test_split</span><span class="p">(</span>
<span class="n">fish_input</span><span class="p">,</span> <span class="n">fish_target</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>

<span class="kn">from</span> <span class="n">sklearn.preprocessing</span> <span class="kn">import</span> <span class="n">StandardScaler</span>

<span class="n">ss</span><span class="o">=</span> <span class="nc">StandardScaler</span><span class="p">()</span>
<span class="n">ss</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_input</span><span class="p">)</span>
<span class="n">train_scaled</span> <span class="o">=</span> <span class="n">ss</span><span class="p">.</span><span class="nf">transform</span><span class="p">(</span><span class="n">train_input</span><span class="p">)</span>
<span class="n">test_scaled</span> <span class="o">=</span> <span class="n">ss</span><span class="p">.</span><span class="nf">transform</span><span class="p">(</span><span class="n">test_input</span><span class="p">)</span>
</code></pre></div></div>

<p>.</p>

<p>.</p>

<h3 id="2-확률적-경사-하강법">2. 확률적 경사 하강법</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## 확률적 경사 하강법 제공하는 분류용 클래스
## 분류일 때라서 Classifier
</span><span class="kn">from</span> <span class="n">sklearn.linear_model</span> <span class="kn">import</span> <span class="n">SGDScaler</span>

<span class="n">sc</span> <span class="o">=</span> <span class="nc">SGDScaler</span><span class="p">(</span><span class="n">loss</span><span class="o">=</span><span class="sh">'</span><span class="s">log_loss</span><span class="sh">'</span><span class="p">,</span> <span class="n">max_iter</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>
<span class="n">sc</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">sc</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">))</span> <span class="c1">#0.773109243697479
</span><span class="nf">print</span><span class="p">(</span><span class="n">sc</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">test_scaled</span><span class="p">,</span> <span class="n">test_target</span><span class="p">))</span> <span class="c1">#0.775
</span>
<span class="c1">###  ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
## max_iter=10으로 둬서 워닝 메시지
</span></code></pre></div></div>

<p>max_iter =10으로 뒀을 때 정확도가 77퍼 밖에 안된다.</p>

<p>partial_fit() 메서드 사용해서 1 에포크씩 이어서 훈련</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## 세 번 반복했을 때 결과값
</span><span class="n">sc</span><span class="p">.</span><span class="nf">partial_fit</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">sc</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">))</span> <span class="c1"># 0.8571428571428571
</span><span class="nf">print</span><span class="p">(</span><span class="n">sc</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">test_scaled</span><span class="p">,</span> <span class="n">test_target</span><span class="p">))</span> <span class="c1">#0.85
</span></code></pre></div></div>

<p>.</p>

<p>.</p>

<h3 id="3-과소적합-과대적합">3. 과소적합, 과대적합</h3>

<p><img src="../../../../images/2025-04-17-ml_04/KakaoTalk_20250417_214326946_01.jpg" alt="KakaoTalk_20250417_214326946_01" style="zoom:80%;" /></p>

<table>
  <thead>
    <tr>
      <th> </th>
      <th>과소적합 (Underfitting)</th>
      <th>과대적합 (Overfitting)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>**정의**</td>
      <td>모델이 너무 단순해서 학습을 제대로 못함</td>
      <td>모델이 너무 복잡해서 훈련 데이터에 과하게 맞춤</td>
    </tr>
    <tr>
      <td>**특징**</td>
      <td>훈련 정확도도 낮고, 테스트 정확도도 낮음</td>
      <td>훈련 정확도는 높지만, 테스트 정확도는 낮음</td>
    </tr>
    <tr>
      <td>**원인**</td>
      <td>- 모델이 단순함 - 학습 부족 - 너무 강한 정규화</td>
      <td>- 모델이 너무 복잡함 - 훈련 데이터에만 맞춤 - 정규화 부족</td>
    </tr>
    <tr>
      <td>**해결법**</td>
      <td>- 모델 복잡도 ↑ - 더 오래 학습 - 피처 더 많이 쓰기</td>
      <td>- 모델 단순화 - 정규화 적용 - 더 많은 데이터 사용</td>
    </tr>
  </tbody>
</table>

<p>.</p>

<table>
  <thead>
    <tr>
      <th>상황</th>
      <th>훈련 정확도</th>
      <th>테스트 정확도</th>
      <th>상태</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>A</td>
      <td>60%</td>
      <td>58%</td>
      <td>과소적합</td>
    </tr>
    <tr>
      <td>B</td>
      <td>99%</td>
      <td>65%</td>
      <td>과대적합</td>
    </tr>
    <tr>
      <td>C</td>
      <td>92%</td>
      <td>90%</td>
      <td>적절 (일반화 잘 됨)</td>
    </tr>
  </tbody>
</table>

<p>.</p>

<p>훈련 데이터에 대해:</p>

<ul>
  <li>과소적합: 직선 하나로 모든 걸 설명하려 함 (너무 단순)</li>
  <li>과대적합: 점 하나하나에 맞춘 곡선 (너무 복잡)</li>
  <li>적절한 모델: 데이터의 흐름을 잘 따르는 곡선</li>
</ul>

<p>.</p>

<p>.</p>

<h3 id="4-적절한-에포크-값-찾기">4. 적절한 에포크 값 찾기</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">sc</span> <span class="o">=</span> <span class="nc">SGDClassifier</span><span class="p">(</span><span class="n">loss</span><span class="o">=</span><span class="sh">'</span><span class="s">log_loss</span><span class="sh">'</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>
<span class="n">train_score</span><span class="o">=</span><span class="p">[]</span>
<span class="n">test_score</span><span class="o">=</span><span class="p">[]</span>
<span class="n">classes</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">unique</span><span class="p">(</span><span class="n">train_target</span><span class="p">)</span>

<span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">300</span><span class="p">):</span>
    <span class="n">sc</span><span class="p">.</span><span class="nf">partial_fit</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">,</span> <span class="n">classes</span><span class="o">=</span><span class="n">classes</span><span class="p">)</span>
    <span class="n">train_score</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">sc</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">))</span>
    <span class="n">test_score</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">sc</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">test_scaled</span><span class="p">,</span> <span class="n">test_target</span><span class="p">))</span>

<span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">train_score</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">test_score</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">epoch</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">accuracy</span><span class="sh">'</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-04-17-ml_04/plt.png" alt="plt" /></p>

<p>100 에포크 이후로는 과대적합</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sc</span> <span class="o">=</span> <span class="nc">SGDClassifier</span><span class="p">(</span><span class="n">loss</span><span class="o">=</span><span class="sh">'</span><span class="s">log_loss</span><span class="sh">'</span><span class="p">,</span> <span class="n">max_iter</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span> <span class="n">tol</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>
<span class="n">sc</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">sc</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">))</span> <span class="c1"># 0.957983193277311
</span><span class="nf">print</span><span class="p">(</span><span class="n">sc</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">test_scaled</span><span class="p">,</span> <span class="n">test_target</span><span class="p">))</span> <span class="c1">#0.925
</span></code></pre></div></div>

<p>.</p>

<p>.</p>

<p>SGDClassifier의 loss 매개 변수 기본은 hinge</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sc</span> <span class="o">=</span> <span class="nc">SGDClassifier</span><span class="p">(</span><span class="n">loss</span><span class="o">=</span><span class="sh">'</span><span class="s">hinge</span><span class="sh">'</span><span class="p">,</span> <span class="n">max_iter</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span> <span class="n">tol</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>
<span class="n">sc</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">sc</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">))</span> <span class="c1">#0.9495798319327731
</span><span class="nf">print</span><span class="p">(</span><span class="n">sc</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">test_scaled</span><span class="p">,</span> <span class="n">test_target</span><span class="p">))</span> <span class="c1">#0.925
</span></code></pre></div></div>]]></content><author><name>jeong3427</name></author><category term="Machine_Learning" /><category term="python" /><category term="ml" /><category term="머신러닝" /><category term="sklearn" /><category term="사이킷런" /><category term="넘파이" /><category term="numpy" /><category term="확률적경사하강법" /><category term="SGD" /><category term="로지스틱손실함수" /><category term="과소적합" /><category term="과대적합" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">혼자 공부하는 머신러닝 03</title><link href="https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/04/16/ml_03.html" rel="alternate" type="text/html" title="혼자 공부하는 머신러닝 03" /><published>2025-04-16T00:00:00+09:00</published><updated>2025-04-16T00:00:00+09:00</updated><id>https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/04/16/ml_03</id><content type="html" xml:base="https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/04/16/ml_03.html"><![CDATA[<p>7개 종류의 생선을 랜덤하게 럭키백에 넣고</p>

<p>길이, 대각선, 높이, 두께, 무게 5개의 특성을 통해서 이 생선이 7개의 종류 중 어떤 것일지 확률을 구하기</p>

<h3 id="1-데이터-세팅">1. 데이터 세팅</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">fish</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span><span class="sh">'</span><span class="s">https://bit.ly/fish_csv</span><span class="sh">'</span><span class="p">)</span>

<span class="n">pd</span><span class="p">.</span><span class="nf">unique</span><span class="p">(</span><span class="n">fish</span><span class="p">[</span><span class="sh">'</span><span class="s">Species</span><span class="sh">'</span><span class="p">])</span>
<span class="c1">##array(['Bream', 'Roach', 'Whitefish', 'Parkki', 'Perch', 'Pike', 'Smelt'],dtype=object)
</span>

<span class="n">fish_input</span> <span class="o">=</span> <span class="n">fish</span><span class="p">.</span><span class="n">iloc</span><span class="p">[:,</span><span class="mi">1</span><span class="p">:].</span><span class="nf">to_numpy</span><span class="p">()</span>
<span class="n">fish_target</span> <span class="o">=</span> <span class="n">fish</span><span class="p">[</span><span class="sh">'</span><span class="s">Species</span><span class="sh">'</span><span class="p">].</span><span class="nf">to_numpy</span><span class="p">()</span>

<span class="kn">from</span> <span class="n">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>

<span class="n">train_input</span><span class="p">,</span> <span class="n">test_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">,</span> <span class="n">test_target</span> <span class="o">=</span> <span class="nf">train_test_split</span><span class="p">(</span>
    <span class="n">fish_input</span><span class="p">,</span> <span class="n">fish_target</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span>
<span class="p">)</span>

<span class="kn">from</span> <span class="n">sklearn.preprocessing</span> <span class="kn">import</span> <span class="n">StandardScaler</span>

<span class="n">ss</span> <span class="o">=</span> <span class="nc">StandardScaler</span><span class="p">()</span>
<span class="n">ss</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_input</span><span class="p">)</span>
<span class="n">train_scaled</span> <span class="o">=</span> <span class="n">ss</span><span class="p">.</span><span class="nf">transform</span><span class="p">(</span><span class="n">train_input</span><span class="p">)</span>
<span class="n">test_scaled</span> <span class="o">=</span> <span class="n">ss</span><span class="p">.</span><span class="nf">transform</span><span class="p">(</span><span class="n">test_input</span><span class="p">)</span>
</code></pre></div></div>

<p>.</p>

<h3 id="2-로지스틱-이진-분류">2. 로지스틱 이진 분류</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">##데이터 세트 중에 도미, 빙어만 쓰기 위해 정리
## Bream = 도미, Smelt = 빙어
</span><span class="n">bream_smelt_indexes</span> <span class="o">=</span> <span class="p">(</span><span class="n">train_target</span><span class="o">==</span><span class="sh">'</span><span class="s">Bream</span><span class="sh">'</span><span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="n">train_target</span><span class="o">==</span><span class="sh">'</span><span class="s">Smelt</span><span class="sh">'</span><span class="p">)</span>
<span class="n">train_bream_smelt</span> <span class="o">=</span> <span class="n">train_scaled</span><span class="p">[</span><span class="n">bream_smelt_indexes</span><span class="p">]</span>
<span class="n">target_bream_smelt</span> <span class="o">=</span> <span class="n">train_target</span><span class="p">[</span><span class="n">bream_smelt_indexes</span><span class="p">]</span>

<span class="kn">from</span> <span class="n">sklearn.linear_model</span> <span class="kn">import</span> <span class="n">LogisticRegression</span>

<span class="n">lr</span> <span class="o">=</span> <span class="nc">LogisticRegression</span><span class="p">()</span>
<span class="n">lr</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_bream_smelt</span><span class="p">,</span> <span class="n">target_bream_smelt</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">lr</span><span class="p">.</span><span class="nf">predict</span><span class="p">(</span><span class="n">train_bream_smelt</span><span class="p">[:</span><span class="mi">5</span><span class="p">]))</span>
<span class="c1">## ['Bream' 'Smelt' 'Bream' 'Bream' 'Bream']
</span></code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="nf">print</span><span class="p">(</span><span class="n">lr</span><span class="p">.</span><span class="n">classes_</span><span class="p">)</span> 
<span class="c1">## array(['Bream', 'Smelt'], dtype=object)
### Smelt 가 1로 양성 클래스
</span>

<span class="nf">print</span><span class="p">(</span><span class="n">lr</span><span class="p">.</span><span class="nf">predict_proba</span><span class="p">(</span><span class="n">train_bream_smelt</span><span class="p">[:</span><span class="mi">5</span><span class="p">]))</span>
<span class="c1">### 첫번째가 음성 클래스(0) 에 대한 확률, 두번째 열이 양성 클래스(1)에 대한 확률
## 무엇이 음성이고 양성인지는 lr.classes_ 로 확인
</span><span class="p">[[</span><span class="mf">0.99759855</span> <span class="mf">0.00240145</span><span class="p">]</span>
 <span class="p">[</span><span class="mf">0.02735183</span> <span class="mf">0.97264817</span><span class="p">]</span>
 <span class="p">[</span><span class="mf">0.99486072</span> <span class="mf">0.00513928</span><span class="p">]</span>
 <span class="p">[</span><span class="mf">0.98584202</span> <span class="mf">0.01415798</span><span class="p">]</span>
 <span class="p">[</span><span class="mf">0.99767269</span> <span class="mf">0.00232731</span><span class="p">]]</span>

<span class="c1">## 첫번째 데이터 도미일 확률 99퍼, 빙어일 확률 0.2퍼
</span>

<span class="n">decisions</span> <span class="o">=</span> <span class="n">lr</span><span class="p">.</span><span class="nf">decision_function</span><span class="p">(</span><span class="n">train_bream_smelt</span><span class="p">[:</span><span class="mi">5</span><span class="p">])</span>


<span class="c1">## 시그모이드 함수로 확률 값 얻기
</span><span class="kn">from</span> <span class="n">scipy.special</span> <span class="kn">import</span> <span class="n">expit</span>
<span class="nf">print</span><span class="p">(</span><span class="nf">expit</span><span class="p">(</span><span class="n">decisions</span><span class="p">))</span> <span class="c1">## [0.00240145 0.97264817 0.00513928 0.01415798 0.00232731]
</span>
<span class="c1">### (lr.predict_proba(train_bream_smelt[:5])) 로 했을 때 두번째 열의 값, 양성 클래스에 대한 확률과 동일
### decision_function 매서드는 양성 클래스에 대한 z 값을 반환
</span><span class="p">[</span><span class="mf">0.00240145</span> <span class="mf">0.97264817</span> <span class="mf">0.00513928</span> <span class="mf">0.01415798</span> <span class="mf">0.00232731</span><span class="p">]</span>
</code></pre></div></div>

<p>.</p>

<h3 id="3-로지스틱-다중-분류">3. 로지스틱 다중 분류</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">sklearn.linear_model</span> <span class="kn">import</span> <span class="n">LogisticRegression</span>

<span class="n">lr</span> <span class="o">=</span> <span class="nc">LogisticRegression</span><span class="p">(</span><span class="n">C</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">max_iter</span><span class="o">=</span><span class="mi">1000</span><span class="p">)</span>
<span class="n">lr</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">lr</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">))</span> <span class="c1">## 0.9327731092436975
</span><span class="nf">print</span><span class="p">(</span><span class="n">lr</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">test_scaled</span><span class="p">,</span> <span class="n">test_target</span><span class="p">))</span> <span class="c1">## 0.925
</span>
<span class="c1">## 과소적합이나 과대적합이 보이지 않음
</span></code></pre></div></div>

<p>로지스틱에서 반복횟수는 기본적으로 100.</p>

<p>숫자가 적어서 1000으로 늘려서 세팅</p>

<p>규제는 L2 Norm을 사용하는 규제를 자동으로 적용.</p>

<p>규제의 강도를 조절하는 게 C 값. 기본값은 1.</p>

<p>C값이 올라가면 규제가 약해지고, 낮아지면 규제가 강해짐.</p>

<p>선형회귀의 alpha와 반대로 작용.</p>

<p>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">lr</span><span class="p">.</span><span class="nf">predict</span><span class="p">(</span><span class="n">test_scaled</span><span class="p">[:</span><span class="mi">5</span><span class="p">])</span>
<span class="c1"># array(['Perch', 'Smelt', 'Pike', 'Roach', 'Perch'], dtype=object)
</span>
<span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">proba</span><span class="o">=</span> <span class="n">lr</span><span class="p">.</span><span class="nf">predict_proba</span><span class="p">(</span><span class="n">test_scaled</span><span class="p">[:</span><span class="mi">5</span><span class="p">])</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">round</span><span class="p">(</span><span class="n">proba</span><span class="p">,</span> <span class="n">decimals</span><span class="o">=</span><span class="mi">3</span><span class="p">))</span>

<span class="p">[[</span><span class="mf">0.</span>    <span class="mf">0.014</span> <span class="mf">0.841</span> <span class="mf">0.</span>    <span class="mf">0.136</span> <span class="mf">0.007</span> <span class="mf">0.003</span><span class="p">]</span>
 <span class="p">[</span><span class="mf">0.</span>    <span class="mf">0.003</span> <span class="mf">0.044</span> <span class="mf">0.</span>    <span class="mf">0.007</span> <span class="mf">0.946</span> <span class="mf">0.</span>   <span class="p">]</span>
 <span class="p">[</span><span class="mf">0.</span>    <span class="mf">0.</span>    <span class="mf">0.034</span> <span class="mf">0.935</span> <span class="mf">0.015</span> <span class="mf">0.016</span> <span class="mf">0.</span>   <span class="p">]</span>
 <span class="p">[</span><span class="mf">0.011</span> <span class="mf">0.034</span> <span class="mf">0.306</span> <span class="mf">0.007</span> <span class="mf">0.567</span> <span class="mf">0.</span>    <span class="mf">0.076</span><span class="p">]</span>
 <span class="p">[</span><span class="mf">0.</span>    <span class="mf">0.</span>    <span class="mf">0.904</span> <span class="mf">0.002</span> <span class="mf">0.089</span> <span class="mf">0.002</span> <span class="mf">0.001</span><span class="p">]]</span>


<span class="nf">print</span><span class="p">(</span><span class="n">lr</span><span class="p">.</span><span class="n">classes_</span><span class="p">)</span>
<span class="c1"># array(['Bream', 'Parkki', 'Perch', 'Pike', 'Roach', 'Smelt', 'Whitefish'],dtype=object)
</span>
<span class="n">decision</span> <span class="o">=</span> <span class="n">lr</span><span class="p">.</span><span class="nf">decision_function</span><span class="p">(</span><span class="n">test_scaled</span><span class="p">[:</span><span class="mi">5</span><span class="p">])</span>
<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">round</span><span class="p">(</span><span class="n">decision</span><span class="p">,</span> <span class="n">decimals</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>

<span class="p">[[</span> <span class="o">-</span><span class="mf">6.5</span>    <span class="mf">1.03</span>   <span class="mf">5.16</span>  <span class="o">-</span><span class="mf">2.73</span>   <span class="mf">3.34</span>   <span class="mf">0.33</span>  <span class="o">-</span><span class="mf">0.63</span><span class="p">]</span>
 <span class="p">[</span><span class="o">-</span><span class="mf">10.86</span>   <span class="mf">1.93</span>   <span class="mf">4.77</span>  <span class="o">-</span><span class="mf">2.4</span>    <span class="mf">2.98</span>   <span class="mf">7.84</span>  <span class="o">-</span><span class="mf">4.26</span><span class="p">]</span>
 <span class="p">[</span> <span class="o">-</span><span class="mf">4.34</span>  <span class="o">-</span><span class="mf">6.23</span>   <span class="mf">3.17</span>   <span class="mf">6.49</span>   <span class="mf">2.36</span>   <span class="mf">2.42</span>  <span class="o">-</span><span class="mf">3.87</span><span class="p">]</span>
 <span class="p">[</span> <span class="o">-</span><span class="mf">0.68</span>   <span class="mf">0.45</span>   <span class="mf">2.65</span>  <span class="o">-</span><span class="mf">1.19</span>   <span class="mf">3.26</span>  <span class="o">-</span><span class="mf">5.75</span>   <span class="mf">1.26</span><span class="p">]</span>
 <span class="p">[</span> <span class="o">-</span><span class="mf">6.4</span>   <span class="o">-</span><span class="mf">1.99</span>   <span class="mf">5.82</span>  <span class="o">-</span><span class="mf">0.11</span>   <span class="mf">3.5</span>   <span class="o">-</span><span class="mf">0.11</span>  <span class="o">-</span><span class="mf">0.71</span><span class="p">]]</span>


<span class="c1">### 다항일 때는 시그모이드 대신 소프트맥스 함수 사용
</span>
<span class="kn">from</span> <span class="n">scipy.special</span> <span class="kn">import</span> <span class="n">softmax</span>

<span class="n">proba</span> <span class="o">=</span> <span class="nf">softmax</span><span class="p">(</span><span class="n">decision</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">round</span><span class="p">(</span><span class="n">proba</span><span class="p">,</span> <span class="n">decimals</span><span class="o">=</span><span class="mi">3</span><span class="p">))</span>

<span class="p">[[</span><span class="mf">0.</span>    <span class="mf">0.014</span> <span class="mf">0.841</span> <span class="mf">0.</span>    <span class="mf">0.136</span> <span class="mf">0.007</span> <span class="mf">0.003</span><span class="p">]</span>
 <span class="p">[</span><span class="mf">0.</span>    <span class="mf">0.003</span> <span class="mf">0.044</span> <span class="mf">0.</span>    <span class="mf">0.007</span> <span class="mf">0.946</span> <span class="mf">0.</span>   <span class="p">]</span>
 <span class="p">[</span><span class="mf">0.</span>    <span class="mf">0.</span>    <span class="mf">0.034</span> <span class="mf">0.935</span> <span class="mf">0.015</span> <span class="mf">0.016</span> <span class="mf">0.</span>   <span class="p">]</span>
 <span class="p">[</span><span class="mf">0.011</span> <span class="mf">0.034</span> <span class="mf">0.306</span> <span class="mf">0.007</span> <span class="mf">0.567</span> <span class="mf">0.</span>    <span class="mf">0.076</span><span class="p">]</span>
 <span class="p">[</span><span class="mf">0.</span>    <span class="mf">0.</span>    <span class="mf">0.904</span> <span class="mf">0.002</span> <span class="mf">0.089</span> <span class="mf">0.002</span> <span class="mf">0.001</span><span class="p">]]</span>
</code></pre></div></div>]]></content><author><name>jeong3427</name></author><category term="Machine_Learning" /><category term="python" /><category term="ml" /><category term="머신러닝" /><category term="sklearn" /><category term="회귀" /><category term="사이킷런" /><category term="넘파이" /><category term="numpy" /><category term="로지스틱" /><summary type="html"><![CDATA[7개 종류의 생선을 랜덤하게 럭키백에 넣고]]></summary></entry><entry><title type="html">혼자 공부하는 머신러닝 02</title><link href="https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/04/15/ml_02.html" rel="alternate" type="text/html" title="혼자 공부하는 머신러닝 02" /><published>2025-04-15T00:00:00+09:00</published><updated>2025-04-15T00:00:00+09:00</updated><id>https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/04/15/ml_02</id><content type="html" xml:base="https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/04/15/ml_02.html"><![CDATA[<h3 id="1-선형-회귀">1. 선형 회귀</h3>

<p><img src="../../../../images/2025-04-15-ml_02/image-20250415152442186.png" alt="image-20250415152442186" /></p>

<p>넘파이 array reshape 예시</p>

<p>.</p>

<p>.</p>

<p>농어 길이가 50cm일 때 무게를 k 최근접 이웃으로 예측하면</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#### k최근접 이웃 알고리즘의 한계
</span>
<span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">perch_length</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">(</span>
    <span class="p">[</span><span class="mf">8.4</span><span class="p">,</span> <span class="mf">13.7</span><span class="p">,</span> <span class="mf">15.0</span><span class="p">,</span> <span class="mf">16.2</span><span class="p">,</span> <span class="mf">17.4</span><span class="p">,</span> <span class="mf">18.0</span><span class="p">,</span> <span class="mf">18.7</span><span class="p">,</span> <span class="mf">19.0</span><span class="p">,</span> <span class="mf">19.6</span><span class="p">,</span> <span class="mf">20.0</span><span class="p">,</span>
     <span class="mf">21.0</span><span class="p">,</span> <span class="mf">21.0</span><span class="p">,</span> <span class="mf">21.0</span><span class="p">,</span> <span class="mf">21.3</span><span class="p">,</span> <span class="mf">22.0</span><span class="p">,</span> <span class="mf">22.0</span><span class="p">,</span> <span class="mf">22.0</span><span class="p">,</span> <span class="mf">22.0</span><span class="p">,</span> <span class="mf">22.0</span><span class="p">,</span> <span class="mf">22.5</span><span class="p">,</span>
     <span class="mf">22.5</span><span class="p">,</span> <span class="mf">22.7</span><span class="p">,</span> <span class="mf">23.0</span><span class="p">,</span> <span class="mf">23.5</span><span class="p">,</span> <span class="mf">24.0</span><span class="p">,</span> <span class="mf">24.0</span><span class="p">,</span> <span class="mf">24.6</span><span class="p">,</span> <span class="mf">25.0</span><span class="p">,</span> <span class="mf">25.6</span><span class="p">,</span> <span class="mf">26.5</span><span class="p">,</span>
     <span class="mf">27.3</span><span class="p">,</span> <span class="mf">27.5</span><span class="p">,</span> <span class="mf">27.5</span><span class="p">,</span> <span class="mf">27.5</span><span class="p">,</span> <span class="mf">28.0</span><span class="p">,</span> <span class="mf">28.7</span><span class="p">,</span> <span class="mf">30.0</span><span class="p">,</span> <span class="mf">32.8</span><span class="p">,</span> <span class="mf">34.5</span><span class="p">,</span> <span class="mf">35.0</span><span class="p">,</span>
     <span class="mf">36.5</span><span class="p">,</span> <span class="mf">36.0</span><span class="p">,</span> <span class="mf">37.0</span><span class="p">,</span> <span class="mf">37.0</span><span class="p">,</span> <span class="mf">39.0</span><span class="p">,</span> <span class="mf">39.0</span><span class="p">,</span> <span class="mf">39.0</span><span class="p">,</span> <span class="mf">40.0</span><span class="p">,</span> <span class="mf">40.0</span><span class="p">,</span> <span class="mf">40.0</span><span class="p">,</span>
     <span class="mf">40.0</span><span class="p">,</span> <span class="mf">42.0</span><span class="p">,</span> <span class="mf">43.0</span><span class="p">,</span> <span class="mf">43.0</span><span class="p">,</span> <span class="mf">43.5</span><span class="p">,</span> <span class="mf">44.0</span><span class="p">]</span>
     <span class="p">)</span>
<span class="n">perch_weight</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">(</span>
    <span class="p">[</span><span class="mf">5.9</span><span class="p">,</span> <span class="mf">32.0</span><span class="p">,</span> <span class="mf">40.0</span><span class="p">,</span> <span class="mf">51.5</span><span class="p">,</span> <span class="mf">70.0</span><span class="p">,</span> <span class="mf">100.0</span><span class="p">,</span> <span class="mf">78.0</span><span class="p">,</span> <span class="mf">80.0</span><span class="p">,</span> <span class="mf">85.0</span><span class="p">,</span> <span class="mf">85.0</span><span class="p">,</span>
     <span class="mf">110.0</span><span class="p">,</span> <span class="mf">115.0</span><span class="p">,</span> <span class="mf">125.0</span><span class="p">,</span> <span class="mf">130.0</span><span class="p">,</span> <span class="mf">120.0</span><span class="p">,</span> <span class="mf">120.0</span><span class="p">,</span> <span class="mf">130.0</span><span class="p">,</span> <span class="mf">135.0</span><span class="p">,</span> <span class="mf">110.0</span><span class="p">,</span>
     <span class="mf">130.0</span><span class="p">,</span> <span class="mf">150.0</span><span class="p">,</span> <span class="mf">145.0</span><span class="p">,</span> <span class="mf">150.0</span><span class="p">,</span> <span class="mf">170.0</span><span class="p">,</span> <span class="mf">225.0</span><span class="p">,</span> <span class="mf">145.0</span><span class="p">,</span> <span class="mf">188.0</span><span class="p">,</span> <span class="mf">180.0</span><span class="p">,</span>
     <span class="mf">197.0</span><span class="p">,</span> <span class="mf">218.0</span><span class="p">,</span> <span class="mf">300.0</span><span class="p">,</span> <span class="mf">260.0</span><span class="p">,</span> <span class="mf">265.0</span><span class="p">,</span> <span class="mf">250.0</span><span class="p">,</span> <span class="mf">250.0</span><span class="p">,</span> <span class="mf">300.0</span><span class="p">,</span> <span class="mf">320.0</span><span class="p">,</span>
     <span class="mf">514.0</span><span class="p">,</span> <span class="mf">556.0</span><span class="p">,</span> <span class="mf">840.0</span><span class="p">,</span> <span class="mf">685.0</span><span class="p">,</span> <span class="mf">700.0</span><span class="p">,</span> <span class="mf">700.0</span><span class="p">,</span> <span class="mf">690.0</span><span class="p">,</span> <span class="mf">900.0</span><span class="p">,</span> <span class="mf">650.0</span><span class="p">,</span>
     <span class="mf">820.0</span><span class="p">,</span> <span class="mf">850.0</span><span class="p">,</span> <span class="mf">900.0</span><span class="p">,</span> <span class="mf">1015.0</span><span class="p">,</span> <span class="mf">820.0</span><span class="p">,</span> <span class="mf">1100.0</span><span class="p">,</span> <span class="mf">1000.0</span><span class="p">,</span> <span class="mf">1100.0</span><span class="p">,</span>
     <span class="mf">1000.0</span><span class="p">,</span> <span class="mf">1000.0</span><span class="p">]</span>
     <span class="p">)</span>

<span class="kn">from</span> <span class="n">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>

<span class="n">train_input</span><span class="p">,</span> <span class="n">test_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">,</span> <span class="n">test_target</span><span class="o">=</span> <span class="nf">train_test_split</span><span class="p">(</span>
<span class="n">perch_length</span><span class="p">,</span> <span class="n">perch_weight</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>

<span class="c1">## 2차원 배열로 변경
</span><span class="n">train_input</span> <span class="o">=</span> <span class="n">train_input</span><span class="p">.</span><span class="nf">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="n">test_input</span> <span class="o">=</span> <span class="n">test_input</span><span class="p">.</span><span class="nf">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>

<span class="kn">from</span> <span class="n">sklearn.neighbors</span> <span class="kn">import</span> <span class="n">KNeighborsRegressor</span>

<span class="n">knr</span> <span class="o">=</span> <span class="nc">KNeighborsRegressor</span><span class="p">(</span><span class="n">n_neighbors</span><span class="o">=</span><span class="mi">3</span><span class="p">)</span>

<span class="n">knr</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">knr</span><span class="p">.</span><span class="nf">predict</span><span class="p">([[</span><span class="mi">50</span><span class="p">]]))</span> 
<span class="c1">#### 결과값 1033.3333
</span>
<span class="c1">### 실제 농어 무게는 훨씬 무거움
### 표로 그려보기
</span><span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="c1">## 훈련 세트 산점도 그리기
</span><span class="n">plt</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>

<span class="c1">## 길이가 50cm 일 때의 이웃들 구하기
</span><span class="n">distances</span><span class="p">,</span> <span class="n">indexes</span> <span class="o">=</span> <span class="n">knr</span><span class="p">.</span><span class="nf">kneighbors</span><span class="p">([[</span><span class="mi">50</span><span class="p">]])</span>

<span class="c1">## 50cm의 이웃들만 따로 그리기 - 주황색
</span><span class="n">plt</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">train_input</span><span class="p">[</span><span class="n">indexes</span><span class="p">],</span> <span class="n">train_target</span><span class="p">[</span><span class="n">indexes</span><span class="p">],</span> <span class="n">marker</span><span class="o">=</span><span class="sh">'</span><span class="s">D</span><span class="sh">'</span><span class="p">)</span>

<span class="c1">### 50cm, 1033g은 초록색으로
</span><span class="n">plt</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="mi">50</span><span class="p">,</span> <span class="mi">1033</span><span class="p">,</span> <span class="n">marker</span><span class="o">=</span><span class="sh">'</span><span class="s">^</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">length</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">weight</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-04-15-ml_02/image-20250415153728872.png" alt="image-20250415153728872" /></p>

<p>np.mean(train_target[indexes])를 해도 1033.333이 나온다</p>

<p>k-최근접 이웃 회귀는 가장 가까운 샘플을 찾아 타깃을 평균하기 때문에,</p>

<p>새로운 샘플이 훈련 세트의 범위를 벗어나면 값을 이상하게 예측할 수 있다.</p>

<p>예를 들면, 길이가 100cm인 농어여도 여전히 1033g으로 예측한다.</p>

<p>이런 문제를 해결하기 위해 선형 회귀를 사용해보자.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">sklearn.linear_model</span> <span class="kn">import</span> <span class="n">LinearRegression</span>

<span class="n">lr</span> <span class="o">=</span> <span class="nc">LinearRegression</span><span class="p">()</span>
<span class="n">lr</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>

<span class="n">lr</span><span class="p">.</span><span class="nf">predict</span><span class="p">([[</span><span class="mi">50</span><span class="p">]])</span>
<span class="c1">### 결과 값 1241.83
</span>

<span class="c1">### 선형회귀 그래프 그려보기
</span>
<span class="c1"># coef 기울기(계수, 가중치), intercept 절편
</span><span class="nf">print</span><span class="p">(</span><span class="n">lr</span><span class="p">.</span><span class="n">coef_</span><span class="p">,</span> <span class="n">lr</span><span class="p">.</span><span class="n">intercept_</span><span class="p">)</span>
<span class="c1">## 39.01714496, -709.186449535477
</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>

<span class="c1">### 15cm부터 50cm까지 1차 방정식 그래프 그리기
</span><span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">([</span><span class="mi">15</span><span class="p">,</span><span class="mi">50</span><span class="p">],</span> <span class="p">[</span><span class="mi">15</span><span class="o">*</span><span class="n">lr</span><span class="p">.</span><span class="n">coef_</span><span class="o">+</span><span class="n">lr</span><span class="p">.</span><span class="n">intercept_</span><span class="p">,</span> <span class="mi">50</span><span class="o">*</span><span class="n">lr</span><span class="p">.</span><span class="n">coef_</span><span class="o">+</span><span class="n">lr</span><span class="p">.</span><span class="n">intercept_</span><span class="p">])</span>


<span class="c1">## 50cm 농어 표시
</span><span class="n">plt</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="mi">50</span><span class="p">,</span><span class="mf">1241.83</span><span class="p">,</span> <span class="n">marker</span><span class="o">=</span><span class="sh">'</span><span class="s">^</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">length</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">weight</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-04-15-ml_02/image-20250415154641040.png" alt="image-20250415154641040" /></p>

<p>하지만 훈련 세트, 테스트 세트 R제곱(결정계수) 값을 구해보면</p>

<p><img src="../../../../images/2025-04-15-ml_02/image-20250415154845839.png" alt="image-20250415154845839" /></p>

<p>테스트 세트 결과가 너무 떨어지고 훈련 세트도 낮은 편이다.</p>

<p>선형 회귀에서는 한계가 있다.</p>

<p>.</p>

<p>.</p>

<h3 id="2-다항-회귀">2. 다항 회귀</h3>

<p><img src="../../../../images/2025-04-15-ml_02/image-20250415155114599.png" alt="image-20250415155114599" style="zoom:80%;" /></p>

<p>다항식으로 만드려면 농어의 길이를 제곱하고 원래 데이터 앞에 붙여준다</p>

<p><img src="../../../../images/2025-04-15-ml_02/image-20250415155236836.png" alt="image-20250415155236836" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">train_poly</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">column_stack</span><span class="p">((</span><span class="n">train_input</span><span class="o">**</span><span class="mi">2</span><span class="p">,</span> <span class="n">train_input</span><span class="p">))</span>
<span class="n">test_poly</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">column_stack</span><span class="p">((</span><span class="n">test_input</span><span class="o">**</span><span class="mi">2</span><span class="p">,</span> <span class="n">test_input</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="n">train_poly</span><span class="p">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">test_poly</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
<span class="c1">## (42,2) (14,2)
</span>

<span class="c1">## 그리고 회귀 모델
</span><span class="n">lr</span> <span class="o">=</span> <span class="nc">LinearRegrssion</span><span class="p">()</span>
<span class="n">lr</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_poly</span><span class="p">,</span> <span class="n">test_poly</span><span class="p">)</span>

<span class="c1">## 50cm 농어 무게 예측
</span><span class="nf">print</span><span class="p">(</span><span class="n">lr</span><span class="p">.</span><span class="nf">predict</span><span class="p">([[</span><span class="mi">50</span><span class="o">**</span><span class="mi">2</span><span class="p">,</span> <span class="mi">50</span><span class="p">]]))</span>
<span class="c1">### 결과 값 1573.98
</span>

<span class="c1">### 그래프 그려보기
</span><span class="nf">print</span><span class="p">(</span><span class="n">lr</span><span class="p">.</span><span class="n">coef_</span><span class="p">,</span> <span class="n">lr</span><span class="p">.</span><span class="n">intercept_</span><span class="p">)</span>
<span class="c1">##(array([  1.01433211, -21.55792498]), 116.0502107827827)
</span>
<span class="n">point</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">arange</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">50</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">point</span><span class="p">,</span> <span class="mf">1.01</span><span class="o">*</span><span class="n">point</span><span class="o">**</span><span class="mi">2</span> <span class="o">-</span> <span class="mf">21.6</span><span class="o">*</span><span class="n">point</span> <span class="o">+</span> <span class="n">lr</span><span class="p">.</span><span class="n">intercept_</span> <span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">scatter</span><span class="p">([</span><span class="mi">50</span><span class="p">],[</span><span class="mi">1574</span><span class="p">],</span><span class="n">marker</span><span class="o">=</span><span class="sh">'</span><span class="s">^</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-04-15-ml_02/image-20250415155735117.png" alt="image-20250415155735117" /></p>

<p>.</p>

<p>.</p>

<h3 id="3-다중-회귀">3. 다중 회귀</h3>

<p>농어의 길이 외에 높이와 두께 데이터도 있다면?</p>

<p>데이터 특성이 많을 수록 좋은 결과를 얻을 수 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span><span class="sh">'</span><span class="s">https://bit.ly/perch_csv</span><span class="sh">'</span><span class="p">)</span>
<span class="n">perch_full</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="nf">to_numpy</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-04-15-ml_02/image-20250415160336500.png" alt="image-20250415160336500" /></p>

<p><img src="../../../../images/2025-04-15-ml_02/image-20250415160352138.png" alt="image-20250415160352138" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>

<span class="n">train_input</span><span class="p">,</span> <span class="n">test_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">,</span> <span class="n">test_target</span> <span class="o">=</span> <span class="nf">train_test_split</span><span class="p">(</span>
<span class="n">perch_full</span><span class="p">,</span> <span class="n">perch_weight</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>


<span class="c1">### 다항 특성
</span>
<span class="kn">from</span> <span class="n">sklearn.preprocessing</span> <span class="kn">import</span> <span class="n">PolynomialFeatures</span>

<span class="c1">## 기본 degree=2
</span><span class="n">poly</span> <span class="o">=</span> <span class="nc">PolynomialFeatures</span><span class="p">(</span><span class="n">include_bias</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
<span class="n">poly</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_input</span><span class="p">)</span>
<span class="n">train_poly</span> <span class="o">=</span> <span class="n">poly</span><span class="p">.</span><span class="nf">transform</span><span class="p">(</span><span class="n">train_input</span><span class="p">)</span>
<span class="n">test_poly</span> <span class="o">=</span> <span class="n">poly</span><span class="p">.</span><span class="nf">transform</span><span class="p">(</span><span class="n">test_input</span><span class="p">)</span>

<span class="kn">from</span> <span class="n">sklearn.linear_model</span> <span class="kn">import</span> <span class="n">LinearRegression</span>
<span class="n">lr</span> <span class="o">=</span> <span class="nc">LinearRegression</span><span class="p">()</span>
<span class="n">lr</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_poly</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">lr</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">train_poly</span><span class="p">,</span> <span class="n">train_target</span><span class="p">))</span>
<span class="c1">## 결과 0.99031834
</span>

<span class="nf">print</span><span class="p">(</span><span class="n">lr</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">test_poly</span><span class="p">,</span> <span class="n">test_target</span><span class="p">))</span>
<span class="c1">### 결과 0.97145599
</span></code></pre></div></div>

<p>.</p>

<p>.</p>

<h3 id="4-규제">4. 규제</h3>

<p>PolynomialFeatures 클래스에서 degree를 올린다면?</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">poly</span> <span class="o">=</span> <span class="nc">PolynomialFeatures</span><span class="p">(</span><span class="n">degree</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span> <span class="n">include_bias</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
<span class="n">poly</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_input</span><span class="p">)</span>

<span class="n">train_poly</span> <span class="o">=</span> <span class="n">poly</span><span class="p">.</span><span class="nf">transform</span><span class="p">(</span><span class="n">train_input</span><span class="p">)</span>
<span class="n">test_poly</span> <span class="o">=</span> <span class="n">poly</span><span class="p">.</span><span class="nf">transform</span><span class="p">(</span><span class="n">test_input</span><span class="p">)</span>

<span class="kn">from</span> <span class="n">sklearn.linear_model</span> <span class="kn">import</span> <span class="n">LinearRegression</span>
<span class="n">lr</span> <span class="o">=</span> <span class="nc">LinearRegression</span><span class="p">()</span>
<span class="n">lr</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_poly</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">lr</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">train_poly</span><span class="p">,</span> <span class="n">train_target</span><span class="p">))</span>
<span class="c1">## 결과 0.999999
</span>
<span class="nf">print</span><span class="p">(</span><span class="n">lr</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">test_poly</span><span class="p">,</span> <span class="n">test_target</span><span class="p">))</span>
<span class="c1">## 결과 -144.4056
</span></code></pre></div></div>

<p>train_poly.shpae를 하면 (42, 55)가 나온다.</p>

<p>만들어진 특성의 개수가 55개라는 뜻이다.</p>

<p>특성의 개수를 늘리면 선형모델이 훈련 세트에 대해 거의 완벽하게 학습할 수 있다.</p>

<p>하지만 이렇게 되면 훈련 세트에 너무 과대적합되어 테스트 세트에서는 형편없는 점수를 만든다.</p>

<p>이것을 막기 위해 규제를 한다</p>

<p><img src="../../../../images/2025-04-15-ml_02/image-20250415162031492.png" alt="image-20250415162031492" style="zoom:80%;" /></p>

<p>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">sklearn.preprocessing</span> <span class="kn">import</span> <span class="n">StandardScaler</span>

<span class="n">ss</span><span class="o">=</span> <span class="nc">StandardScaler</span><span class="p">()</span>
<span class="n">ss</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_poly</span><span class="p">)</span>
<span class="n">train_scaled</span> <span class="o">=</span> <span class="n">ss</span><span class="p">.</span><span class="nf">transform</span><span class="p">(</span><span class="n">train_poly</span><span class="p">)</span>
<span class="n">test_scaled</span><span class="o">=</span><span class="n">ss</span><span class="p">.</span><span class="nf">transform</span><span class="p">(</span><span class="n">test_poly</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-04-15-ml_02/image-20250415162327971.png" alt="image-20250415162327971" /></p>

<p>.</p>

<p>릿지 회귀</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">sklearn.linear_model</span> <span class="kn">import</span> <span class="n">Ridge</span>

<span class="n">ridge</span> <span class="o">=</span> <span class="nc">Ridge</span><span class="p">()</span>
<span class="n">ridge</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">ridge</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">))</span> <span class="c1">## 0.9896
</span><span class="nf">print</span><span class="p">(</span><span class="n">ridge</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">test_scaled</span><span class="p">,</span> <span class="n">test_target</span><span class="p">))</span> <span class="c1">## 0.9790
</span></code></pre></div></div>

<p>규제의 양을 조절할 수 있고 모델 객체를 만들 때 alpha의 매개변수로 규제의 강도를 조절한다.</p>

<p>alpha의 값이 크면 규제 강도가 세지므로 계수 값을 더 줄이고 좀 더 과소적합되도록 유도한다.</p>

<p>alpha 값이 작으면 선형 회귀 모델과 유사해지므로 과대 적합될 가능성이 높아진다.</p>

<p>.</p>

<p>적절한 alpha 값을 찾는 방법은 alpha 값에 대한 R제곱(결정계수) 값의 그래프를 그려 보는 것.</p>

<p>훈련 세트와 테스트 세트의 점수가 가장 가까운 지점이 최적이 alpha 값.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="n">train_score</span><span class="o">=</span><span class="p">[]</span>
<span class="n">test_score</span><span class="o">=</span><span class="p">[]</span>

<span class="n">alpha_list</span> <span class="o">=</span> <span class="p">[</span><span class="mf">0.001</span><span class="p">,</span><span class="mf">0.01</span><span class="p">,</span><span class="mf">0.1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">100</span><span class="p">]</span>

<span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">alpha_list</span><span class="p">:</span>
    <span class="n">ridge</span><span class="o">=</span> <span class="nc">Ridge</span><span class="p">(</span><span class="n">alpha</span><span class="o">=</span><span class="n">a</span><span class="p">)</span>
    <span class="n">ridge</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>
    
    <span class="n">train_score</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">ridge</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span><span class="n">train_target</span><span class="p">))</span>
    <span class="n">test_score</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">ridge</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">test_scaled</span><span class="p">,</span> <span class="n">test_target</span><span class="p">))</span>
    

<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">log10</span><span class="p">(</span><span class="n">alpha_list</span><span class="p">),</span> <span class="n">train_score</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">log10</span><span class="p">(</span><span class="n">alpha_list</span><span class="p">),</span> <span class="n">test_score</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">alpha</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">R^2</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-04-15-ml_02/image-20250415163547944.png" alt="image-20250415163547944" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ridge</span><span class="o">=</span><span class="nc">Ridge</span><span class="p">(</span><span class="n">alpha</span><span class="o">=</span><span class="mf">0.1</span><span class="p">)</span>
<span class="n">ridge</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">ridge</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">))</span> <span class="c1">#0.9903815817570367
</span><span class="nf">print</span><span class="p">(</span><span class="n">ridge</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">test_scaled</span><span class="p">,</span> <span class="n">test_target</span><span class="p">))</span> <span class="c1">#0.9827976465386928
</span></code></pre></div></div>

<p>.</p>

<p>.</p>

<p>라쏘 회귀도 릿지 회귀와 매우 유사하다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">sklearn.linear_model</span> <span class="kn">import</span> <span class="n">Lasso</span>

<span class="n">lasso</span> <span class="o">=</span> <span class="nc">Lasso</span><span class="p">()</span>
<span class="n">lasso</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">lasso</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">))</span> <span class="c1">#0.989789897208096
</span><span class="nf">print</span><span class="p">(</span><span class="n">lasso</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">test_scaled</span><span class="p">,</span> <span class="n">test_target</span><span class="p">))</span> <span class="c1">#0.9800593698421883
</span>

<span class="c1">## 최적의 alpha 값
</span><span class="n">train_score</span><span class="o">=</span><span class="p">[]</span>
<span class="n">test_score</span><span class="o">=</span><span class="p">[]</span>

<span class="n">alpha_list</span> <span class="o">=</span> <span class="p">[</span><span class="mf">0.001</span><span class="p">,</span><span class="mf">0.01</span><span class="p">,</span><span class="mf">0.1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">100</span><span class="p">]</span>

<span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">alpha_list</span><span class="p">:</span>
    <span class="n">lasso</span> <span class="o">=</span> <span class="nc">Lasso</span><span class="p">(</span><span class="n">alpha</span><span class="o">=</span><span class="n">a</span><span class="p">,</span> <span class="n">max_iter</span><span class="o">=</span><span class="mi">10000</span><span class="p">)</span>
    <span class="n">lasso</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>
    
    <span class="n">train_score</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">lasso</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span><span class="n">train_target</span><span class="p">))</span>
    <span class="n">test_score</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">lasso</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">test_scaled</span><span class="p">,</span> <span class="n">test_target</span><span class="p">))</span>
    

<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">log10</span><span class="p">(</span><span class="n">alpha_list</span><span class="p">),</span> <span class="n">train_score</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">log10</span><span class="p">(</span><span class="n">alpha_list</span><span class="p">),</span> <span class="n">test_score</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">alpha</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">R^2</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-04-15-ml_02/image-20250415164050073.png" alt="image-20250415164050073" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">lasso</span> <span class="o">=</span> <span class="nc">Lasso</span><span class="p">(</span><span class="n">alpha</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
<span class="n">lasso</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">lasso</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">))</span> <span class="c1">#0.9888067471131867
</span><span class="nf">print</span><span class="p">(</span><span class="n">lasso</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">test_scaled</span><span class="p">,</span> <span class="n">test_target</span><span class="p">))</span> <span class="c1">#0.9824470598706695
</span>
</code></pre></div></div>

<p>라쏘 모델은 계수 값을 아예 0으로 만들 수 있다.</p>

<p>라쏘 모델의 계수는 coef_ 속성에 저장되어 있다.</p>

<p>np.sum(lasso.coef_==0) 을 하면 40개가 나온다. 55개의 특성 중 라쏘 모델이 사용한 특성이 15개 밖에 안 된다는 뜻이다.</p>

<p>라쏘 모델을 유용한 특성을 골라내는 용도로도 사용할 수 있다.</p>]]></content><author><name>jeong3427</name></author><category term="Machine_Learning" /><category term="python" /><category term="ml" /><category term="머신러닝" /><category term="sklearn" /><category term="회귀" /><category term="사이킷런" /><category term="넘파이" /><category term="numpy" /><category term="선형회귀" /><category term="다항회귀" /><category term="다중회귀" /><category term="릿지" /><category term="라쏘" /><summary type="html"><![CDATA[1. 선형 회귀]]></summary></entry><entry><title type="html">혼자 공부하는 머신러닝 01</title><link href="https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/04/14/ml_01.html" rel="alternate" type="text/html" title="혼자 공부하는 머신러닝 01" /><published>2025-04-14T00:00:00+09:00</published><updated>2025-04-14T00:00:00+09:00</updated><id>https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/04/14/ml_01</id><content type="html" xml:base="https://jeong3427.github.io//jekyll-theme-yat/machine_learning/2025/04/14/ml_01.html"><![CDATA[<h3 id="1-k-최근접-이웃-알고리즘">1. k-최근접 이웃 알고리즘</h3>

<p>유튜브 강의 : https://www.youtube.com/watch?v=GOCVVSMeIf8&amp;list=PLVsNizTWUw7HpqmdphX9hgyWl15nobgQX</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#도미데이터
</span><span class="n">bream_length</span> <span class="o">=</span> <span class="p">[</span><span class="mf">25.4</span><span class="p">,</span> <span class="mf">26.3</span><span class="p">,</span> <span class="mf">26.5</span><span class="p">,</span> <span class="mf">29.0</span><span class="p">,</span> <span class="mf">29.0</span><span class="p">,</span> <span class="mf">29.7</span><span class="p">,</span> <span class="mf">29.7</span><span class="p">,</span> <span class="mf">30.0</span><span class="p">,</span> <span class="mf">30.0</span><span class="p">,</span> <span class="mf">30.7</span><span class="p">,</span> <span class="mf">31.0</span><span class="p">,</span> <span class="mf">31.0</span><span class="p">,</span> <span class="mf">31.5</span><span class="p">,</span> <span class="mf">32.0</span><span class="p">,</span> <span class="mf">32.0</span><span class="p">,</span> <span class="mf">32.0</span><span class="p">,</span> <span class="mf">33.0</span><span class="p">,</span> <span class="mf">33.0</span><span class="p">,</span> <span class="mf">33.5</span><span class="p">,</span> <span class="mf">33.5</span><span class="p">,</span> <span class="mf">34.0</span><span class="p">,</span> <span class="mf">34.0</span><span class="p">,</span> <span class="mf">34.5</span><span class="p">,</span> <span class="mf">35.0</span><span class="p">,</span> <span class="mf">35.0</span><span class="p">,</span> <span class="mf">35.0</span><span class="p">,</span> <span class="mf">35.0</span><span class="p">,</span> <span class="mf">36.0</span><span class="p">,</span> <span class="mf">36.0</span><span class="p">,</span> <span class="mf">37.0</span><span class="p">,</span> <span class="mf">38.5</span><span class="p">,</span> <span class="mf">38.5</span><span class="p">,</span> <span class="mf">39.5</span><span class="p">,</span> <span class="mf">41.0</span><span class="p">,</span> <span class="mf">41.0</span><span class="p">]</span>

<span class="n">bream_weight</span> <span class="o">=</span> <span class="p">[</span><span class="mf">242.0</span><span class="p">,</span> <span class="mf">290.0</span><span class="p">,</span> <span class="mf">340.0</span><span class="p">,</span> <span class="mf">363.0</span><span class="p">,</span> <span class="mf">430.0</span><span class="p">,</span> <span class="mf">450.0</span><span class="p">,</span> <span class="mf">500.0</span><span class="p">,</span> <span class="mf">390.0</span><span class="p">,</span> <span class="mf">450.0</span><span class="p">,</span> <span class="mf">500.0</span><span class="p">,</span> <span class="mf">475.0</span><span class="p">,</span> <span class="mf">500.0</span><span class="p">,</span> <span class="mf">500.0</span><span class="p">,</span> <span class="mf">340.0</span><span class="p">,</span> <span class="mf">600.0</span><span class="p">,</span> <span class="mf">600.0</span><span class="p">,</span> <span class="mf">700.0</span><span class="p">,</span> <span class="mf">700.0</span><span class="p">,</span> <span class="mf">610.0</span><span class="p">,</span> <span class="mf">650.0</span><span class="p">,</span> <span class="mf">575.0</span><span class="p">,</span> <span class="mf">685.0</span><span class="p">,</span> <span class="mf">620.0</span><span class="p">,</span> <span class="mf">680.0</span><span class="p">,</span> <span class="mf">700.0</span><span class="p">,</span> <span class="mf">725.0</span><span class="p">,</span> <span class="mf">720.0</span><span class="p">,</span> <span class="mf">714.0</span><span class="p">,</span> <span class="mf">850.0</span><span class="p">,</span> <span class="mf">1000.0</span><span class="p">,</span> <span class="mf">920.0</span><span class="p">,</span> <span class="mf">955.0</span><span class="p">,</span> <span class="mf">925.0</span><span class="p">,</span> <span class="mf">975.0</span><span class="p">,</span> <span class="mf">950.0</span><span class="p">]</span>

<span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">bream_length</span><span class="p">,</span> <span class="n">bream_weight</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">length</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">weight</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-04-14-ml_01/image-20250414102727465.png" alt="image-20250414102727465" /></p>

<p>.</p>

<p>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 빙어 데이터
</span><span class="n">smelt_length</span> <span class="o">=</span> <span class="p">[</span><span class="mf">9.8</span><span class="p">,</span> <span class="mf">10.5</span><span class="p">,</span> <span class="mf">10.6</span><span class="p">,</span> <span class="mf">11.0</span><span class="p">,</span> <span class="mf">11.2</span><span class="p">,</span> <span class="mf">11.3</span><span class="p">,</span> <span class="mf">11.8</span><span class="p">,</span> <span class="mf">11.8</span><span class="p">,</span> <span class="mf">12.0</span><span class="p">,</span> <span class="mf">12.2</span><span class="p">,</span> <span class="mf">12.4</span><span class="p">,</span> <span class="mf">13.0</span><span class="p">,</span> <span class="mf">14.3</span><span class="p">,</span> <span class="mf">15.0</span><span class="p">]</span>
<span class="n">smelt_weight</span> <span class="o">=</span> <span class="p">[</span><span class="mf">6.7</span><span class="p">,</span> <span class="mf">7.5</span><span class="p">,</span> <span class="mf">7.0</span><span class="p">,</span> <span class="mf">9.7</span><span class="p">,</span> <span class="mf">9.8</span><span class="p">,</span> <span class="mf">8.7</span><span class="p">,</span> <span class="mf">10.0</span><span class="p">,</span> <span class="mf">9.9</span><span class="p">,</span> <span class="mf">9.8</span><span class="p">,</span> <span class="mf">12.2</span><span class="p">,</span> <span class="mf">13.4</span><span class="p">,</span> <span class="mf">12.2</span><span class="p">,</span> <span class="mf">19.7</span><span class="p">,</span> <span class="mf">19.9</span><span class="p">]</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">bream_length</span><span class="p">,</span> <span class="n">bream_weight</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">smelt_length</span><span class="p">,</span> <span class="n">smelt_weight</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">length</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">weight</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-04-14-ml_01/image-20250414102903230.png" alt="image-20250414102903230" /></p>

<p>빙어는 주황색, 도미는 파란색</p>

<p>크기와 무게가 주어졌을 때, 빙어인지 도미인지 판단하는 머신 러닝</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 한 리스트에 두 데이터 합치기
</span><span class="n">length</span> <span class="o">=</span> <span class="n">bream_length</span> <span class="o">+</span> <span class="n">smelt_length</span>
<span class="n">weight</span> <span class="o">=</span> <span class="n">bream_weight</span> <span class="o">+</span> <span class="n">smelt_weight</span>

<span class="c1">#2차원 배열로 만들기
</span><span class="n">fish_data</span> <span class="o">=</span> <span class="p">[[</span><span class="n">l</span><span class="p">,</span><span class="n">w</span><span class="p">]</span> <span class="k">for</span> <span class="n">l</span><span class="p">,</span><span class="n">w</span> <span class="ow">in</span> <span class="nf">zip</span><span class="p">(</span><span class="n">length</span><span class="p">,</span> <span class="n">weight</span><span class="p">)]</span>

<span class="c1">#정답 데이터 준비. 도미인지 빙어인지 정답지 --&gt; 지도학습
</span><span class="n">fish_target</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="mi">35</span> <span class="o">+</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="mi">14</span>

<span class="c1"># k-최근접 이웃
</span><span class="kn">from</span> <span class="n">sklearn.neighbors</span> <span class="kn">import</span> <span class="n">KNeighborsClassifier</span>

<span class="n">kn</span><span class="o">=</span> <span class="nc">KNeighborsClassifier</span><span class="p">()</span>
<span class="n">kn</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">fish_data</span><span class="p">,</span> <span class="n">fish_target</span><span class="p">)</span>

<span class="n">kn</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">fish_data</span><span class="p">,</span> <span class="n">fish_target</span><span class="p">)</span>
</code></pre></div></div>

<p>fit() 함수를 쓰면 모델 학습</p>

<p>kn.predict(리스트의 리스트) -&gt; 원하는(도미인지 빙어인지) 결과값 도출</p>

<p>kn.score()를 했을 때 높을 수록 잘 맞춘다는 뜻 (정확도)</p>

<p><img src="../../../../images/2025-04-14-ml_01/image-20250414103124299.png" alt="image-20250414103124299" /></p>

<p>KNeighborsClassifier는 클래스의 기본값이 5.</p>

<p>만약 데이터를 49개(지금 도미, 빙어 데이터 전체 개수가 49개)를 사용하게 되면</p>

<p>49개 데이터 중에 도미가 35개로 다수라서, 어떤 데이터를 넣어도 무조건 도미로 예측</p>

<p><img src="../../../../images/2025-04-14-ml_01/image-20250414103422121.png" alt="image-20250414103422121" /></p>

<p>.</p>

<p>.</p>

<h3 id="2-넘파이-변형">2. 넘파이 변형</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="c1">## 넘파이 배열로 변경
</span><span class="n">input_arr</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">(</span><span class="n">fish_data</span><span class="p">)</span>
<span class="n">target_arr</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">(</span><span class="n">fish_target</span><span class="p">)</span>
</code></pre></div></div>

<p>.</p>

<p>방법1 : 넘파이 셔플을 통해 순서 재배치</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">index</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">arange</span><span class="p">(</span><span class="mi">49</span><span class="p">)</span> <span class="c1">## 0~48
</span><span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="nf">shuffle</span><span class="p">(</span><span class="n">index</span><span class="p">)</span>

<span class="n">train_input</span> <span class="o">=</span> <span class="n">input_arr</span><span class="p">[</span><span class="n">index</span><span class="p">[:</span><span class="mi">35</span><span class="p">]]</span>
<span class="n">train_target</span> <span class="o">=</span> <span class="n">target_arr</span><span class="p">[</span><span class="n">index</span><span class="p">[:</span><span class="mi">35</span><span class="p">]]</span>

<span class="n">test_input</span><span class="o">=</span> <span class="n">input_arr</span><span class="p">[</span><span class="n">index</span><span class="p">[</span><span class="mi">35</span><span class="p">:]]</span>
<span class="n">test_target</span> <span class="o">=</span> <span class="n">target_arr</span><span class="p">[</span><span class="n">index</span><span class="p">[</span><span class="mi">35</span><span class="p">:]]</span>

<span class="c1">## 훈련
</span><span class="n">kn</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>
</code></pre></div></div>

<p>.</p>

<p>방법2 : 사이킷런 사용</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## np.column_stack() 옆으로 붙이기
</span><span class="n">np_fish_data</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">column_stack</span><span class="p">((</span><span class="n">fish_length</span><span class="p">,</span> <span class="n">fish_weight</span><span class="p">))</span>

<span class="c1">## np.concatenate() 한줄로 이어 붙이기
</span><span class="n">np_fish_target</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">concatenate</span><span class="p">((</span><span class="n">np</span><span class="p">.</span><span class="nf">ones</span><span class="p">(</span><span class="mi">35</span><span class="p">),</span> <span class="n">np</span><span class="p">.</span><span class="nf">zeros</span><span class="p">(</span><span class="mi">14</span><span class="p">)))</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-04-14-ml_01/image-20250414104106378.png" alt="image-20250414104106378" style="zoom: 67%;" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>

<span class="n">train_input</span><span class="p">,</span> <span class="n">test_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">,</span> <span class="n">test_target</span> <span class="o">=</span> <span class="nf">train_test_split</span><span class="p">(</span>
<span class="n">np_fish_data</span><span class="p">,</span> <span class="n">np_fish_target</span><span class="p">,</span> <span class="n">stratify</span><span class="o">=</span><span class="n">np_fish_target</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>

<span class="n">kn</span> <span class="o">=</span> <span class="nc">KNeighborsClassifier</span><span class="p">()</span>
<span class="n">kn</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_input</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>
<span class="n">kn</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">test_input</span><span class="p">,</span> <span class="n">test_target</span><span class="p">)</span>
</code></pre></div></div>

<p>.</p>

<p>.</p>

<h3 id="3-스케일-조정">3. 스케일 조정</h3>

<p>길이25cm 무게150g인 생선은? 도미.</p>

<p>하지만 kn.predict([[25, 150]])할 경우 빙어로 분류한다</p>

<p><img src="../../../../images/2025-04-14-ml_01/image-20250414105229574.png" alt="image-20250414105229574" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">train_input</span><span class="p">[:,</span><span class="mi">0</span><span class="p">],</span> <span class="n">train_input</span><span class="p">[:,</span><span class="mi">1</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="mi">25</span><span class="p">,</span><span class="mi">150</span><span class="p">,</span> <span class="n">marker</span><span class="o">=</span><span class="sh">'</span><span class="s">^</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">train_input</span><span class="p">[</span><span class="n">indexes</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span> <span class="n">train_input</span><span class="p">[</span><span class="n">indexes</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span><span class="n">marker</span><span class="o">=</span><span class="sh">'</span><span class="s">D</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">length</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">weight</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>

<span class="n">distances</span><span class="p">,</span> <span class="n">indexes</span> <span class="o">=</span> <span class="n">kn</span><span class="p">.</span><span class="nf">kneighbors</span><span class="p">([[</span><span class="mi">25</span><span class="p">,</span> <span class="mi">150</span><span class="p">]])</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-04-14-ml_01/image-20250414105340738.png" alt="image-20250414105340738" /></p>

<p>주황색 세모가 25,150도미</p>

<p>가까운 이웃 5개를 표기한 초록색 다이아몬드 중에 4개는 빙어다</p>

<p>y축과 x축 스케일이 맞지 않아서 생긴 일</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># x, y축 스케일 맞추면?
##표준 점수로 바꿔서 스케일 맞추기
</span>
<span class="n">mean</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">train_input</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="n">std</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">std</span><span class="p">(</span><span class="n">train_input</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">mean</span><span class="p">,</span> <span class="n">std</span><span class="p">)</span>
<span class="c1">##[ 27.29722222 454.09722222] [  9.98244253 323.29893931]
</span>
<span class="n">train_scaled</span> <span class="o">=</span> <span class="p">(</span><span class="n">train_input</span> <span class="o">-</span> <span class="n">mean</span><span class="p">)</span> <span class="o">/</span> <span class="n">std</span>

<span class="n">new</span> <span class="o">=</span> <span class="p">([</span><span class="mi">25</span><span class="p">,</span> <span class="mi">150</span><span class="p">]</span> <span class="o">-</span><span class="n">mean</span><span class="p">)</span> <span class="o">/</span> <span class="n">std</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">[:,</span><span class="mi">0</span><span class="p">],</span> <span class="n">train_scaled</span><span class="p">[:,</span><span class="mi">1</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">new</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="n">new</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">marker</span><span class="o">=</span><span class="sh">'</span><span class="s">^</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">length</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">weight</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-04-14-ml_01/image-20250414105639090.png" alt="image-20250414105639090" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">kn</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">,</span> <span class="n">train_target</span><span class="p">)</span>
<span class="n">test_scaled</span><span class="o">=</span><span class="p">(</span><span class="n">test_input</span><span class="o">-</span><span class="n">mean</span><span class="p">)</span> <span class="o">/</span> <span class="n">std</span>

<span class="n">kn</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">test_scaled</span><span class="p">,</span> <span class="n">test_target</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-04-14-ml_01/image-20250414105826154.png" alt="image-20250414105826154" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">[:,</span><span class="mi">0</span><span class="p">],</span> <span class="n">train_scaled</span><span class="p">[:,</span><span class="mi">1</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">new</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">new</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">marker</span><span class="o">=</span><span class="sh">'</span><span class="s">^</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">train_scaled</span><span class="p">[</span><span class="n">indexes</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span> <span class="n">train_scaled</span><span class="p">[</span><span class="n">indexes</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span><span class="n">marker</span><span class="o">=</span><span class="sh">'</span><span class="s">D</span><span class="sh">'</span> <span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">length</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">weight</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="../../../../images/2025-04-14-ml_01/image-20250414105904899.png" alt="image-20250414105904899" /></p>]]></content><author><name>jeong3427</name></author><category term="Machine_Learning" /><category term="python" /><category term="ml" /><category term="머신러닝" /><category term="sklearn" /><category term="k-최근접" /><category term="사이킷런" /><category term="넘파이" /><category term="numpy" /><summary type="html"><![CDATA[1. k-최근접 이웃 알고리즘]]></summary></entry></feed>